// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_290_RECTIFIC_PEDIMENTO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir290RectificPedimento
    {
        [Required]
        [Display(Name = "N ID recti 290")]
        public int NIdRecti290 { get; set; } // nIdRecti290 (Primary key)

        [Required]
        [Display(Name = "N ID clave docto 28")]
        public int NIdClaveDocto28 { get; set; } // nIdClaveDocto28

        [Display(Name = "N ID patente 70")]
        public int? NIdPatente70 { get; set; } // nIdPatente70

        [Required]
        [Display(Name = "N ID adu sec 06")]
        public int NIdAduSec06 { get; set; } // nIdAduSec06

        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "S pedimento")]
        public string SPedimento { get; set; } // sPedimento (length: 7)

        [Display(Name = "N vehiculos")]
        public int? NVehiculos { get; set; } // nVehiculos

        [Display(Name = "D pago temporal")]
        public System.DateTime? DPagoTemporal { get; set; } // dPagoTemporal

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "S patente")]
        public string SPatente { get; set; } // sPatente (length: 4)

        [Display(Name = "D pago original")]
        public System.DateTime? DPagoOriginal { get; set; } // dPagoOriginal

        [Display(Name = "N factor inpc")]
        public decimal? NFactorInpc { get; set; } // nFactorINPC

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir60Referencia where [SIR_60_REFERENCIAS].[nIdRecti290] point to this entity (FK_SIR_60_REFERENCIAS_SIR_290_RECTIFIC_PEDIMENTO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir60Referencia> SIR_Sir60Referencia { get; set; } // SIR_60_REFERENCIAS.FK_SIR_60_REFERENCIAS_SIR_290_RECTIFIC_PEDIMENTO

        // Foreign keys

        /// <summary>
        /// Parent CatUsr pointed by [SIR_290_RECTIFIC_PEDIMENTO].([NIdUsuarioEd]) (FK_SIR_290_RECTIFIC_PEDIMENTO_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_290_RECTIFIC_PEDIMENTO_cat_usr_ed

        /// <summary>
        /// Parent SIR_Sir06AduanaSec pointed by [SIR_290_RECTIFIC_PEDIMENTO].([NIdAduSec06]) (FK_SIR_290_RECTIFIC_PEDIMENTO_SIR_06_ADUANA_SEC)
        /// </summary>
        public virtual SIR_Sir06AduanaSec SIR_Sir06AduanaSec { get; set; } // FK_SIR_290_RECTIFIC_PEDIMENTO_SIR_06_ADUANA_SEC

        /// <summary>
        /// Parent SIR_Sir28ClavesDocto pointed by [SIR_290_RECTIFIC_PEDIMENTO].([NIdClaveDocto28]) (FK_SIR_290_RECTIFIC_PEDIMENTO_SIR_28_CLAVES_DOCTOS)
        /// </summary>
        public virtual SIR_Sir28ClavesDocto SIR_Sir28ClavesDocto { get; set; } // FK_SIR_290_RECTIFIC_PEDIMENTO_SIR_28_CLAVES_DOCTOS

        /// <summary>
        /// Parent SIR_Sir70Patente pointed by [SIR_290_RECTIFIC_PEDIMENTO].([NIdPatente70]) (FK_SIR_290_RECTIFIC_PEDIMENTO_SIR_70_PATENTES)
        /// </summary>
        public virtual SIR_Sir70Patente SIR_Sir70Patente { get; set; } // FK_SIR_290_RECTIFIC_PEDIMENTO_SIR_70_PATENTES

        public SIR_Sir290RectificPedimento()
        {
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            SIR_Sir60Referencia = new System.Collections.Generic.List<SIR_Sir60Referencia>();
        }
    }

}
// </auto-generated>
