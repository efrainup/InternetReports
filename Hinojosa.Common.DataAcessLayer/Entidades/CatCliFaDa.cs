// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_cli_fa_da
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatCliFaDa
    {
        [Required]
        [Display(Name = "Id cli fa da")]
        public int IdCliFaDa { get; set; } // id_cli_fa_da (Primary key)

        [Required]
        [Display(Name = "Id cli")]
        public int IdCli { get; set; } // id_cli

        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Nom 1")]
        public string Nom1 { get; set; } // nom1 (length: 128)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Nom 2")]
        public string Nom2 { get; set; } // nom2 (length: 128)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Dir 1")]
        public string Dir1 { get; set; } // dir1 (length: 255)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Ciu")]
        public string Ciu { get; set; } // ciu (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Est")]
        public string Est { get; set; } // est (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Cp")]
        public string Cp { get; set; } // cp (length: 10)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Rfc")]
        public string Rfc { get; set; } // rfc (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Tel 1")]
        public string Tel1 { get; set; } // tel1 (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Tel 2")]
        public string Tel2 { get; set; } // tel2 (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // email (length: 200)

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Tip cli")]
        public byte TipCli { get; set; } // tip_cli

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Ap pat")]
        public string ApPat { get; set; } // ap_pat (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Ap mat")]
        public string ApMat { get; set; } // ap_mat (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(48)]
        [StringLength(48)]
        [Display(Name = "Nombre")]
        public string Nombre { get; set; } // nombre (length: 48)

        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Calle")]
        public string Calle { get; set; } // calle (length: 80)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Num int")]
        public string NumInt { get; set; } // num_int (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Num ext")]
        public string NumExt { get; set; } // num_ext (length: 30)

        [MaxLength(70)]
        [StringLength(70)]
        [Display(Name = "Col")]
        public string Col { get; set; } // col (length: 70)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Deleg")]
        public string Deleg { get; set; } // deleg (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Curp")]
        public string Curp { get; set; } // curp (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Calles")]
        public string Calles { get; set; } // calles (length: 40)

        [Required]
        [Display(Name = "Tipo")]
        public byte Tipo { get; set; } // tipo

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required(AllowEmptyStrings = true)]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Clave")]
        public string Clave { get; set; } // clave (length: 12)

        [Required]
        [Display(Name = "Id med env")]
        public int IdMedEnv { get; set; } // id_med_env

        [Required]
        [Display(Name = "Tipcliprov")]
        public byte Tipcliprov { get; set; } // tipcliprov

        [Required]
        [Display(Name = "Id pais")]
        public int IdPais { get; set; } // id_pais

        [Required]
        [Display(Name = "Id edo")]
        public int IdEdo { get; set; } // id_edo

        [Required]
        [Display(Name = "Id giro")]
        public int IdGiro { get; set; } // id_giro

        [Required]
        [Display(Name = "Id tip ter")]
        public int IdTipTer { get; set; } // id_tip_ter

        [Required]
        [Display(Name = "Id tip ope")]
        public int IdTipOpe { get; set; } // id_tip_ope

        [Required]
        [Display(Name = "Id tip inst")]
        public int IdTipInst { get; set; } // id_tip_inst

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Id otr sis")]
        public string IdOtrSis { get; set; } // id_otr_sis (length: 25)

        [Required]
        [Display(Name = "Id tip soc mer")]
        public int IdTipSocMer { get; set; } // id_tip_soc_mer

        [Required]
        [Display(Name = "Tip dir")]
        public int TipDir { get; set; } // tip_dir

        [Required]
        [Display(Name = "Num grp")]
        public int NumGrp { get; set; } // num_grp

        [Required]
        [Display(Name = "Id rel add")]
        public int IdRelAdd { get; set; } // id_rel_add

        [Required]
        [Display(Name = "C par rel")]
        public byte CParRel { get; set; } // c_par_rel

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pwd")]
        public string Pwd { get; set; } // pwd (length: 10)

        [Required]
        [Display(Name = "Id nom cfd")]
        public long IdNomCfd { get; set; } // id_nom_cfd

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Nacionalidad")]
        public string Nacionalidad { get; set; } // nacionalidad (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Id fis ext")]
        public string IdFisExt { get; set; } // id_fis_ext (length: 40)

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Num reg trib")]
        public string NumRegTrib { get; set; } // num_reg_trib (length: 40)

        [Required]
        [Display(Name = "Id mun")]
        public int IdMun { get; set; } // id_mun

        [Required]
        [Display(Name = "Id loc")]
        public int IdLoc { get; set; } // id_loc

        [Required]
        [Display(Name = "Id cp")]
        public int IdCp { get; set; } // id_cp

        [Required]
        [Display(Name = "Id col")]
        public int IdCol { get; set; } // id_col

        [Required]
        [Display(Name = "Id tip uso")]
        public int IdTipUso { get; set; } // id_tip_uso

        [Required]
        [Display(Name = "Id contacto")]
        public int IdContacto { get; set; } // id_Contacto

        public CatCliFaDa()
        {
            IdCliFaDa = 0;
            IdCli = 0;
            Nom1 = "";
            Nom2 = "";
            Dir1 = "";
            Ciu = "";
            Est = "";
            Cp = "";
            Rfc = "";
            Tel1 = "";
            Tel2 = "";
            Email = "";
            Status = 1;
            TipCli = 1;
            ApPat = "";
            ApMat = "";
            Nombre = "";
            Calle = "";
            NumInt = "";
            NumExt = "";
            Col = "";
            Deleg = "";
            Curp = "";
            Calles = "";
            Tipo = 1;
            IdUsr = 0;
            Clave = "";
            IdMedEnv = 0;
            Tipcliprov = 0;
            IdPais = 0;
            IdEdo = 0;
            IdGiro = 0;
            IdTipTer = 0;
            IdTipOpe = 0;
            IdTipInst = 0;
            IdOtrSis = "0";
            IdTipSocMer = 0;
            TipDir = 0;
            NumGrp = 0;
            IdRelAdd = 0;
            CParRel = 0;
            Pwd = "";
            IdNomCfd = 0;
            Nacionalidad = "";
            IdFisExt = "";
            IdMun = 0;
            IdLoc = 0;
            IdCp = 0;
            IdCol = 0;
            IdTipUso = 0;
            IdContacto = 0;
        }
    }

}
// </auto-generated>
