// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_145_CONFIG_RECINTOS_MUELL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir145ConfigRecintosMuell
    {
        [Required]
        [Display(Name = "N ID cong muell 145")]
        public int NIdCongMuell145 { get; set; } // nIdCongMuell145 (Primary key)

        [Required]
        [Display(Name = "N ID recinto")]
        public int NIdRecinto { get; set; } // nIdRecinto

        [Required]
        [Display(Name = "N dias libres")]
        public short NDiasLibres { get; set; } // nDiasLibres

        [Required]
        [Display(Name = "N dias libres recargo")]
        public short NDiasLibresRecargo { get; set; } // nDiasLibresRecargo

        [Required]
        [Display(Name = "B aplica muellaje")]
        public bool BAplicaMuellaje { get; set; } // bAplicaMuellaje

        [Required]
        [Display(Name = "N unidad cobro")]
        public int NUnidadCobro { get; set; } // nUnidadCobro

        [Required]
        [Display(Name = "N tipo tarifa")]
        public byte NTipoTarifa { get; set; } // nTipoTarifa

        [Required]
        [Display(Name = "B aplica carga suelta")]
        public bool BAplicaCargaSuelta { get; set; } // bAplicaCargaSuelta

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Display(Name = "N dias libres impo")]
        public int? NDiasLibresImpo { get; set; } // nDiasLibresImpo

        [Display(Name = "N dias libres expo")]
        public int? NDiasLibresExpo { get; set; } // nDiasLibresExpo

        [Display(Name = "N dias libres imo")]
        public int? NDiasLibresImo { get; set; } // nDiasLibresIMO

        [Display(Name = "N dias libres desis")]
        public int? NDiasLibresDesis { get; set; } // nDiasLibresDesis

        [Display(Name = "N dias libres alm")]
        public int? NDiasLibresAlm { get; set; } // nDiasLibresAlm

        [Display(Name = "N dias libres pago ad")]
        public int? NDiasLibresPagoAd { get; set; } // nDiasLibresPagoAd

        [Display(Name = "N dias prim plazo")]
        public int? NDiasPrimPlazo { get; set; } // nDiasPrimPlazo

        [Display(Name = "N dias seg plazo")]
        public int? NDiasSegPlazo { get; set; } // nDiasSegPlazo

        [Display(Name = "N dias ter plazo")]
        public int? NDiasTerPlazo { get; set; } // nDiasTerPlazo

        [Display(Name = "D porcent imo")]
        public decimal? DPorcentImo { get; set; } // dPorcentIMO

        [Display(Name = "N unidad cobro alm")]
        public int? NUnidadCobroAlm { get; set; } // nUnidadCobroAlm

        [Required]
        [Display(Name = "B aplica dias fest")]
        public bool BAplicaDiasFest { get; set; } // bAplicaDiasFest

        [Required]
        [Display(Name = "B aplica cont alm")]
        public bool BAplicaContAlm { get; set; } // bAplicaContAlm

        [Display(Name = "N tg eneral impo")]
        public decimal? NTGeneralImpo { get; set; } // nTGeneralImpo

        [Display(Name = "N tg eneral expo")]
        public decimal? NTGeneralExpo { get; set; } // nTGeneralExpo

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S siglas")]
        public string SSiglas { get; set; } // sSiglas (length: 12)

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S clave oficial")]
        public string SClaveOficial { get; set; } // sClaveOficial (length: 12)

        [Display(Name = "B predeterminado")]
        public bool? BPredeterminado { get; set; } // bPredeterminado

        [Display(Name = "B recinto fiscal")]
        public bool? BRecintoFiscal { get; set; } // bRecintoFiscal

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S aduana")]
        public string SAduana { get; set; } // sAduana (length: 12)

        [Display(Name = "N descuento")]
        public decimal? NDescuento { get; set; } // nDescuento

        [Display(Name = "N dias libres desis expo")]
        public int? NDiasLibresDesisExpo { get; set; } // nDiasLibresDesisExpo

        [Display(Name = "B tiene reporte personalizado")]
        public bool? BTieneReportePersonalizado { get; set; } // bTieneReportePersonalizado

        [MaxLength(3000)]
        [StringLength(3000)]
        [Display(Name = "S path reporte personalizado")]
        public string SPathReportePersonalizado { get; set; } // sPathReportePersonalizado (length: 3000)

        [Display(Name = "B estadisticas")]
        public bool? BEstadisticas { get; set; } // bEstadisticas

        // Foreign keys

        /// <summary>
        /// Parent CatProv pointed by [SIR_145_CONFIG_RECINTOS_MUELL].([NIdRecinto]) (FK_SIR_145_CONFIG_RECINTOS_MUELL_cat_prov)
        /// </summary>
        public virtual CatProv CatProv { get; set; } // FK_SIR_145_CONFIG_RECINTOS_MUELL_cat_prov

        /// <summary>
        /// Parent CatUsr pointed by [SIR_145_CONFIG_RECINTOS_MUELL].([NIdUsuarioEd]) (FK_SIR_145_CONFIG_RECINTOS_MUELL_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_145_CONFIG_RECINTOS_MUELL_cat_usr_ed

        public SIR_Sir145ConfigRecintosMuell()
        {
            BAplicaMuellaje = true;
            BAplicaCargaSuelta = false;
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            BAplicaDiasFest = false;
        }
    }

}
// </auto-generated>
