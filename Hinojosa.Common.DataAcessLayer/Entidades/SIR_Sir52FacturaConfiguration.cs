// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_52_FACTURAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir52FacturaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir52Factura>
    {
        public SIR_Sir52FacturaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir52FacturaConfiguration(string schema)
        {
            ToTable("SIR_52_FACTURAS", schema);
            HasKey(x => x.NIdFactura52);

            Property(x => x.NIdFactura52).HasColumnName(@"nIdFactura52").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdOperFact49).HasColumnName(@"nIdOperFact49").HasColumnType("int").IsOptional();
            Property(x => x.SNumero).HasColumnName(@"sNumero").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40);
            Property(x => x.DFecha).HasColumnName(@"dFecha").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdIncoterm53).HasColumnName(@"nIdIncoterm53").HasColumnType("int").IsOptional();
            Property(x => x.NExisteVinculacion).HasColumnName(@"nExisteVinculacion").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdMoneda03).HasColumnName(@"nIdMoneda03").HasColumnType("int").IsOptional();
            Property(x => x.NIdPais01).HasColumnName(@"nIdPais01").HasColumnType("int").IsOptional();
            Property(x => x.NValorFacturaMe).HasColumnName(@"nValorFacturaME").HasColumnType("decimal").IsRequired().HasPrecision(16,2);
            Property(x => x.NIdProveedor42).HasColumnName(@"nIdProveedor42").HasColumnType("int").IsOptional();
            Property(x => x.NIdEntidad).HasColumnName(@"nIdEntidad").HasColumnType("int").IsOptional();
            Property(x => x.NPeso).HasColumnName(@"nPeso").HasColumnType("decimal").IsRequired().HasPrecision(14,3);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NValorFacturaUs).HasColumnName(@"nValorFacturaUS").HasColumnType("decimal").IsRequired().HasPrecision(14,2);
            Property(x => x.NIdHistoParidad13).HasColumnName(@"nIdHistoParidad13").HasColumnType("int").IsOptional();
            Property(x => x.NIdOrdenCli146).HasColumnName(@"nIdOrdenCli146").HasColumnType("int").IsOptional();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsOptional();
            Property(x => x.NValorMercancias).HasColumnName(@"nValorMercancias").HasColumnType("decimal").IsRequired().HasPrecision(14,2);
            Property(x => x.BSinPartidas).HasColumnName(@"bSinPartidas").HasColumnType("bit").IsRequired();
            Property(x => x.NValorFactParidad).HasColumnName(@"nValorFactParidad").HasColumnType("decimal").IsRequired().HasPrecision(10,9);
            Property(x => x.NIdPaisFacPar01).HasColumnName(@"nIdPaisFacPar01").HasColumnType("int").IsOptional();
            Property(x => x.SHClavePais).HasColumnName(@"sHClavePais").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SHDescripcionPais).HasColumnName(@"sHDescripcionPais").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(72);
            Property(x => x.SHClavePaisFme).HasColumnName(@"sHClavePaisFME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SHClaveProv).HasColumnName(@"sHClaveProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.SHRazonSocial).HasColumnName(@"sHRazonSocial").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(120);
            Property(x => x.SHDirProveedor).HasColumnName(@"sHDirProveedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(80);
            Property(x => x.SHNumInt).HasColumnName(@"sHNumInt").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SHNumExt).HasColumnName(@"sHNumExt").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SHMunCiudad).HasColumnName(@"sHMunCiudad").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(360);
            Property(x => x.SHcpProv).HasColumnName(@"sHCPProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SHEntidadProv).HasColumnName(@"sHEntidadProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SHClavePaisProv).HasColumnName(@"sHClavePaisProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SHDescPaisProv).HasColumnName(@"sHDescPaisProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(72);
            Property(x => x.SHContactoProv).HasColumnName(@"sHContactoProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SHTelefono1).HasColumnName(@"sHTelefono1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SHTelefono2).HasColumnName(@"sHTelefono2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.NIdRem206).HasColumnName(@"nIdRem206").HasColumnType("int").IsOptional();
            Property(x => x.SHClaveMoneda).HasColumnName(@"sHClaveMoneda").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SHDescMoneda).HasColumnName(@"sHDescMoneda").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(42);
            Property(x => x.SHIdentificadorProv).HasColumnName(@"sHIdentificadorProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NCantidadCom).HasColumnName(@"nCantidadCom").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NNumBultos).HasColumnName(@"nNumBultos").HasColumnType("int").IsOptional();
            Property(x => x.NValMciaSinParte).HasColumnName(@"nValMciaSinParte").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.SNumeroLargo).HasColumnName(@"sNumeroLargo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NIdArchFac299).HasColumnName(@"nIdArchFac299").HasColumnType("int").IsOptional();
            Property(x => x.NIdEntFed02).HasColumnName(@"nIdEntFed02").HasColumnType("int").IsOptional();
            Property(x => x.SDescMciaFactura).HasColumnName(@"sDescMciaFactura").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.SEDocument).HasColumnName(@"sEDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.BSubdivision).HasColumnName(@"bSubdivision").HasColumnType("bit").IsOptional();
            Property(x => x.NCertificado).HasColumnName(@"nCertificado").HasColumnType("tinyint").IsOptional();
            Property(x => x.SObservaciones).HasColumnName(@"sObservaciones").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SExportador).HasColumnName(@"sExportador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SLugarEmision).HasColumnName(@"sLugarEmision").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NConsecutivo).HasColumnName(@"nConsecutivo").HasColumnType("int").IsOptional();
            Property(x => x.SShippingAdvice).HasColumnName(@"sShippingAdvice").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SPackinList).HasColumnName(@"sPackinList").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NMontoEuros).HasColumnName(@"nMontoEuros").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NMetrosCubicos).HasColumnName(@"nMetrosCubicos").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.DDueDate).HasColumnName(@"dDueDate").HasColumnType("datetime").IsOptional();
            Property(x => x.SNumeroFacturaExcel).HasColumnName(@"sNumeroFacturaExcel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NIdDestinatario).HasColumnName(@"nIdDestinatario").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DExportDate).HasColumnName(@"dExportDate").HasColumnType("datetime").IsOptional();
            Property(x => x.STienda).HasColumnName(@"sTienda").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SDescripcionFacturaIngles).HasColumnName(@"sDescripcionFacturaIngles").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SOperacionCove).HasColumnName(@"sOperacionCOVE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DValorFactParidadCove).HasColumnName(@"dValorFactParidadCOVE").HasColumnType("decimal").IsOptional().HasPrecision(10,9);
            Property(x => x.SEDocumentRespaldo).HasColumnName(@"sEDocumentRespaldo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.BConDescuento).HasColumnName(@"bConDescuento").HasColumnType("bit").IsOptional();
            Property(x => x.NFactorDescuento).HasColumnName(@"nFactorDescuento").HasColumnType("decimal").IsOptional().HasPrecision(16,5);
            Property(x => x.NValorFactOriginal).HasColumnName(@"nValorFactOriginal").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.NValorUsOriginal).HasColumnName(@"nValorUSOriginal").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NValorMercanciasOriginal).HasColumnName(@"nValorMercanciasOriginal").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NTipoDescuento).HasColumnName(@"nTipoDescuento").HasColumnType("tinyint").IsOptional();
            Property(x => x.NNivelSubdivision).HasColumnName(@"nNivelSubdivision").HasColumnType("tinyint").IsOptional();
            Property(x => x.NIdFacturaSubOrig52).HasColumnName(@"nIdFacturaSubOrig52").HasColumnType("int").IsOptional();
            Property(x => x.NIdCustomCode805).HasColumnName(@"nIdCustomCode805").HasColumnType("int").IsOptional();
            Property(x => x.BEsSubdivisionConsolidada).HasColumnName(@"bEsSubdivisionConsolidada").HasColumnType("bit").IsOptional();
            Property(x => x.SRfcEmisor).HasColumnName(@"sRFCEmisor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SRfcReceptor).HasColumnName(@"sRFCReceptor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SUuid).HasColumnName(@"sUUID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BCargaCfdi).HasColumnName(@"bCargaCFDI").HasColumnType("bit").IsOptional();
            Property(x => x.BCfdiValido).HasColumnName(@"bCFDIValido").HasColumnType("bit").IsOptional();
            Property(x => x.NIdRefOriginal60).HasColumnName(@"nIdRefOriginal60").HasColumnType("int").IsOptional();
            Property(x => x.SNumAdenda).HasColumnName(@"sNumAdenda").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.BSubdivisionRespaldo).HasColumnName(@"bSubdivisionRespaldo").HasColumnType("bit").IsOptional();
            Property(x => x.NEstatusConRt).HasColumnName(@"nEstatusConRT").HasColumnType("int").IsOptional();
            Property(x => x.STracking).HasColumnName(@"sTracking").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BCoveSubdivision).HasColumnName(@"bCOVESubdivision").HasColumnType("bit").IsOptional();
            Property(x => x.BCoveAdenda).HasColumnName(@"bCOVEAdenda").HasColumnType("bit").IsOptional();
            Property(x => x.SProvCertOrigen).HasColumnName(@"sProvCertOrigen").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NIdShipper346).HasColumnName(@"nIdShipper346").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.CatEdo).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdEntidad).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_cat_edos
            HasOptional(a => a.SIR_Sir01Pais_NIdPais01).WithMany(b => b.SIR_Sir52Factura_NIdPais01).HasForeignKey(c => c.NIdPais01).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_01_PAISES
            HasOptional(a => a.SIR_Sir01Pais_NIdPaisFacPar01).WithMany(b => b.SIR_Sir52Factura_NIdPaisFacPar01).HasForeignKey(c => c.NIdPaisFacPar01).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_01_PAISES_PARIDAD
            HasOptional(a => a.SIR_Sir03Moneda).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdMoneda03).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_03_MONEDAS
            HasOptional(a => a.SIR_Sir13HistorialParidad).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdHistoParidad13).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_13_HISTORIAL_PARIDAD
            HasOptional(a => a.SIR_Sir146OrdenesCliente).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdOrdenCli146).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_146_ORDENES_CLIENTES
            HasOptional(a => a.SIR_Sir206Remesa).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdRem206).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_206_REMESAS
            HasOptional(a => a.SIR_Sir299ArchivosFactura).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdArchFac299).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_299_ARCHIVOS_FACTURAS
            HasOptional(a => a.SIR_Sir346SedDocument).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdShipper346).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_346_SED_DOCUMENTS_nIdShipper346
            HasOptional(a => a.SIR_Sir42Proveedore).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdProveedor42).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_42_PROVEEDORES
            HasOptional(a => a.SIR_Sir49OperacionesFactura).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdOperFact49); // FK_SIR_52_FACTURAS_SIR_49_OPERACIONES_FACTURAS
            HasOptional(a => a.SIR_Sir52Factura1).WithMany(b => b.SIR_Sir52Factura2).HasForeignKey(c => c.NIdFacturaSubOrig52).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_52_FACTURAS_SUBDIVISION
            HasOptional(a => a.SIR_Sir53Incoterm).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdIncoterm53).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_53_INCOTERMS
            HasOptional(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_SIR_71_SUCURSAL_PATENTE_ADUANA
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir52Factura).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_52_FACTURAS_cat_usr_ed
            HasMany(t => t.SIR_Sir60Referencia).WithMany(t => t.SIR_Sir52Factura).Map(m =>
            {
                m.ToTable("SIR_188_FACTURAS_REFERENCIAS", "SIR");
                m.MapLeftKey("nIdFactura52");
                m.MapRightKey("nIdReferencia60");
            });
            HasMany(t => t.SIR_Sir695HistSubdivision).WithMany(t => t.SIR_Sir52Factura).Map(m =>
            {
                m.ToTable("SIR_696_HIST_FACT_SUBDIVISION", "SIR");
                m.MapLeftKey("nIdFactura52");
                m.MapRightKey("nIdHistSubdivision695");
            });
        }
    }

}
// </auto-generated>
