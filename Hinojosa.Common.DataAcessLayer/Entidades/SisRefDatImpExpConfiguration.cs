// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // sis_ref_dat_imp_exp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisRefDatImpExpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SisRefDatImpExp>
    {
        public SisRefDatImpExpConfiguration()
            : this("dbo")
        {
        }

        public SisRefDatImpExpConfiguration(string schema)
        {
            ToTable("sis_ref_dat_imp_exp", schema);
            HasKey(x => new { x.IdFact, x.IdRef });

            Property(x => x.IdFact).HasColumnName(@"id_fact").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdRef).HasColumnName(@"id_ref").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Clave).HasColumnName(@"clave").HasColumnType("float").IsRequired();
            Property(x => x.Nombre).HasColumnName(@"nombre").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.Curp).HasColumnName(@"curp").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(80);
            Property(x => x.Rfc).HasColumnName(@"rfc").HasColumnType("nvarchar").IsRequired().HasMaxLength(20);
            Property(x => x.Direccion).HasColumnName(@"direccion").HasColumnType("nvarchar").IsRequired().HasMaxLength(254);
            Property(x => x.Numerointerno).HasColumnName(@"numerointerno").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Numeroexterno).HasColumnName(@"numeroexterno").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Colonia).HasColumnName(@"colonia").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.Ciudad).HasColumnName(@"ciudad").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.Codpos).HasColumnName(@"codpos").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Entidad).HasColumnName(@"entidad").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.Pais).HasColumnName(@"pais").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.Responsable).HasColumnName(@"responsable").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.Telefono1).HasColumnName(@"telefono1").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Telefono2).HasColumnName(@"telefono2").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Fax).HasColumnName(@"fax").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

}
// </auto-generated>
