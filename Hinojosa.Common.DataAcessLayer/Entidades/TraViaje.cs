// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // tra_viajes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TraViaje
    {
        [Required]
        [Display(Name = "Id viaje")]
        public int IdViaje { get; set; } // id_viaje (Primary key)

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Serie")]
        public string Serie { get; set; } // serie (length: 10)

        [Required]
        [Display(Name = "Num doc")]
        public int NumDoc { get; set; } // num_doc

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ini")]
        public System.DateTime FecIni { get; set; } // fec_ini

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec fin")]
        public System.DateTime FecFin { get; set; } // fec_fin

        [Required]
        [Display(Name = "Id mda")]
        public int IdMda { get; set; } // id_mda

        [Required]
        [Display(Name = "Tc")]
        public double Tc { get; set; } // tc

        [Required]
        [Display(Name = "Oper")]
        public byte Oper { get; set; } // oper

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Req esp")]
        public string ReqEsp { get; set; } // req_esp (length: 250)

        [Required]
        [Display(Name = "Cant")]
        public double Cant { get; set; } // cant

        [Required]
        [Display(Name = "Peso")]
        public double Peso { get; set; } // peso

        [Required]
        [Display(Name = "Id ruta")]
        public int IdRuta { get; set; } // id_ruta

        [Required]
        [Display(Name = "Tip ope prov")]
        public byte TipOpeProv { get; set; } // TipOpeProv

        [Required]
        [Display(Name = "Id operador")]
        public int IdOperador { get; set; } // id_operador

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Cmt")]
        public string Cmt { get; set; } // cmt (length: 250)

        [Required]
        [Display(Name = "Valor")]
        public double Valor { get; set; } // valor

        [Required]
        [Display(Name = "Importe")]
        public double Importe { get; set; } // importe

        [Required]
        [Display(Name = "Imptos")]
        public double Imptos { get; set; } // imptos

        [Required]
        [Display(Name = "Total")]
        public double Total { get; set; } // total

        [Required]
        [Display(Name = "Importe bse")]
        public double ImporteBse { get; set; } // importe_bse

        [Required]
        [Display(Name = "Imptos bse")]
        public double ImptosBse { get; set; } // imptos_bse

        [Required]
        [Display(Name = "Total bse")]
        public double TotalBse { get; set; } // total_bse

        [Required]
        [Display(Name = "C facturado")]
        public byte CFacturado { get; set; } // c_facturado

        [Required]
        [Display(Name = "C pagada")]
        public byte CPagada { get; set; } // c_pagada

        [Required]
        [Display(Name = "C liquidado")]
        public byte CLiquidado { get; set; } // c_liquidado

        [Required]
        [Display(Name = "Id nota")]
        public int IdNota { get; set; } // id_nota

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [Display(Name = "Op com")]
        public byte OpCom { get; set; } // op_com

        [Required]
        [Display(Name = "Ptg com")]
        public double PtgCom { get; set; } // ptg_com

        [Required]
        [Display(Name = "Monto com")]
        public double MontoCom { get; set; } // monto_com

        [Display(Name = "Id bco doc")]
        public int? IdBcoDoc { get; set; } // id_bco_doc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Expediente")]
        public string Expediente { get; set; } // expediente (length: 50)

        [Required]
        [Display(Name = "Id vehiculo")]
        public int IdVehiculo { get; set; } // id_vehiculo

        [Required]
        [Display(Name = "Id operador catalogo")]
        public int IdOperadorCatalogo { get; set; } // id_operador_catalogo

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Ruta origen")]
        public string RutaOrigen { get; set; } // ruta_origen (length: 250)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Ruta destino")]
        public string RutaDestino { get; set; } // ruta_destino (length: 250)

        [Required]
        [Display(Name = "Ruta kilometraje")]
        public double RutaKilometraje { get; set; } // ruta_kilometraje

        [Required]
        [Display(Name = "Ruta tiempo")]
        public double RutaTiempo { get; set; } // ruta_tiempo

        [Required]
        [Display(Name = "Ruta tiempo muerto")]
        public double RutaTiempoMuerto { get; set; } // ruta_tiempo_muerto

        [Required(AllowEmptyStrings = true)]
        [Display(Name = "Ruta jsonr uta")]
        public string RutaJsonRuta { get; set; } // ruta_JSONRuta

        [Required]
        [Display(Name = "Status viaje")]
        public int StatusViaje { get; set; } // status_viaje

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Cierre viaje")]
        public System.DateTime CierreViaje { get; set; } // cierre_viaje

        [Required]
        [Display(Name = "Tiempo real")]
        public int TiempoReal { get; set; } // tiempo_real

        [Required]
        [Display(Name = "Monto distancia")]
        public double MontoDistancia { get; set; } // monto_distancia

        [Required]
        [Display(Name = "Monto ruta")]
        public double MontoRuta { get; set; } // monto_ruta

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Inicio viaje")]
        public System.DateTime InicioViaje { get; set; } // inicio_viaje

        [Required]
        [Display(Name = "Id tip viaje")]
        public int IdTipViaje { get; set; } // id_tip_viaje

        [Required]
        [Display(Name = "C interno")]
        public bool CInterno { get; set; } // c_interno

        [Required]
        [Display(Name = "Id operador 2")]
        public int IdOperador2 { get; set; } // id_operador2

        [Required]
        [Display(Name = "Id ultimo evento")]
        public int IdUltimoEvento { get; set; } // id_ultimo_evento

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Ultimo evento fec")]
        public System.DateTime UltimoEventoFec { get; set; } // ultimo_evento_fec

        [Required(AllowEmptyStrings = true)]
        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "Ultimo evento")]
        public string UltimoEvento { get; set; } // ultimo_evento (length: 300)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "Ultima direccion")]
        public string UltimaDireccion { get; set; } // ultima_direccion (length: 300)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Ultima ubicacion")]
        public string UltimaUbicacion { get; set; } // ultima_ubicacion (length: 100)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Ultima actualizacion")]
        public System.DateTime UltimaActualizacion { get; set; } // ultima_actualizacion

        public TraViaje()
        {
            IdTipDoc = 0;
            Serie = "";
            NumDoc = 0;
            IdMda = 0;
            Tc = 0;
            Oper = 0;
            ReqEsp = "";
            Cant = 0;
            Peso = 0;
            IdRuta = 0;
            TipOpeProv = 0;
            IdOperador = 0;
            Cmt = "";
            Valor = 0;
            Importe = 0;
            Imptos = 0;
            Total = 0;
            ImporteBse = 0;
            ImptosBse = 0;
            TotalBse = 0;
            CFacturado = 0;
            CPagada = 0;
            CLiquidado = 0;
            IdNota = 0;
            Status = 0;
            IdUsr = 0;
            OpCom = 0;
            PtgCom = 0;
            MontoCom = 0;
            IdBcoDoc = 0;
            Expediente = "";
            IdVehiculo = 0;
            IdOperadorCatalogo = 0;
            RutaOrigen = "";
            RutaDestino = "";
            RutaKilometraje = 0;
            RutaTiempo = 0;
            RutaTiempoMuerto = 0;
            RutaJsonRuta = "";
            StatusViaje = 0;
            TiempoReal = 0;
            MontoDistancia = 0;
            MontoRuta = 0;
            IdTipViaje = 0;
            CInterno = false;
            IdOperador2 = 0;
            IdUltimoEvento = 0;
            UltimoEvento = "";
            UltimaDireccion = "";
            UltimaUbicacion = "";
        }
    }

}
// </auto-generated>
