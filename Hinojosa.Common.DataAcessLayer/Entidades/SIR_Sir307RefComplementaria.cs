// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_307_REF_COMPLEMENTARIAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir307RefComplementaria
    {
        [Required]
        [Display(Name = "N ID ref comp 307")]
        public int NIdRefComp307 { get; set; } // nIdRefComp307 (Primary key)

        [Display(Name = "D cierre")]
        public System.DateTime? DCierre { get; set; } // dCierre

        [Display(Name = "D documentacion")]
        public System.DateTime? DDocumentacion { get; set; } // dDocumentacion

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S booking")]
        public string SBooking { get; set; } // sBooking (length: 30)

        [Display(Name = "N ID puerto origen 04")]
        public int? NIdPuertoOrigen04 { get; set; } // nIdPuertoOrigen04

        [Display(Name = "N ID puerto destino 04")]
        public int? NIdPuertoDestino04 { get; set; } // nIdPuertoDestino04

        [Display(Name = "D ultimo contenedor")]
        public System.DateTime? DUltimoContenedor { get; set; } // dUltimoContenedor

        [Display(Name = "N ID linea naviera")]
        public int? NIdLineaNaviera { get; set; } // nIdLineaNaviera

        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "S atencion")]
        public string SAtencion { get; set; } // sAtencion (length: 300)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S entregar en")]
        public string SEntregarEn { get; set; } // sEntregarEn (length: 500)

        [Display(Name = "N flete ppd")]
        public decimal? NFletePpd { get; set; } // nFletePPD

        [Display(Name = "N flete por cobrar")]
        public decimal? NFletePorCobrar { get; set; } // nFletePorCobrar

        [Display(Name = "N otros pp")]
        public decimal? NOtrosPp { get; set; } // nOtrosPP

        [Display(Name = "N otros por cobrar")]
        public decimal? NOtrosPorCobrar { get; set; } // nOtrosPorCobrar

        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "S entrega a")]
        public string SEntregaA { get; set; } // sEntregaA (length: 150)

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S planta sqd")]
        public string SPlantaSqd { get; set; } // sPlantaSQD (length: 250)

        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "S asignada")]
        public string SAsignada { get; set; } // sAsignada (length: 150)

        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "S transportista")]
        public string STransportista { get; set; } // sTransportista (length: 300)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S nom 144 semarnap")]
        public string SNom144Semarnap { get; set; } // sNom144Semarnap (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S etiquetas")]
        public string SEtiquetas { get; set; } // sEtiquetas (length: 100)

        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "S entrego")]
        public string SEntrego { get; set; } // sEntrego (length: 300)

        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "S recibio")]
        public string SRecibio { get; set; } // sRecibio (length: 300)

        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "S planta")]
        public string SPlanta { get; set; } // sPlanta (length: 300)

        [Display(Name = "N ID planta sqd 596")]
        public int? NIdPlantaSqd596 { get; set; } // nIdPlantaSQD596

        [DataType(DataType.DateTime)]
        [Display(Name = "D fechade guia")]
        public System.DateTime? DFechadeGuia { get; set; } // dFechadeGuia

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S pref")]
        public string SPref { get; set; } // sPref (length: 500)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S tipo camioneta")]
        public string STipoCamioneta { get; set; } // sTipoCamioneta (length: 500)

        [Display(Name = "B sin gasto comp")]
        public bool? BSinGastoComp { get; set; } // bSinGastoComp

        [Display(Name = "N ID tipo cuenta gasto 698")]
        public int? NIdTipoCuentaGasto698 { get; set; } // nIdTipoCuentaGasto698

        [Display(Name = "N ID tipo anticipo 698")]
        public int? NIdTipoAnticipo698 { get; set; } // nIdTipoAnticipo698

        [Display(Name = "B es servicio conforme")]
        public bool? BEsServicioConforme { get; set; } // bEsServicioConforme

        [Display(Name = "N ID usuario efectuado")]
        public int? NIdUsuarioEfectuado { get; set; } // nIdUsuarioEfectuado

        [DataType(DataType.DateTime)]
        [Display(Name = "D efectuado")]
        public System.DateTime? DEfectuado { get; set; } // dEfectuado

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir60Referencia where [SIR_60_REFERENCIAS].[nIdRefComp307] point to this entity (FK_SIR_60_REFERENCIAS_SIR_307_REF_COMPLEMENTARIAS_nIdRefComp307)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir60Referencia> SIR_Sir60Referencia { get; set; } // SIR_60_REFERENCIAS.FK_SIR_60_REFERENCIAS_SIR_307_REF_COMPLEMENTARIAS_nIdRefComp307

        // Foreign keys

        /// <summary>
        /// Parent SIR_Sir04Puerto pointed by [SIR_307_REF_COMPLEMENTARIAS].([NIdPuertoDestino04]) (FK_SIR_307_REF_COMPLEMENTARIAS_SIR_04_PUERTOS_DESTINO)
        /// </summary>
        public virtual SIR_Sir04Puerto SIR_Sir04Puerto_NIdPuertoDestino04 { get; set; } // FK_SIR_307_REF_COMPLEMENTARIAS_SIR_04_PUERTOS_DESTINO

        /// <summary>
        /// Parent SIR_Sir04Puerto pointed by [SIR_307_REF_COMPLEMENTARIAS].([NIdPuertoOrigen04]) (FK_SIR_307_REF_COMPLEMENTARIAS_SIR_04_PUERTOS_ORIGEN)
        /// </summary>
        public virtual SIR_Sir04Puerto SIR_Sir04Puerto_NIdPuertoOrigen04 { get; set; } // FK_SIR_307_REF_COMPLEMENTARIAS_SIR_04_PUERTOS_ORIGEN

        public SIR_Sir307RefComplementaria()
        {
            SIR_Sir60Referencia = new System.Collections.Generic.List<SIR_Sir60Referencia>();
        }
    }

}
// </auto-generated>
