// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // inv_kardex
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InvKardex
    {
        [Required]
        [Display(Name = "Id kardex")]
        public int IdKardex { get; set; } // id_kardex (Primary key)

        [Required]
        [Display(Name = "Id tipo doc")]
        public int IdTipoDoc { get; set; } // id_tipo_doc

        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc

        [Required]
        [Display(Name = "Id suc")]
        public int IdSuc { get; set; } // id_suc

        [Required]
        [Display(Name = "Id almac")]
        public int IdAlmac { get; set; } // id_almac

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha")]
        public System.DateTime Fecha { get; set; } // fecha

        [Required]
        [Display(Name = "Num doc")]
        public int NumDoc { get; set; } // num_doc

        ///<summary>
        /// 0=Entrada 1=Salida
        ///</summary>
        [Required]
        [Display(Name = "Tipo mov")]
        public byte TipoMov { get; set; } // tipo_mov

        [Required]
        [Display(Name = "Id pro")]
        public int IdPro { get; set; } // id_pro

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Udm")]
        public string Udm { get; set; } // udm (length: 10)

        [Required]
        [Display(Name = "Cant")]
        public double Cant { get; set; } // cant

        [Required]
        [Display(Name = "Costo")]
        public double Costo { get; set; } // costo

        [Required]
        [Display(Name = "Precio")]
        public double Precio { get; set; } // precio

        [Required]
        [Display(Name = "Costo prom")]
        public double CostoProm { get; set; } // costo_prom

        [Required]
        [Display(Name = "Costo total")]
        public double CostoTotal { get; set; } // costo_total

        [Required]
        [Display(Name = "Importe total")]
        public double ImporteTotal { get; set; } // importe_total

        [Required]
        [Display(Name = "Existencia")]
        public double Existencia { get; set; } // existencia

        ///<summary>
        /// id del sub porducto
        ///</summary>
        [Required]
        [Display(Name = "Id sub")]
        public int IdSub { get; set; } // id_sub

        ///<summary>
        /// id del kit que contiene este producto
        ///</summary>
        [Required]
        [Display(Name = "Id kit")]
        public int IdKit { get; set; } // id_kit

        [Required]
        [Display(Name = "Cant sub")]
        public double CantSub { get; set; } // cant_sub

        [Required]
        [Display(Name = "Cant kit")]
        public double CantKit { get; set; } // cant_kit

        ///<summary>
        /// precio del sub producto
        ///</summary>
        [Required]
        [Display(Name = "Pre sub")]
        public double PreSub { get; set; } // pre_sub

        [Required]
        [Display(Name = "Factor")]
        public double Factor { get; set; } // factor

        [Required]
        [Display(Name = "Operacion")]
        public byte Operacion { get; set; } // operacion

        [Required]
        [Display(Name = "Id ser")]
        public int IdSer { get; set; } // id_ser

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser")]
        public string NumSer { get; set; } // num_ser (length: 64)

        [Required]
        [Display(Name = "Id com ser lot")]
        public int IdComSerLot { get; set; } // id_com_ser_lot

        ///<summary>
        /// id del tipo de docto que cancela
        ///</summary>
        [Required]
        [Display(Name = "Id tip doc cnl")]
        public int IdTipDocCnl { get; set; } // id_tip_doc_cnl

        ///<summary>
        /// Numero de documento que cancela
        ///</summary>
        [Required]
        [Display(Name = "Num doc cnl")]
        public int NumDocCnl { get; set; } // num_doc_cnl

        ///<summary>
        /// id del documento al que esta cancelando
        ///</summary>
        [Required]
        [Display(Name = "Id doc cnl")]
        public int IdDocCnl { get; set; } // id_doc_cnl

        ///<summary>
        /// id de la partida del documento que esta cancelado
        ///</summary>
        [Required]
        [Display(Name = "Id part cnl")]
        public int IdPartCnl { get; set; } // id_part_cnl

        [Required]
        [Display(Name = "Id mda")]
        public int IdMda { get; set; } // id_mda

        [Required]
        [Display(Name = "Tc")]
        public double Tc { get; set; } // tc

        [Required]
        [Display(Name = "Oper")]
        public byte Oper { get; set; } // oper

        ///<summary>
        /// Costo en Moneda Extranjera
        ///</summary>
        [Required]
        [Display(Name = "Costo ext")]
        public double CostoExt { get; set; } // costo_ext

        ///<summary>
        /// Costo Total en Moneda Extranjera
        ///</summary>
        [Required]
        [Display(Name = "Costo total ext")]
        public double CostoTotalExt { get; set; } // costo_total_ext

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Serie")]
        public string Serie { get; set; } // serie (length: 10)

        [Required]
        [Display(Name = "Id sis cnl")]
        public int IdSisCnl { get; set; } // id_sis_cnl

        [Required]
        [Display(Name = "Id part")]
        public int IdPart { get; set; } // id_part

        [Required]
        [Display(Name = "C cnl")]
        public byte CCnl { get; set; } // c_cnl

        ///<summary>
        /// id de la UDM de inventario
        ///</summary>
        [Required]
        [Display(Name = "Id udm")]
        public int IdUdm { get; set; } // id_udm

        ///<summary>
        /// cantidad del movimeinto
        ///</summary>
        [Required]
        [Display(Name = "Cant mov")]
        public double CantMov { get; set; } // cant_mov

        ///<summary>
        /// UDM del movimiento
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Udm mov")]
        public string UdmMov { get; set; } // udm_mov (length: 10)

        ///<summary>
        /// ID de la UDM del Movimiento
        ///</summary>
        [Required]
        [Display(Name = "Id udm mov")]
        public int IdUdmMov { get; set; } // id_udm_mov

        ///<summary>
        /// Factor del Movimiento
        ///</summary>
        [Required]
        [Display(Name = "Ftr")]
        public double Ftr { get; set; } // ftr

        ///<summary>
        /// Costo del Movimiento
        ///</summary>
        [Required]
        [Display(Name = "Costo mov")]
        public double CostoMov { get; set; } // costo_mov

        ///<summary>
        /// Costo Total del Movimiento
        ///</summary>
        [Required]
        [Display(Name = "Costo total mov")]
        public double CostoTotalMov { get; set; } // costo_total_mov

        [Required]
        [Display(Name = "Existencia alm")]
        public double ExistenciaAlm { get; set; } // existencia_alm

        [Required]
        [Display(Name = "Id cpt")]
        public int IdCpt { get; set; } // id_cpt

        [Required]
        [Display(Name = "Id cen cto")]
        public int IdCenCto { get; set; } // id_cen_cto

        [Required]
        [Display(Name = "Id cod srv")]
        public int IdCodSrv { get; set; } // id_cod_srv

        [Required]
        [Display(Name = "Id ref")]
        public int IdRef { get; set; } // id_ref

        [Required]
        [Display(Name = "Id clas pro")]
        public int IdClasPro { get; set; } // id_clas_pro

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Cmt")]
        public string Cmt { get; set; } // cmt (length: 25)

        [Required]
        [Display(Name = "Id nota")]
        public int IdNota { get; set; } // id_nota

        [Required]
        [Display(Name = "Id pol")]
        public int IdPol { get; set; } // id_pol

        [Required]
        [Display(Name = "Costo ind")]
        public double CostoInd { get; set; } // costo_ind

        [Required]
        [Display(Name = "Costo unit")]
        public double CostoUnit { get; set; } // costo_unit

        // Foreign keys

        /// <summary>
        /// Parent CatAlmac pointed by [inv_kardex].([IdAlmac]) (FK_inv_kardex_cat_almac)
        /// </summary>
        public virtual CatAlmac CatAlmac { get; set; } // FK_inv_kardex_cat_almac

        /// <summary>
        /// Parent CatDocto pointed by [inv_kardex].([IdTipoDoc]) (FK_inv_kardex_cat_doctos)
        /// </summary>
        public virtual CatDocto CatDocto { get; set; } // FK_inv_kardex_cat_doctos

        /// <summary>
        /// Parent CatPro pointed by [inv_kardex].([IdPro]) (FK_inv_kardex_cat_pro)
        /// </summary>
        public virtual CatPro CatPro { get; set; } // FK_inv_kardex_cat_pro

        /// <summary>
        /// Parent CatUsr pointed by [inv_kardex].([IdUsr]) (FK_inv_kardex_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_inv_kardex_cat_usr

        public InvKardex()
        {
            Udm = "";
            IdTipDocCnl = 0;
            NumDocCnl = 0;
            IdDocCnl = 0;
            IdPartCnl = 0;
            IdMda = 0;
            Tc = 0;
            Oper = 0;
            CostoExt = 0;
            CostoTotalExt = 0;
            Serie = "";
            IdSisCnl = 0;
            IdPart = 0;
            CCnl = 0;
            IdUdm = 0;
            CantMov = 0;
            UdmMov = "";
            IdUdmMov = 0;
            Ftr = 0;
            CostoMov = 0;
            CostoTotalMov = 0;
            ExistenciaAlm = 0;
            IdCpt = 0;
            IdCenCto = 0;
            IdCodSrv = 0;
            IdRef = 0;
            IdClasPro = 0;
            Cmt = "";
            IdNota = 0;
            IdPol = 0;
            CostoInd = 0;
            CostoUnit = 0;
        }
    }

}
// </auto-generated>
