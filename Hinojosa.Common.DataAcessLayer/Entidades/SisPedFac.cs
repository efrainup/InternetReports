// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // sis_ped_fac
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisPedFac
    {
        [Required]
        [Display(Name = "Id ped fac")]
        public int IdPedFac { get; set; } // id_ped_fac (Primary key)

        [Required]
        [Display(Name = "Id ped")]
        public int IdPed { get; set; } // id_ped

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "No fac")]
        public string NoFac { get; set; } // no_fac (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Pais ori")]
        public string PaisOri { get; set; } // pais_ori (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Mda fac")]
        public string MdaFac { get; set; } // mda_fac (length: 3)

        [Required]
        [Display(Name = "Val mda ext")]
        public double ValMdaExt { get; set; } // val_mda_ext

        [Required]
        [Display(Name = "Val mda usd")]
        public double ValMdaUsd { get; set; } // val_mda_usd

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Incoterm")]
        public string Incoterm { get; set; } // incoterm (length: 3)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha")]
        public System.DateTime Fecha { get; set; } // fecha

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Entidadfacturacion")]
        public string Entidadfacturacion { get; set; } // entidadfacturacion (length: 200)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Cvefiscalprov")]
        public string Cvefiscalprov { get; set; } // cvefiscalprov (length: 40)

        [Required(AllowEmptyStrings = true)]
        [Display(Name = "Nomprov")]
        public string Nomprov { get; set; } // nomprov

        [Required(AllowEmptyStrings = true)]
        [Display(Name = "Calleprov")]
        public string Calleprov { get; set; } // calleprov

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Numintprov")]
        public string Numintprov { get; set; } // numintprov (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Numextprov")]
        public string Numextprov { get; set; } // numextprov (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Cpprov")]
        public string Cpprov { get; set; } // cpprov (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Mpioprov")]
        public string Mpioprov { get; set; } // mpioprov (length: 200)

        [Required]
        [Display(Name = "Id prov 1 g")]
        public int IdProv1G { get; set; } // id_prov1g

        [Required]
        [Display(Name = "Id pedimento")]
        public int IdPedimento { get; set; } // id_pedimento

        public SisPedFac()
        {
            IdPed = 0;
            NoFac = "0";
            PaisOri = "";
            MdaFac = "";
            ValMdaExt = 0;
            ValMdaUsd = 0;
            Incoterm = "";
            IdUsr = 0;
            Entidadfacturacion = "";
            Cvefiscalprov = "";
            Nomprov = "";
            Calleprov = "";
            Numintprov = "";
            Numextprov = "";
            Cpprov = "";
            Mpioprov = "";
            IdProv1G = 0;
            IdPedimento = 0;
        }
    }

}
// </auto-generated>
