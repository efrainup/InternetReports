// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_51_BOOKING_CONTENEDOR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira51BookingContenedor
    {
        [Required]
        [Display(Name = "N ID booking cont 51")]
        public int NIdBookingCont51 { get; set; } // nIdBookingCont51 (Primary key)

        [Required]
        [Display(Name = "N ID booking 50")]
        public int NIdBooking50 { get; set; } // nIdBooking50

        [Required]
        [Display(Name = "N ID contenedor 76")]
        public int NIdContenedor76 { get; set; } // nIdContenedor76

        [Display(Name = "D fecha doc")]
        public System.DateTime? DFechaDoc { get; set; } // dFechaDoc

        [Display(Name = "D fecha destino fin")]
        public System.DateTime? DFechaDestinoFin { get; set; } // dFechaDestinoFin

        [Display(Name = "D fecha reingreso term")]
        public System.DateTime? DFechaReingresoTerm { get; set; } // dFechaReingresoTerm

        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "S referencia")]
        public string SReferencia { get; set; } // sReferencia (length: 64)

        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "S pedimento")]
        public string SPedimento { get; set; } // sPedimento (length: 7)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S destino")]
        public string SDestino { get; set; } // sDestino (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S transporte")]
        public string STransporte { get; set; } // sTransporte (length: 100)

        [Required]
        [Display(Name = "B es carga suelta")]
        public bool BEsCargaSuelta { get; set; } // bEsCargaSuelta

        [Display(Name = "N ID clave docto 28")]
        public int? NIdClaveDocto28 { get; set; } // nIdClaveDocto28

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S bodega")]
        public string SBodega { get; set; } // sBodega (length: 100)

        [Display(Name = "N estadias")]
        public int? NEstadias { get; set; } // nEstadias

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S plataforma f")]
        public string SPlataformaF { get; set; } // sPlataformaF (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S sellos fsrr")]
        public string SSellosFsrr { get; set; } // sSellosFSRR (length: 100)

        [Display(Name = "N almacenaje term ffcc")]
        public int? NAlmacenajeTermFfcc { get; set; } // nAlmacenajeTermFFCC

        [Display(Name = "D fecha arribo ffcc")]
        public System.DateTime? DFechaArriboFfcc { get; set; } // dFechaArriboFFCC

        [Display(Name = "D fecha entrada bod")]
        public System.DateTime? DFechaEntradaBod { get; set; } // dFechaEntradaBod

        [Display(Name = "D fecha descarga fin")]
        public System.DateTime? DFechaDescargaFin { get; set; } // dFechaDescargaFin

        [Required]
        [Display(Name = "B aplica factura")]
        public bool BAplicaFactura { get; set; } // bAplicaFactura

        [Required]
        [Display(Name = "B aplica custodia")]
        public bool BAplicaCustodia { get; set; } // bAplicaCustodia

        [Display(Name = "N cantidad")]
        public int? NCantidad { get; set; } // nCantidad

        [Display(Name = "N ID proveedor 42")]
        public int? NIdProveedor42 { get; set; } // nIdProveedor42

        [Display(Name = "N ID proveedor")]
        public int? NIdProveedor { get; set; } // nIdProveedor

        [Display(Name = "D fecha entra vacio")]
        public System.DateTime? DFechaEntraVacio { get; set; } // dFechaEntraVacio

        [Display(Name = "D fecha sol equipo")]
        public System.DateTime? DFechaSolEquipo { get; set; } // dFechaSolEquipo

        [Display(Name = "D fecha sal puerto")]
        public System.DateTime? DFechaSalPuerto { get; set; } // dFechaSalPuerto

        [Display(Name = "D fecha ingreso term")]
        public System.DateTime? DFechaIngresoTerm { get; set; } // dFechaIngresoTerm

        [Display(Name = "D fecha carga")]
        public System.DateTime? DFechaCarga { get; set; } // dFechaCarga

        [Display(Name = "D fecha ret imv")]
        public System.DateTime? DFechaRetImv { get; set; } // dFechaRetIMV

        [Display(Name = "D fecha prog llegada")]
        public System.DateTime? DFechaProgLlegada { get; set; } // dFechaProgLlegada

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S tipo servicio")]
        public string STipoServicio { get; set; } // sTipoServicio (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S lugar ingreso")]
        public string SLugarIngreso { get; set; } // sLugarIngreso (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S lugar ret vacio")]
        public string SLugarRetVacio { get; set; } // sLugarRetVacio (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S numero eir")]
        public string SNumeroEir { get; set; } // sNumeroEIR (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S nom rc age eir")]
        public string SNomRcAgeEir { get; set; } // sNomRcAgeEIR (length: 100)

        [Display(Name = "D fecha rec age eir")]
        public System.DateTime? DFechaRecAgeEir { get; set; } // dFechaRecAgeEIR

        [Display(Name = "D fecha ent linea eir")]
        public System.DateTime? DFechaEntLineaEir { get; set; } // dFechaEntLineaEIR

        [Display(Name = "N ID terminal salida 42")]
        public int? NIdTerminalSalida42 { get; set; } // nIdTerminalSalida42

        [Display(Name = "N ID terminal salida")]
        public int? NIdTerminalSalida { get; set; } // nIdTerminalSalida

        [Display(Name = "N ID puerto salida 04")]
        public int? NIdPuertoSalida04 { get; set; } // nIdPuertoSalida04

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S no equipo")]
        public string SNoEquipo { get; set; } // sNoEquipo (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S le quipo")]
        public string SLEquipo { get; set; } // sLEquipo (length: 50)

        [Display(Name = "N almacenaje pto")]
        public int? NAlmacenajePto { get; set; } // nAlmacenajePto

        [Display(Name = "D modulacion")]
        public System.DateTime? DModulacion { get; set; } // dModulacion

        [Display(Name = "D solicitud")]
        public System.DateTime? DSolicitud { get; set; } // dSolicitud

        [Display(Name = "D documentacion cont")]
        public System.DateTime? DDocumentacionCont { get; set; } // dDocumentacionCont

        [Display(Name = "D requerida ent bodega")]
        public System.DateTime? DRequeridaEntBodega { get; set; } // dRequeridaEntBodega

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S origen")]
        public string SOrigen { get; set; } // sOrigen (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S empresa transportista")]
        public string SEmpresaTransportista { get; set; } // sEmpresaTransportista (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S operador")]
        public string SOperador { get; set; } // sOperador (length: 100)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S placa")]
        public string SPlaca { get; set; } // sPlaca (length: 50)

        [Display(Name = "D carga cont")]
        public System.DateTime? DCargaCont { get; set; } // dCargaCont

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir386CaracContBooking where [SIR_386_CARAC_CONT_BOOKING].[nIdBookingCont51] point to this entity (FK_SIR_386_CARAC_CONT_BOOKING_SIRA_51_BOOKING_CONTENEDOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir386CaracContBooking> SIR_Sir386CaracContBooking { get; set; } // SIR_386_CARAC_CONT_BOOKING.FK_SIR_386_CARAC_CONT_BOOKING_SIRA_51_BOOKING_CONTENEDOR

        // Foreign keys

        /// <summary>
        /// Parent Admin_Adminc42Proveedore pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdProveedor42]) (FK_SIRA_51_BOOKING_CONTENEDOR_ADMINC_42_PROVEEDORES)
        /// </summary>
        public virtual Admin_Adminc42Proveedore Admin_Adminc42Proveedore_NIdProveedor42 { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_ADMINC_42_PROVEEDORES

        /// <summary>
        /// Parent Admin_Adminc42Proveedore pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdTerminalSalida42]) (FK_SIRA_51_BOOKING_CONTENEDOR_ADMINC_42_PROVEEDORES_TerminalSalida)
        /// </summary>
        public virtual Admin_Adminc42Proveedore Admin_Adminc42Proveedore_NIdTerminalSalida42 { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_ADMINC_42_PROVEEDORES_TerminalSalida

        /// <summary>
        /// Parent CatProv pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdProveedor]) (FK_SIRA_51_BOOKING_CONTENEDOR_cat_prov)
        /// </summary>
        public virtual CatProv CatProv_NIdProveedor { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_cat_prov

        /// <summary>
        /// Parent CatProv pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdTerminalSalida]) (FK_SIRA_51_BOOKING_CONTENEDOR_cat_prov_TerminalSalida)
        /// </summary>
        public virtual CatProv CatProv_NIdTerminalSalida { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_cat_prov_TerminalSalida

        /// <summary>
        /// Parent SIR_Sir04Puerto pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdPuertoSalida04]) (FK_SIRA_51_BOOKING_CONTENEDOR_SIR_04_PUERTOS)
        /// </summary>
        public virtual SIR_Sir04Puerto SIR_Sir04Puerto { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_SIR_04_PUERTOS

        /// <summary>
        /// Parent SIR_Sir28ClavesDocto pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdClaveDocto28]) (FK_SIRA_51_BOOKING_CONTENEDOR_SIR_28_CLAVES_DOCTOS)
        /// </summary>
        public virtual SIR_Sir28ClavesDocto SIR_Sir28ClavesDocto { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_SIR_28_CLAVES_DOCTOS

        /// <summary>
        /// Parent SIR_Sir76Contenedore pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdContenedor76]) (FK_SIRA_51_BOOKING_CONTENEDOR_SIR_76_CONTENEDORES)
        /// </summary>
        public virtual SIR_Sir76Contenedore SIR_Sir76Contenedore { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_SIR_76_CONTENEDORES

        /// <summary>
        /// Parent SIRAdmin_Sira50Booking pointed by [SIRA_51_BOOKING_CONTENEDOR].([NIdBooking50]) (FK_SIRA_51_BOOKING_CONTENEDOR_SIRA_50_BOOKING)
        /// </summary>
        public virtual SIRAdmin_Sira50Booking SIRAdmin_Sira50Booking { get; set; } // FK_SIRA_51_BOOKING_CONTENEDOR_SIRA_50_BOOKING

        public SIRAdmin_Sira51BookingContenedor()
        {
            BEsCargaSuelta = false;
            BAplicaFactura = false;
            BAplicaCustodia = false;
            SIR_Sir386CaracContBooking = new System.Collections.Generic.List<SIR_Sir386CaracContBooking>();
        }
    }

}
// </auto-generated>
