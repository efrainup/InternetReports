// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_229_PARTIDAS_AGRUP_SAGARPA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir229PartidasAgrupSagarpaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir229PartidasAgrupSagarpa>
    {
        public SIR_Sir229PartidasAgrupSagarpaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir229PartidasAgrupSagarpaConfiguration(string schema)
        {
            ToTable("SIR_229_PARTIDAS_AGRUP_SAGARPA", schema);
            HasKey(x => x.NIdParAgrSag229);

            Property(x => x.NIdParAgrSag229).HasColumnName(@"nIdParAgrSag229").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdRegSag228).HasColumnName(@"nIdRegSag228").HasColumnType("int").IsOptional();
            Property(x => x.NIdPlantaSagar104).HasColumnName(@"nIdPlantaSAGAR104").HasColumnType("int").IsOptional();
            Property(x => x.NTipoRequisito).HasColumnName(@"nTipoRequisito").HasColumnType("tinyint").IsRequired();
            Property(x => x.SRequisitoSanitario).HasColumnName(@"sRequisitoSanitario").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.NNumeroCarros).HasColumnName(@"nNumeroCarros").HasColumnType("int").IsOptional();
            Property(x => x.BMayContain).HasColumnName(@"bMayContain").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicableRtv).HasColumnName(@"bAplicableRTV").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaMuestra).HasColumnName(@"bAplicaMuestra").HasColumnType("bit").IsRequired();
            Property(x => x.SFolioCertInt).HasColumnName(@"sFolioCertInt").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.SDescripcionAa).HasColumnName(@"sDescripcionAA").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.NIdUmc10).HasColumnName(@"nIdUMC10").HasColumnType("int").IsRequired();
            Property(x => x.NIdUmt10).HasColumnName(@"nIdUMT10").HasColumnType("int").IsRequired();
            Property(x => x.NCantidadTarifa).HasColumnName(@"nCantidadTarifa").HasColumnType("decimal").IsRequired().HasPrecision(15,3);
            Property(x => x.NCantidadFactura).HasColumnName(@"nCantidadFactura").HasColumnType("decimal").IsRequired().HasPrecision(15,3);
            Property(x => x.NIdMuestra232).HasColumnName(@"nIdMuestra232").HasColumnType("int").IsOptional();
            Property(x => x.NIdFacPartAgrupada100).HasColumnName(@"nIdFacPartAgrupada100").HasColumnType("int").IsOptional();
            Property(x => x.NIdPaisProced).HasColumnName(@"nIdPaisProced").HasColumnType("int").IsOptional();
            Property(x => x.NIdPaisOrigen).HasColumnName(@"nIdPaisOrigen").HasColumnType("int").IsOptional();
            Property(x => x.SFraccion).HasColumnName(@"sFraccion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NNumOrden).HasColumnName(@"nNumOrden").HasColumnType("int").IsOptional();
            Property(x => x.NNumOrdenMuestra).HasColumnName(@"nNumOrdenMuestra").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.SIR_Sir01Pais_NIdPaisOrigen).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa_NIdPaisOrigen).HasForeignKey(c => c.NIdPaisOrigen).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_01_PAISES_Origen
            HasOptional(a => a.SIR_Sir01Pais_NIdPaisProced).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa_NIdPaisProced).HasForeignKey(c => c.NIdPaisProced).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_01_PAISES_procedencia
            HasOptional(a => a.SIR_Sir104PlantasSagar).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa).HasForeignKey(c => c.NIdPlantaSagar104).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_104_PLANTAS_SAGAR
            HasOptional(a => a.SIR_Sir228RegistrosSagarpa).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa).HasForeignKey(c => c.NIdRegSag228).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_228_REGISTROS_SAGARPA
            HasOptional(a => a.SIR_Sir232MuestrasSagarpa).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa).HasForeignKey(c => c.NIdMuestra232).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_232_MUESTRAS_SAGARPA
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_cat_usr_ed
            HasRequired(a => a.SIR_Sir10UnidadesMedida_NIdUmc10).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa_NIdUmc10).HasForeignKey(c => c.NIdUmc10).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_10_UNIDADES_MEDIDA_comercial
            HasRequired(a => a.SIR_Sir10UnidadesMedida_NIdUmt10).WithMany(b => b.SIR_Sir229PartidasAgrupSagarpa_NIdUmt10).HasForeignKey(c => c.NIdUmt10).WillCascadeOnDelete(false); // FK_SIR_229_PARTIDAS_AGRUP_SAGARPA_SIR_10_UNIDADES_MEDIDA_tarifa
        }
    }

}
// </auto-generated>
