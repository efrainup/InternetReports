// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // reg_nom
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RegNomConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RegNom>
    {
        public RegNomConfiguration()
            : this("dbo")
        {
        }

        public RegNomConfiguration(string schema)
        {
            ToTable("reg_nom", schema);
            HasKey(x => x.IdRegNom);

            Property(x => x.IdRegNom).HasColumnName(@"id_reg_nom").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdTipDoc).HasColumnName(@"id_tip_doc").HasColumnType("int").IsRequired();
            Property(x => x.NumDoc).HasColumnName(@"num_doc").HasColumnType("int").IsRequired();
            Property(x => x.FecDoc).HasColumnName(@"fec_doc").HasColumnType("datetime").IsRequired();
            Property(x => x.FecPag).HasColumnName(@"fec_pag").HasColumnType("datetime").IsRequired();
            Property(x => x.IdPerRh).HasColumnName(@"id_per_rh").HasColumnType("int").IsRequired();
            Property(x => x.IdCpt).HasColumnName(@"id_cpt").HasColumnType("int").IsRequired();
            Property(x => x.IdPol).HasColumnName(@"id_pol").HasColumnType("int").IsRequired();
            Property(x => x.Cmt).HasColumnName(@"cmt").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.TotPer).HasColumnName(@"tot_per").HasColumnType("float").IsRequired();
            Property(x => x.TotDed).HasColumnName(@"tot_ded").HasColumnType("float").IsRequired();
            Property(x => x.TotApPat).HasColumnName(@"tot_ap_pat").HasColumnType("float").IsRequired();
            Property(x => x.TotTer).HasColumnName(@"tot_ter").HasColumnType("float").IsRequired();
            Property(x => x.TotNeto).HasColumnName(@"tot_neto").HasColumnType("float").IsRequired();
            Property(x => x.IdUsr).HasColumnName(@"id_usr").HasColumnType("int").IsRequired();
            Property(x => x.FecReg).HasColumnName(@"fec_reg").HasColumnType("datetime").IsRequired();
            Property(x => x.Status).HasColumnName(@"status").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdSesion).HasColumnName(@"id_sesion").HasColumnType("int").IsRequired();
            Property(x => x.MtoGrav).HasColumnName(@"mto_grav").HasColumnType("float").IsRequired();
            Property(x => x.X100Grav).HasColumnName(@"x100_grav").HasColumnType("float").IsRequired();
            Property(x => x.TotGravPer).HasColumnName(@"tot_grav_per").HasColumnType("float").IsRequired();
            Property(x => x.TotExenPer).HasColumnName(@"tot_exen_per").HasColumnType("float").IsRequired();
            Property(x => x.TotGravDed).HasColumnName(@"tot_grav_ded").HasColumnType("float").IsRequired();
            Property(x => x.TotExenDed).HasColumnName(@"tot_exen_ded").HasColumnType("float").IsRequired();
            Property(x => x.Secuencial).HasColumnName(@"secuencial").HasColumnType("int").IsRequired();
            Property(x => x.Version).HasColumnName(@"version").HasColumnType("int").IsRequired();
            Property(x => x.TotOp).HasColumnName(@"tot_op").HasColumnType("int").IsRequired();
        }
    }

}
// </auto-generated>
