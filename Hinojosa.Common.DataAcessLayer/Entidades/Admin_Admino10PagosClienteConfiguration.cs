// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // ADMINO_10_PAGOS_CLIENTES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Admin_Admino10PagosClienteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Admin_Admino10PagosCliente>
    {
        public Admin_Admino10PagosClienteConfiguration()
            : this("Admin")
        {
        }

        public Admin_Admino10PagosClienteConfiguration(string schema)
        {
            ToTable("ADMINO_10_PAGOS_CLIENTES", schema);
            HasKey(x => x.NIdPagoCli10);

            Property(x => x.NIdPagoCli10).HasColumnName(@"nIdPagoCli10").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdProv42).HasColumnName(@"nIdProv42").HasColumnType("int").IsRequired();
            Property(x => x.DPago).HasColumnName(@"dPago").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NFolio).HasColumnName(@"nFolio").HasColumnType("int").IsRequired();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsRequired();
            Property(x => x.NIdCatCheques23).HasColumnName(@"nIdCatCheques23").HasColumnType("int").IsOptional();
            Property(x => x.NNumeroCheque).HasColumnName(@"nNumeroCheque").HasColumnType("int").IsOptional();
            Property(x => x.NStatus).HasColumnName(@"nStatus").HasColumnType("tinyint").IsRequired();

            // Foreign keys
            HasOptional(a => a.Admin_Adminc23CuentasBancaria).WithMany(b => b.Admin_Admino10PagosCliente).HasForeignKey(c => c.NIdCatCheques23).WillCascadeOnDelete(false); // FK_ADMINO_10_PAGOS_CLIENTES_ADMINC_23_CUENTAS_BANCARIAS
            HasRequired(a => a.Admin_Adminc42Proveedore).WithMany(b => b.Admin_Admino10PagosCliente).HasForeignKey(c => c.NIdProv42).WillCascadeOnDelete(false); // FK_ADMINO_10_PAGOS_CLIENTES_ADMINC_42_PROVEEDORES
        }
    }

}
// </auto-generated>
