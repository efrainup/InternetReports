// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_74_CONOCIMIENTOS_MARITIMOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir74ConocimientosMaritimoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir74ConocimientosMaritimo>
    {
        public SIR_Sir74ConocimientosMaritimoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir74ConocimientosMaritimoConfiguration(string schema)
        {
            ToTable("SIR_74_CONOCIMIENTOS_MARITIMOS", schema);
            HasKey(x => x.NIdBl74);

            Property(x => x.NIdBl74).HasColumnName(@"nIdBL74").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NNumeroBl).HasColumnName(@"nNumeroBL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.DFechaRevalidado).HasColumnName(@"dFechaRevalidado").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdRecinto).HasColumnName(@"nIdRecinto").HasColumnType("int").IsOptional();
            Property(x => x.BEsCargaSuelta).HasColumnName(@"bEsCargaSuelta").HasColumnType("bit").IsRequired();
            Property(x => x.BEsDesconsolidado).HasColumnName(@"bEsDesconsolidado").HasColumnType("bit").IsRequired();
            Property(x => x.SCarrier).HasColumnName(@"sCarrier").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SObservaciones).HasColumnName(@"sObservaciones").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NCantidad).HasColumnName(@"nCantidad").HasColumnType("decimal").IsRequired().HasPrecision(14,3);
            Property(x => x.NIdClaseEmpaque26).HasColumnName(@"nIdClaseEmpaque26").HasColumnType("int").IsOptional();
            Property(x => x.NCantidadTeu).HasColumnName(@"nCantidadTEU").HasColumnType("int").IsOptional();
            Property(x => x.NIdTipoGarantia75).HasColumnName(@"nIdTipoGarantia75").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioReval).HasColumnName(@"nIdUsuarioReval").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NTipo).HasColumnName(@"nTipo").HasColumnType("int").IsRequired();
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsOptional();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsOptional();
            Property(x => x.DFechaNotif).HasColumnName(@"dFechaNotif").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaRecolec).HasColumnName(@"dFechaRecolec").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdEmpleado).HasColumnName(@"nIdEmpleado").HasColumnType("int").IsOptional();
            Property(x => x.NIdAlmacen).HasColumnName(@"nIdAlmacen").HasColumnType("int").IsOptional();
            Property(x => x.NCantidadEmbarque).HasColumnName(@"nCantidadEmbarque").HasColumnType("int").IsOptional();
            Property(x => x.NIdTrans175).HasColumnName(@"nIdTrans175").HasColumnType("int").IsOptional();
            Property(x => x.BTieneFirmaPedimento).HasColumnName(@"bTieneFirmaPedimento").HasColumnType("bit").IsRequired();
            Property(x => x.NIdSucursal).HasColumnName(@"nIdSucursal").HasColumnType("int").IsOptional();
            Property(x => x.DAlta).HasColumnName(@"dAlta").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NIdEntrada156).HasColumnName(@"nIdEntrada156").HasColumnType("int").IsOptional();
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsOptional();
            Property(x => x.NIdRecinto42).HasColumnName(@"nIdRecinto42").HasColumnType("int").IsOptional();
            Property(x => x.NIdAlmacen35).HasColumnName(@"nIdAlmacen35").HasColumnType("int").IsOptional();
            Property(x => x.NIdEmpleado02).HasColumnName(@"nIdEmpleado02").HasColumnType("int").IsOptional();
            Property(x => x.NIdSuc12).HasColumnName(@"nIdSuc12").HasColumnType("int").IsOptional();
            Property(x => x.NIdLiberacionGuias370).HasColumnName(@"nIdLiberacionGuias370").HasColumnType("int").IsOptional();
            Property(x => x.NPeso).HasColumnName(@"nPeso").HasColumnType("decimal").IsOptional().HasPrecision(14,4);
            Property(x => x.NPesoLb).HasColumnName(@"nPesoLb").HasColumnType("decimal").IsOptional().HasPrecision(14,4);

            // Foreign keys
            HasOptional(a => a.Admin_Admina02Personal).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdEmpleado02).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_ADMINA_02_PERSONAL
            HasOptional(a => a.Admin_Adminc07Cliente).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdClie07).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_ADMINC_07_CLIENTES
            HasOptional(a => a.Admin_Adminc35Almacene).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdAlmacen35).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_ADMINC_35_ALMACENES
            HasOptional(a => a.Admin_Adminc42Proveedore).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdRecinto42).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_ADMINC_42_PROVEEDORES
            HasOptional(a => a.CatAlmac).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdAlmacen).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_cat_almac
            HasOptional(a => a.CatCliente).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_cat_clientes
            HasOptional(a => a.CatEmp).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdEmpleado).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_cat_emp
            HasOptional(a => a.CatProv).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdRecinto).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_cat_prov
            HasOptional(a => a.CatUsr_NIdUsuarioReval).WithMany(b => b.SIR_Sir74ConocimientosMaritimo_NIdUsuarioReval).HasForeignKey(c => c.NIdUsuarioReval).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_cat_usr
            HasOptional(a => a.McpSuc).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdSucursal).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_mcp_suc
            HasOptional(a => a.SIR_Sir156EntradasBodega).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdEntrada156).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_SIR_156_ENTRADAS_BODEGAS
            HasOptional(a => a.SIR_Sir175Transporte).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdTrans175).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_SIR_175_TRANSPORTES
            HasOptional(a => a.SIR_Sir26ClasesEmpaque).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdClaseEmpaque26).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_SIR_26_CLASES_EMPAQUES
            HasOptional(a => a.SIR_Sir370LiberacionElectronicaGuia).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdLiberacionGuias370).WillCascadeOnDelete(false); // FK_SIR_74_BLS_SIR_370_LIB_ELECTRONICA_GUIAS
            HasOptional(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_SIR_71_SUCURSAL_PATENTE_ADUANA
            HasOptional(a => a.SIR_Sir75TiposGarantiaReval).WithMany(b => b.SIR_Sir74ConocimientosMaritimo).HasForeignKey(c => c.NIdTipoGarantia75).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_SIR_75_TIPOS_GARANTIA_REVAL
            HasRequired(a => a.CatUsr_NIdUsuarioEd).WithMany(b => b.SIR_Sir74ConocimientosMaritimo_NIdUsuarioEd).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_74_CONOCIMIENTOS_MARITIMOS_cat_usr_ed
            HasMany(t => t.SIR_Sir206Remesa).WithMany(t => t.SIR_Sir74ConocimientosMaritimo).Map(m =>
            {
                m.ToTable("SIR_310_REMESAS_BLS", "SIR");
                m.MapLeftKey("nIdBL74");
                m.MapRightKey("nIdRem206");
            });
            HasMany(t => t.SIR_Sir52Factura).WithMany(t => t.SIR_Sir74ConocimientosMaritimo).Map(m =>
            {
                m.ToTable("SIR_359_GUIAS_FACTURAS", "SIR");
                m.MapLeftKey("nIdBL74");
                m.MapRightKey("nIdFactura52");
            });
        }
    }

}
// </auto-generated>
