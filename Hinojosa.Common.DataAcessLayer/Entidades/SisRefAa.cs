// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // Sis_Ref_AA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisRefAa
    {
        [Required]
        [Display(Name = "Id ref")]
        public int IdRef { get; set; } // id_ref (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Referencia")]
        public string Referencia { get; set; } // referencia (length: 64)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Consecutivo")]
        public string Consecutivo { get; set; } // consecutivo (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "No pedimento")]
        public string NoPedimento { get; set; } // no_pedimento (length: 7)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(11)]
        [StringLength(11)]
        [Display(Name = "Tipo operacion")]
        public string TipoOperacion { get; set; } // tipo_operacion (length: 11)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha entrada presentacion")]
        public System.DateTime FechaEntradaPresentacion { get; set; } // fecha_entrada_presentacion

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha pago")]
        public System.DateTime FechaPago { get; set; } // fecha_pago

        [Required(AllowEmptyStrings = true)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Clave pedto")]
        public string ClavePedto { get; set; } // clave_pedto (length: 2)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Descripcion clave pedto")]
        public string DescripcionClavePedto { get; set; } // descripcion_clave_pedto (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Regimen")]
        public string Regimen { get; set; } // regimen (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Pais origen destino")]
        public string PaisOrigenDestino { get; set; } // pais_origen_destino (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nombre pais origen destino")]
        public string NombrePaisOrigenDestino { get; set; } // nombre_pais_origen_destino (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Pais vendedor comprador")]
        public string PaisVendedorComprador { get; set; } // pais_vendedor_comprador (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nombre pais vendedor comprador")]
        public string NombrePaisVendedorComprador { get; set; } // nombre_pais_vendedor_comprador (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Aduana seccion")]
        public string AduanaSeccion { get; set; } // aduana_seccion (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nombre aduana entrada")]
        public string NombreAduanaEntrada { get; set; } // nombre_aduana_entrada (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nombre aduana despacho")]
        public string NombreAduanaDespacho { get; set; } // nombre_aduana_despacho (length: 120)

        [Required]
        [Display(Name = "Cliente")]
        public double Cliente { get; set; } // cliente

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nombre cliente")]
        public string NombreCliente { get; set; } // nombre_cliente (length: 120)

        [Required]
        [Display(Name = "Proveedor")]
        public double Proveedor { get; set; } // proveedor

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nombre proveedor")]
        public string NombreProveedor { get; set; } // nombre_proveedor (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(9)]
        [StringLength(9)]
        [Display(Name = "Registro buque")]
        public string RegistroBuque { get; set; } // registro_buque (length: 9)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Nombre buque")]
        public string NombreBuque { get; set; } // nombre_buque (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Bandera buque")]
        public string BanderaBuque { get; set; } // bandera_buque (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Medio transporte")]
        public string MedioTransporte { get; set; } // medio_transporte (length: 50)

        [Required]
        [Display(Name = "Peso bruto")]
        public double PesoBruto { get; set; } // peso_bruto

        [Required(AllowEmptyStrings = true)]
        [MaxLength(119)]
        [StringLength(119)]
        [Display(Name = "Total bultos")]
        public string TotalBultos { get; set; } // total_bultos (length: 119)

        [Required]
        [Display(Name = "Tipo cambio")]
        public double TipoCambio { get; set; } // tipo_cambio

        [Required]
        [Display(Name = "Factor paridad")]
        public double FactorParidad { get; set; } // factor_paridad

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Pais factor paridad")]
        public string PaisFactorParidad { get; set; } // pais_factor_paridad (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Incoterm")]
        public string Incoterm { get; set; } // incoterm (length: 3)

        [Required]
        [Display(Name = "Valor factura moneda extranjera")]
        public double ValorFacturaMonedaExtranjera { get; set; } // valor_factura_moneda_extranjera

        [Required]
        [Display(Name = "Embalajes")]
        public double Embalajes { get; set; } // embalajes

        [Required]
        [Display(Name = "Fletes")]
        public double Fletes { get; set; } // fletes

        [Required]
        [Display(Name = "Seguros")]
        public double Seguros { get; set; } // seguros

        [Required]
        [Display(Name = "Otros")]
        public double Otros { get; set; } // otros

        [Required]
        [Display(Name = "Decrementables")]
        public double Decrementables { get; set; } // decrementables

        [Required]
        [Display(Name = "Importe dta fp 1")]
        public double ImporteDtaFp1 { get; set; } // importe_dta_fp1

        [Required]
        [Display(Name = "Importe dta fp 2")]
        public double ImporteDtaFp2 { get; set; } // importe_dta_fp2

        [Required]
        [Display(Name = "Valor comercial moneda extranjera")]
        public double ValorComercialMonedaExtranjera { get; set; } // valor_comercial_moneda_extranjera

        [Required(AllowEmptyStrings = true)]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "Firma aduana")]
        public string FirmaAduana { get; set; } // firma_aduana (length: 8)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Destinarios")]
        public string Destinarios { get; set; } // destinarios (length: 254)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha reexpedicion")]
        public System.DateTime FechaReexpedicion { get; set; } // fecha_reexpedicion

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Transportista")]
        public string Transportista { get; set; } // transportista (length: 254)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Naviera")]
        public string Naviera { get; set; } // naviera (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Conocimiento")]
        public string Conocimiento { get; set; } // conocimiento (length: 20)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha reconocimiento 1")]
        public System.DateTime FechaReconocimiento1 { get; set; } // fecha_reconocimiento1

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha reconocimiento 2")]
        public System.DateTime FechaReconocimiento2 { get; set; } // fecha_reconocimiento2

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha desaduanamiento")]
        public System.DateTime FechaDesaduanamiento { get; set; } // fecha_desaduanamiento

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Contenedores")]
        public string Contenedores { get; set; } // contenedores (length: 254)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Mercancia")]
        public string Mercancia { get; set; } // mercancia (length: 254)

        [Required]
        [Display(Name = "Valor factura moneda dolares")]
        public double ValorFacturaMonedaDolares { get; set; } // valor_factura_moneda_dolares

        [Required]
        [Display(Name = "Valor factura moneda nacional")]
        public double ValorFacturaMonedaNacional { get; set; } // valor_factura_moneda_nacional

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Facturas")]
        public string Facturas { get; set; } // facturas (length: 254)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Pedido")]
        public string Pedido { get; set; } // pedido (length: 30)

        [Required]
        [Display(Name = "Valor comercial dolares")]
        public double ValorComercialDolares { get; set; } // valor_comercial_dolares

        [Required]
        [Display(Name = "Valor comercial pesosmx")]
        public double ValorComercialPesosmx { get; set; } // valor_comercial_pesosmx

        [Required]
        [Display(Name = "Valor aduana")]
        public double ValorAduana { get; set; } // valor_aduana

        [Required]
        [Display(Name = "Importe ieps")]
        public double ImporteIeps { get; set; } // importe_ieps

        [Required]
        [Display(Name = "Importe cuota compensatoria")]
        public double ImporteCuotaCompensatoria { get; set; } // importe_cuota_compensatoria

        [Required]
        [Display(Name = "Importe aladi")]
        public double ImporteAladi { get; set; } // importe_aladi

        [Required]
        [Display(Name = "Tasa iva")]
        public double TasaIva { get; set; } // tasa_iva

        [Required(AllowEmptyStrings = true)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Forma pago iva 1")]
        public string FormaPagoIva1 { get; set; } // forma_pago_iva1 (length: 2)

        [Required]
        [Display(Name = "Importe iva 1")]
        public double ImporteIva1 { get; set; } // importe_iva1

        [Required(AllowEmptyStrings = true)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Forma pago iva 2")]
        public string FormaPagoIva2 { get; set; } // forma_pago_iva2 (length: 2)

        [Required]
        [Display(Name = "Importe iva 2")]
        public double ImporteIva2 { get; set; } // importe_iva2

        [Required]
        [Display(Name = "Tasa adv")]
        public double TasaAdv { get; set; } // tasa_adv

        [Required(AllowEmptyStrings = true)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Forma pago adv 1")]
        public string FormaPagoAdv1 { get; set; } // forma_pago_adv1 (length: 2)

        [Required]
        [Display(Name = "Importe adv 1")]
        public double ImporteAdv1 { get; set; } // importe_adv1

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Permisos")]
        public string Permisos { get; set; } // permisos (length: 254)

        [Required]
        [Display(Name = "Total efectivo")]
        public double TotalEfectivo { get; set; } // total_efectivo

        [Required]
        [Display(Name = "Total otros")]
        public double TotalOtros { get; set; } // total_otros

        [Required]
        [Display(Name = "Total pagado")]
        public double TotalPagado { get; set; } // total_pagado

        [Required]
        [Display(Name = "Precio unitario")]
        public double PrecioUnitario { get; set; } // precio_unitario

        [Required]
        [Display(Name = "Vinculacion")]
        public double Vinculacion { get; set; } // vinculacion

        [Required]
        [Display(Name = "Unidad comercializacion")]
        public double UnidadComercializacion { get; set; } // unidad_comercializacion

        [Required]
        [Display(Name = "Cantidad unidad comercializacion")]
        public double CantidadUnidadComercializacion { get; set; } // cantidad_unidad_comercializacion

        [Required(AllowEmptyStrings = true)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Fracciones")]
        public string Fracciones { get; set; } // fracciones (length: 254)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "No pedimento rectificado")]
        public string NoPedimentoRectificado { get; set; } // no_pedimento_rectificado (length: 7)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Terminal")]
        public string Terminal { get; set; } // terminal (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Carrier")]
        public string Carrier { get; set; } // carrier (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Puerto origen")]
        public string PuertoOrigen { get; set; } // puerto_origen (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Ctagastos")]
        public string Ctagastos { get; set; } // ctagastos (length: 10)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Foliocta")]
        public string Foliocta { get; set; } // foliocta (length: 12)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fechacta")]
        public System.DateTime Fechacta { get; set; } // fechacta

        [Required]
        [Display(Name = "Totcont")]
        public double Totcont { get; set; } // totcont

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tipocont")]
        public string Tipocont { get; set; } // tipocont (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Pedidocta")]
        public string Pedidocta { get; set; } // pedidocta (length: 40)

        [Required]
        [Display(Name = "Dtacta")]
        public double Dtacta { get; set; } // dtacta

        [Required]
        [Display(Name = "Muellajes")]
        public double Muellajes { get; set; } // muellajes

        [Required]
        [Display(Name = "Maniobras")]
        public double Maniobras { get; set; } // maniobras

        [Required]
        [Display(Name = "Almacenaje")]
        public double Almacenaje { get; set; } // almacenaje

        [Required]
        [Display(Name = "Prevalida")]
        public double Prevalida { get; set; } // prevalida

        [Required]
        [Display(Name = "Tramrectif")]
        public double Tramrectif { get; set; } // tramrectif

        [Required]
        [Display(Name = "Certorig")]
        public double Certorig { get; set; } // certorig

        [Required]
        [Display(Name = "Gtscompr")]
        public double Gtscompr { get; set; } // gtscompr

        [Required]
        [Display(Name = "Servcompl")]
        public double Servcompl { get; set; } // servcompl

        [Required]
        [Display(Name = "Otrosgts")]
        public double Otrosgts { get; set; } // otrosgts

        [Required]
        [Display(Name = "Gtsrecol")]
        public double Gtsrecol { get; set; } // gtsrecol

        [Required]
        [Display(Name = "Basehon")]
        public double Basehon { get; set; } // basehon

        [Required]
        [Display(Name = "Honorarios")]
        public double Honorarios { get; set; } // honorarios

        [Required]
        [Display(Name = "Hontot")]
        public double Hontot { get; set; } // hontot

        [Required]
        [Display(Name = "Honporcont")]
        public double Honporcont { get; set; } // honporcont

        [Required]
        [Display(Name = "Honpordesp")]
        public double Honpordesp { get; set; } // honpordesp

        [Required]
        [Display(Name = "Honporcamn")]
        public double Honporcamn { get; set; } // honporcamn

        [Required]
        [Display(Name = "Sitbanc")]
        public double Sitbanc { get; set; } // sitbanc

        [Required]
        [Display(Name = "Erogacion")]
        public double Erogacion { get; set; } // erogacion

        [Required]
        [Display(Name = "Baseiva")]
        public double Baseiva { get; set; } // baseiva

        [Required]
        [Display(Name = "Ivacta")]
        public double Ivacta { get; set; } // ivacta

        [Required]
        [Display(Name = "Ivagastos")]
        public double Ivagastos { get; set; } // ivagastos

        [Required]
        [Display(Name = "Descant")]
        public double Descant { get; set; } // descant

        [Required]
        [Display(Name = "Anticipo")]
        public double Anticipo { get; set; } // anticipo

        [Required]
        [Display(Name = "Subtotal")]
        public double Subtotal { get; set; } // subtotal

        [Required]
        [Display(Name = "Totalcta")]
        public double Totalcta { get; set; } // totalcta

        [Required]
        [Display(Name = "Tccta")]
        public double Tccta { get; set; } // tccta

        [Required]
        [Display(Name = "Sdofavor")]
        public double Sdofavor { get; set; } // sdofavor

        [Required]
        [Display(Name = "Sdopagar")]
        public double Sdopagar { get; set; } // sdopagar

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Observ")]
        public string Observ { get; set; } // observ (length: 100)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fechasolic")]
        public System.DateTime Fechasolic { get; set; } // fechasolic

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fechaelab")]
        public System.DateTime Fechaelab { get; set; } // fechaelab

        [Required]
        [Display(Name = "Pagoimptos")]
        public double Pagoimptos { get; set; } // pagoimptos

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Plaza")]
        public string Plaza { get; set; } // plaza (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Observdah")]
        public string Observdah { get; set; } // observdah (length: 100)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fechaot")]
        public System.DateTime Fechaot { get; set; } // fechaot

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Horaot")]
        public string Horaot { get; set; } // horaot (length: 50)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fechatc")]
        public System.DateTime Fechatc { get; set; } // fechatc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Horatc")]
        public string Horatc { get; set; } // horatc (length: 10)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fechart")]
        public System.DateTime Fechart { get; set; } // fechart

        [Required]
        [Display(Name = "Transnl")]
        public double Transnl { get; set; } // transnl

        [Required]
        [Display(Name = "Diasfptc")]
        public double Diasfptc { get; set; } // diasfptc

        [Required]
        [Display(Name = "Diasfpot")]
        public double Diasfpot { get; set; } // diasfpot

        [Required]
        [Display(Name = "Diasottc")]
        public double Diasottc { get; set; } // diasottc

        [Required]
        [Display(Name = "Diastcrt")]
        public double Diastcrt { get; set; } // diastcrt

        [Required]
        [Display(Name = "Terminalcc")]
        public double Terminalcc { get; set; } // terminalcc

        [Required]
        [Display(Name = "Carriercc")]
        public double Carriercc { get; set; } // carriercc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ptoorigen")]
        public string Ptoorigen { get; set; } // ptoorigen (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Firmaelec")]
        public string Firmaelec { get; set; } // firmaelec (length: 20)

        [Required]
        [Display(Name = "Cvetar")]
        public double Cvetar { get; set; } // cvetar

        public SisRefAa()
        {
            IdRef = 0;
            Referencia = "";
            Consecutivo = "";
            NoPedimento = "";
            TipoOperacion = "";
            ClavePedto = "";
            DescripcionClavePedto = "";
            Regimen = "";
            PaisOrigenDestino = "";
            NombrePaisOrigenDestino = "";
            PaisVendedorComprador = "";
            NombrePaisVendedorComprador = "";
            AduanaSeccion = "";
            NombreAduanaEntrada = "";
            NombreAduanaDespacho = "";
            Cliente = 0;
            NombreCliente = "";
            Proveedor = 0;
            NombreProveedor = "";
            RegistroBuque = "";
            NombreBuque = "";
            BanderaBuque = "";
            MedioTransporte = "";
            PesoBruto = 0;
            TotalBultos = "";
            TipoCambio = 0;
            FactorParidad = 0;
            PaisFactorParidad = "";
            Incoterm = "";
            ValorFacturaMonedaExtranjera = 0;
            Embalajes = 0;
            Fletes = 0;
            Seguros = 0;
            Otros = 0;
            Decrementables = 0;
            ImporteDtaFp1 = 0;
            ImporteDtaFp2 = 0;
            ValorComercialMonedaExtranjera = 0;
            FirmaAduana = "";
            Destinarios = "";
            Transportista = "";
            Naviera = "";
            Conocimiento = "";
            Contenedores = "";
            Mercancia = "";
            ValorFacturaMonedaDolares = 0;
            ValorFacturaMonedaNacional = 0;
            Facturas = "";
            Pedido = "";
            ValorComercialDolares = 0;
            ValorComercialPesosmx = 0;
            ValorAduana = 0;
            ImporteIeps = 0;
            ImporteCuotaCompensatoria = 0;
            ImporteAladi = 0;
            TasaIva = 0;
            FormaPagoIva1 = "";
            ImporteIva1 = 0;
            FormaPagoIva2 = "";
            ImporteIva2 = 0;
            TasaAdv = 0;
            FormaPagoAdv1 = "";
            ImporteAdv1 = 0;
            Permisos = "";
            TotalEfectivo = 0;
            TotalOtros = 0;
            TotalPagado = 0;
            PrecioUnitario = 0;
            Vinculacion = 0;
            UnidadComercializacion = 0;
            CantidadUnidadComercializacion = 0;
            Fracciones = "";
            NoPedimentoRectificado = "";
            Terminal = "";
            Carrier = "";
            PuertoOrigen = "";
            Ctagastos = "";
            Foliocta = "";
            Totcont = 0;
            Tipocont = "";
            Pedidocta = "";
            Dtacta = 0;
            Muellajes = 0;
            Maniobras = 0;
            Almacenaje = 0;
            Prevalida = 0;
            Tramrectif = 0;
            Certorig = 0;
            Gtscompr = 0;
            Servcompl = 0;
            Otrosgts = 0;
            Gtsrecol = 0;
            Basehon = 0;
            Honorarios = 0;
            Hontot = 0;
            Honporcont = 0;
            Honpordesp = 0;
            Honporcamn = 0;
            Sitbanc = 0;
            Erogacion = 0;
            Baseiva = 0;
            Ivacta = 0;
            Ivagastos = 0;
            Descant = 0;
            Anticipo = 0;
            Subtotal = 0;
            Totalcta = 0;
            Tccta = 0;
            Sdofavor = 0;
            Sdopagar = 0;
            Observ = "";
            Pagoimptos = 0;
            Plaza = "";
            Observdah = "";
            Horaot = "";
            Horatc = "";
            Transnl = 0;
            Diasfptc = 0;
            Diasfpot = 0;
            Diasottc = 0;
            Diastcrt = 0;
            Terminalcc = 0;
            Carriercc = 0;
            Ptoorigen = "";
            Firmaelec = "";
            Cvetar = 0;
        }
    }

}
// </auto-generated>
