// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_49_OPERACIONES_FACTURAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir49OperacionesFacturaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir49OperacionesFactura>
    {
        public SIR_Sir49OperacionesFacturaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir49OperacionesFacturaConfiguration(string schema)
        {
            ToTable("SIR_49_OPERACIONES_FACTURAS", schema);
            HasKey(x => x.NIdOperFact49);

            Property(x => x.NIdOperFact49).HasColumnName(@"nIdOperFact49").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NOperacion).HasColumnName(@"nOperacion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DFecha).HasColumnName(@"dFecha").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsOptional();
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsRequired();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsRequired();
            Property(x => x.BPartidaComoFraccion).HasColumnName(@"bPartidaComoFraccion").HasColumnType("bit").IsRequired();
            Property(x => x.SModoAgrupacion).HasColumnName(@"sModoAgrupacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.BIdentificadorPermiso).HasColumnName(@"bIdentificadorPermiso").HasColumnType("bit").IsRequired();
            Property(x => x.SInstrucciones).HasColumnName(@"sInstrucciones").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SObservaciones).HasColumnName(@"sObservaciones").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.DPago).HasColumnName(@"dPago").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsOptional();
            Property(x => x.SModoUnion).HasColumnName(@"sModoUnion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SLimitador).HasColumnName(@"sLimitador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.SOperCove).HasColumnName(@"sOperCOVE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SLimitadorObs).HasColumnName(@"sLimitadorObs").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.SMotivoDesagrupacion).HasColumnName(@"sMotivoDesagrupacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.DFechaImpresionNota).HasColumnName(@"dFechaImpresionNota").HasColumnType("datetime").IsOptional();
            Property(x => x.BPreNota).HasColumnName(@"bPreNota").HasColumnType("bit").IsOptional();
            Property(x => x.DFechaCapturaNota).HasColumnName(@"dFechaCapturaNota").HasColumnType("datetime").IsOptional();
            Property(x => x.BAutorizadaVulnerables).HasColumnName(@"bAutorizadaVulnerables").HasColumnType("bit").IsOptional();
            Property(x => x.NStatusLock).HasColumnName(@"nStatusLock").HasColumnType("int").IsOptional();
            Property(x => x.SDescStatus).HasColumnName(@"sDescStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(800);
            Property(x => x.BAgrupando).HasColumnName(@"bAgrupando").HasColumnType("bit").IsOptional();
            Property(x => x.BCoveSubdivision).HasColumnName(@"bCOVESubdivision").HasColumnType("bit").IsOptional();
            Property(x => x.BOperaSubdivision).HasColumnName(@"bOperaSubdivision").HasColumnType("bit").IsOptional();
            Property(x => x.NIdImex07).HasColumnName(@"nIdImex07").HasColumnType("int").IsOptional();
            Property(x => x.NIdImex).HasColumnName(@"nIdImex").HasColumnType("int").IsOptional();
            Property(x => x.BDesactivaVmAutomatico).HasColumnName(@"bDesactivaVMAutomatico").HasColumnType("bit").IsOptional();
            Property(x => x.BCoveAdenda).HasColumnName(@"bCOVEAdenda").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasOptional(a => a.Admin_Adminc07Cliente).WithMany(b => b.SIR_Sir49OperacionesFactura).HasForeignKey(c => c.NIdClie07).WillCascadeOnDelete(false); // FK_SIR_49_OPERACIONES_FACTURAS_ADMINC_07_CLIENTES
            HasOptional(a => a.CatCliente_NIdImex).WithMany(b => b.SIR_Sir49OperacionesFactura_NIdImex).HasForeignKey(c => c.NIdImex).WillCascadeOnDelete(false); // FK_SIR_49_OPERACIONES_FACTURAS_CAT_CLIENTES_IMEX
            HasRequired(a => a.CatCliente_NIdCliente).WithMany(b => b.SIR_Sir49OperacionesFactura_NIdCliente).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_49_OPERACIONES_FACTURAS_cat_clientes
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir49OperacionesFactura).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_49_OPERACIONES_FACTURAS_cat_usr_ed
            HasRequired(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir49OperacionesFactura).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_49_OPERACIONES_FACTURAS_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
