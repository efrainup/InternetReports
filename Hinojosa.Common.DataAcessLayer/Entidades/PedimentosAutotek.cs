// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // Pedimentos_Autotek
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PedimentosAutotek
    {
        [Required]
        [Display(Name = "N ID registro")]
        public int NIdRegistro { get; set; } // nIdRegistro (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S referencia")]
        public string SReferencia { get; set; } // sReferencia (length: 15)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "S patente")]
        public string SPatente { get; set; } // sPatente (length: 4)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "S num pedimento")]
        public string SNumPedimento { get; set; } // sNumPedimento (length: 8)

        [Required]
        [Display(Name = "N tipo operacion")]
        public int NTipoOperacion { get; set; } // nTipoOperacion

        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "S peso")]
        public string SPeso { get; set; } // sPeso (length: 20)

        [Display(Name = "D dta")]
        public decimal? DDta { get; set; } // dDTA

        [Display(Name = "D prev")]
        public decimal? DPrev { get; set; } // dPREV

        [Display(Name = "D igi")]
        public decimal? DIgi { get; set; } // dIGI

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S proveedor")]
        public string SProveedor { get; set; } // sProveedor (length: 250)

        [Display(Name = "D valor us")]
        public decimal? DValorUs { get; set; } // dValorUS

        [Display(Name = "D valor aduana")]
        public decimal? DValorAduana { get; set; } // dValorAduana

        [Display(Name = "D iva")]
        public decimal? DIva { get; set; } // dIVA

        [Display(Name = "D cnt")]
        public decimal? DCnt { get; set; } // dCNT
    }

}
// </auto-generated>
