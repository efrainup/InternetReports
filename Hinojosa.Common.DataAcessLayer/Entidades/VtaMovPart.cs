// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // vta_mov_part
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VtaMovPart
    {
        [Required]
        [Display(Name = "Id part")]
        public int IdPart { get; set; } // id_part (Primary key)

        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc

        [Required]
        [Display(Name = "Id pro")]
        public int IdPro { get; set; } // id_pro

        [Required]
        [Display(Name = "Id impto")]
        public int IdImpto { get; set; } // id_impto

        [Required]
        [Display(Name = "No part")]
        public int NoPart { get; set; } // no_part

        [Required]
        [Display(Name = "Cant")]
        public double Cant { get; set; } // cant

        [Required]
        [Display(Name = "Pre siva")]
        public double PreSiva { get; set; } // pre_siva

        [Required]
        [Display(Name = "Pre")]
        public double Pre { get; set; } // pre

        [Required]
        [Display(Name = "Dcto ptg")]
        public double DctoPtg { get; set; } // dcto_ptg

        [Required]
        [Display(Name = "Dcto mto")]
        public double DctoMto { get; set; } // dcto_mto

        [Required]
        [Display(Name = "Costo")]
        public double Costo { get; set; } // costo

        [Required]
        [Display(Name = "Costo total")]
        public double CostoTotal { get; set; } // costo_total

        [Required]
        [Display(Name = "Sub total")]
        public double SubTotal { get; set; } // sub_total

        [Required]
        [Display(Name = "Tot siva")]
        public double TotSiva { get; set; } // tot_siva

        [Required]
        [Display(Name = "Tot iva")]
        public double TotIva { get; set; } // tot_iva

        [Required]
        [Display(Name = "Tot part")]
        public double TotPart { get; set; } // tot_part

        [Required]
        [Display(Name = "Tasa")]
        public double Tasa { get; set; } // tasa

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Codigo")]
        public string Codigo { get; set; } // codigo (length: 30)

        [Required]
        [Display(Name = "Id suc")]
        public int IdSuc { get; set; } // id_suc

        ///<summary>
        /// 1=Afecto Inventarios 0=No Afecto Inventario
        ///</summary>
        [Display(Name = "C afect inv")]
        public byte? CAfectInv { get; set; } // c_afect_inv

        [Required]
        [Display(Name = "Id part kit")]
        public int IdPartKit { get; set; } // id_part_kit

        [Required]
        [Display(Name = "Cant dev")]
        public double CantDev { get; set; } // cant_dev

        [Required]
        [Display(Name = "Importe dev")]
        public double ImporteDev { get; set; } // importe_dev

        [Display(Name = "Id almac")]
        public int? IdAlmac { get; set; } // id_almac

        [Required]
        [Display(Name = "Id com ser lot")]
        public int IdComSerLot { get; set; } // id_com_ser_lot

        [Required]
        [Display(Name = "Id pro lis")]
        public int IdProLis { get; set; } // id_pro_lis

        [Required]
        [Display(Name = "Id lis pre")]
        public int IdLisPre { get; set; } // id_lis_pre

        [Required]
        [Display(Name = "C prec modif")]
        public int CPrecModif { get; set; } // c_prec_modif

        [Required]
        [Display(Name = "Id part apl")]
        public int IdPartApl { get; set; } // id_part_apl

        ///<summary>
        /// monto del redondeo
        ///</summary>
        [Required]
        [Display(Name = "Mto red")]
        public double MtoRed { get; set; } // mto_red

        ///<summary>
        /// monto real sin redondeo
        ///</summary>
        [Required]
        [Display(Name = "Mto real")]
        public double MtoReal { get; set; } // mto_real

        [Required]
        [Display(Name = "Id kardex")]
        public int IdKardex { get; set; } // id_kardex

        // Reverse navigation

        /// <summary>
        /// Child VtaMovPartKits where [vta_mov_part_kit].[id_part] point to this entity (FK_vta_mov_part_kit_vta_mov_part)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaMovPartKit> VtaMovPartKits { get; set; } // vta_mov_part_kit.FK_vta_mov_part_kit_vta_mov_part

        // Foreign keys

        /// <summary>
        /// Parent VtaMovDoc pointed by [vta_mov_part].([IdDoc]) (FK_vta_mov_part_vta_mov_doc)
        /// </summary>
        public virtual VtaMovDoc VtaMovDoc { get; set; } // FK_vta_mov_part_vta_mov_doc

        public VtaMovPart()
        {
            DctoPtg = 0;
            DctoMto = 0;
            IdSuc = 0;
            IdPartKit = 0;
            CantDev = 0;
            ImporteDev = 0;
            IdComSerLot = 0;
            IdProLis = 0;
            IdLisPre = 0;
            CPrecModif = 0;
            IdPartApl = 0;
            MtoRed = 0;
            MtoReal = 0;
            IdKardex = 0;
            VtaMovPartKits = new System.Collections.Generic.List<VtaMovPartKit>();
        }
    }

}
// </auto-generated>
