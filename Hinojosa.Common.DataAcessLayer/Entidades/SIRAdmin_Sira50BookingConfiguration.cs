// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_50_BOOKING
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira50BookingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIRAdmin_Sira50Booking>
    {
        public SIRAdmin_Sira50BookingConfiguration()
            : this("SIRAdmin")
        {
        }

        public SIRAdmin_Sira50BookingConfiguration(string schema)
        {
            ToTable("SIRA_50_BOOKING", schema);
            HasKey(x => x.NIdBooking50);

            Property(x => x.NIdBooking50).HasColumnName(@"nIdBooking50").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SBooking).HasColumnName(@"sBooking").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DFechaApertura).HasColumnName(@"dFechaApertura").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsOptional();
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsOptional();
            Property(x => x.NIdAgenteAdu).HasColumnName(@"nIdAgenteAdu").HasColumnType("int").IsOptional();
            Property(x => x.NIdAgenteAdu42).HasColumnName(@"nIdAgenteAdu42").HasColumnType("int").IsOptional();
            Property(x => x.SMercancia).HasColumnName(@"sMercancia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.DFechaCierreOper).HasColumnName(@"dFechaCierreOper").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdEjecutivo).HasColumnName(@"nIdEjecutivo").HasColumnType("int").IsOptional();
            Property(x => x.NIdEjecutivo02).HasColumnName(@"nIdEjecutivo02").HasColumnType("int").IsOptional();
            Property(x => x.NStatusVig).HasColumnName(@"nStatusVig").HasColumnType("tinyint").IsRequired();
            Property(x => x.SObservaciones).HasColumnName(@"sObservaciones").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SMotivoEliminacion).HasColumnName(@"sMotivoEliminacion").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NIdUsuario).HasColumnName(@"nIdUsuario").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuario01).HasColumnName(@"nIdUsuario01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuEd).HasColumnName(@"nIdUsuEd").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEd).HasColumnName(@"dFechaEd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BCapturaManual).HasColumnName(@"bCapturaManual").HasColumnType("bit").IsOptional();
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsOptional();
            Property(x => x.STipoTransporte).HasColumnName(@"sTipoTransporte").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.Admin_Admina01Usuario).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdUsuario01).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_ADMINA_01_USUARIOS
            HasOptional(a => a.Admin_Admina02Personal).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdEjecutivo02).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_ADMINA_02_PERSONAL
            HasOptional(a => a.Admin_Adminc07Cliente).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdClie07).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_ADMINC_07_CLIENTES_nIdClie07
            HasOptional(a => a.Admin_Adminc42Proveedore).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdAgenteAdu42).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_ADMINC_42_PROVEEDORES
            HasOptional(a => a.CatCliente).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_cat_clientes
            HasOptional(a => a.CatEmp).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdEjecutivo).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_cat_emp
            HasOptional(a => a.CatProv).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdAgenteAdu).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_cat_prov
            HasOptional(a => a.CatUsr).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdUsuario).WillCascadeOnDelete(false); // FK_SIRA_50_BOOKING_cat_usr
            HasOptional(a => a.SIR_Sir60Referencia).WithMany(b => b.SIRAdmin_Sira50Booking).HasForeignKey(c => c.NIdReferencia60); // FK_SIRA_50_BOOKING_SIR_60_REFERENCIAS
        }
    }

}
// </auto-generated>
