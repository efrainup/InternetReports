// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_135_CARGA_SUELTA_DETALLE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir135CargaSueltaDetalleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir135CargaSueltaDetalle>
    {
        public SIR_Sir135CargaSueltaDetalleConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir135CargaSueltaDetalleConfiguration(string schema)
        {
            ToTable("SIR_135_CARGA_SUELTA_DETALLE", schema);
            HasKey(x => x.NIdCargaDet135);

            Property(x => x.NIdCargaDet135).HasColumnName(@"nIdCargaDet135").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsOptional();
            Property(x => x.NIdCargaSuelta66).HasColumnName(@"nIdCargaSuelta66").HasColumnType("int").IsRequired();
            Property(x => x.NCantidad).HasColumnName(@"nCantidad").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NPeso).HasColumnName(@"nPeso").HasColumnType("decimal").IsOptional().HasPrecision(21,10);
            Property(x => x.NTipoSalida).HasColumnName(@"nTipoSalida").HasColumnType("int").IsOptional();
            Property(x => x.NIdSalBod205).HasColumnName(@"nIdSalBod205").HasColumnType("int").IsOptional();
            Property(x => x.SDatosFacturacion).HasColumnName(@"sDatosFacturacion").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SInstrucciones).HasColumnName(@"sInstrucciones").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.STransportistaMex).HasColumnName(@"sTransportistaMex").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.BReempacar).HasColumnName(@"bReempacar").HasColumnType("bit").IsRequired();
            Property(x => x.SDireccionCliente).HasColumnName(@"sDireccionCliente").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BFletePagado).HasColumnName(@"bFletePagado").HasColumnType("bit").IsRequired();
            Property(x => x.SObservacionesRemision).HasColumnName(@"sObservacionesRemision").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NOrden).HasColumnName(@"nOrden").HasColumnType("int").IsOptional();
            Property(x => x.NLargoFt).HasColumnName(@"nLargoFT").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NAnchoFt).HasColumnName(@"nAnchoFT").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NAltoFt).HasColumnName(@"nAltoFT").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NLargoM).HasColumnName(@"nLargoM").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NAnchoM).HasColumnName(@"nAnchoM").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NAltoM).HasColumnName(@"nAltoM").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.BDescargar).HasColumnName(@"bDescargar").HasColumnType("bit").IsOptional();
            Property(x => x.NIdRefConsolidaMt).HasColumnName(@"nIdRefConsolidaMT").HasColumnType("int").IsOptional();
            Property(x => x.SIdTransportistaMex42).HasColumnName(@"sIdTransportistaMex42").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.SIdConsignatarios42).HasColumnName(@"sIdConsignatarios42").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.NIdRem206).HasColumnName(@"nIdRem206").HasColumnType("int").IsOptional();
            Property(x => x.SConsignatarios).HasColumnName(@"sConsignatarios").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SPedimento).HasColumnName(@"sPedimento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);

            // Foreign keys
            HasOptional(a => a.SIR_Sir205SalidasBodega).WithMany(b => b.SIR_Sir135CargaSueltaDetalle).HasForeignKey(c => c.NIdSalBod205).WillCascadeOnDelete(false); // FK_SIR_135_CARGA_SUELTA_DETALLE_SIR_205_SALIDAS_BODEGA
            HasOptional(a => a.SIR_Sir206Remesa).WithMany(b => b.SIR_Sir135CargaSueltaDetalle).HasForeignKey(c => c.NIdRem206).WillCascadeOnDelete(false); // FK_SIR_135_CARGA_SUELTA_DETALLE_SIR_206_REMESAS
            HasOptional(a => a.SIR_Sir60Referencia).WithMany(b => b.SIR_Sir135CargaSueltaDetalle).HasForeignKey(c => c.NIdReferencia60).WillCascadeOnDelete(false); // FK_SIR_135_CARGA_SUELTA_DETALLE_SIR_60_REFERENCIAS
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir135CargaSueltaDetalle).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_135_CARGA_SUELTA_DETALLE_cat_usr_ed
            HasRequired(a => a.SIR_Sir66CargaSuelta).WithMany(b => b.SIR_Sir135CargaSueltaDetalle).HasForeignKey(c => c.NIdCargaSuelta66).WillCascadeOnDelete(false); // FK_SIR_135_CARGA_SUELTA_DETALLE_SIR_66_CARGA_SUELTA
            HasMany(t => t.SIR_Sir181RelacionCarga).WithMany(t => t.SIR_Sir135CargaSueltaDetalle).Map(m =>
            {
                m.ToTable("SIR_182_RELACION_CARGA_CS", "SIR");
                m.MapLeftKey("nIdCargaDet135");
                m.MapRightKey("nIdRelCarga181");
            });
        }
    }

}
// </auto-generated>
