// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_50_BOOKING
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira50Booking
    {
        [Required]
        [Display(Name = "N ID booking 50")]
        public int NIdBooking50 { get; set; } // nIdBooking50 (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "S booking")]
        public string SBooking { get; set; } // sBooking (length: 64)

        [Required]
        [Display(Name = "D fecha apertura")]
        public System.DateTime DFechaApertura { get; set; } // dFechaApertura

        [Required]
        [Display(Name = "N tipo operacion")]
        public byte NTipoOperacion { get; set; } // nTipoOperacion

        [Display(Name = "N ID cliente")]
        public int? NIdCliente { get; set; } // nIdCliente

        [Display(Name = "N ID clie 07")]
        public int? NIdClie07 { get; set; } // nIdClie07

        [Display(Name = "N ID agente adu")]
        public int? NIdAgenteAdu { get; set; } // nIdAgenteAdu

        [Display(Name = "N ID agente adu 42")]
        public int? NIdAgenteAdu42 { get; set; } // nIdAgenteAdu42

        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "S mercancia")]
        public string SMercancia { get; set; } // sMercancia (length: 200)

        [Display(Name = "D fecha cierre oper")]
        public System.DateTime? DFechaCierreOper { get; set; } // dFechaCierreOper

        [Display(Name = "N ID ejecutivo")]
        public int? NIdEjecutivo { get; set; } // nIdEjecutivo

        [Display(Name = "N ID ejecutivo 02")]
        public int? NIdEjecutivo02 { get; set; } // nIdEjecutivo02

        [Required]
        [Display(Name = "N status vig")]
        public byte NStatusVig { get; set; } // nStatusVig

        [Display(Name = "S observaciones")]
        public string SObservaciones { get; set; } // sObservaciones

        [Display(Name = "S motivo eliminacion")]
        public string SMotivoEliminacion { get; set; } // sMotivoEliminacion

        [Display(Name = "N ID usuario")]
        public int? NIdUsuario { get; set; } // nIdUsuario

        [Display(Name = "N ID usuario 01")]
        public int? NIdUsuario01 { get; set; } // nIdUsuario01

        [Display(Name = "N ID usu ed")]
        public int? NIdUsuEd { get; set; } // nIdUsuEd

        [Display(Name = "D fecha ed")]
        public System.DateTime? DFechaEd { get; set; } // dFechaEd

        [Display(Name = "B captura manual")]
        public bool? BCapturaManual { get; set; } // bCapturaManual

        [Display(Name = "N ID referencia 60")]
        public int? NIdReferencia60 { get; set; } // nIdReferencia60

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S tipo transporte")]
        public string STipoTransporte { get; set; } // sTipoTransporte (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child SIRAdmin_Sira51BookingContenedor where [SIRA_51_BOOKING_CONTENEDOR].[nIdBooking50] point to this entity (FK_SIRA_51_BOOKING_CONTENEDOR_SIRA_50_BOOKING)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIRAdmin_Sira51BookingContenedor> SIRAdmin_Sira51BookingContenedor { get; set; } // SIRA_51_BOOKING_CONTENEDOR.FK_SIRA_51_BOOKING_CONTENEDOR_SIRA_50_BOOKING
        /// <summary>
        /// Child SIRAdmin_Sira52BookingObserv where [SIRA_52_BOOKING_OBSERV].[nIdBooking50] point to this entity (FK_SIRA_52_BOOKING_OBSERV_SIRA_50_BOOKING)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIRAdmin_Sira52BookingObserv> SIRAdmin_Sira52BookingObserv { get; set; } // SIRA_52_BOOKING_OBSERV.FK_SIRA_52_BOOKING_OBSERV_SIRA_50_BOOKING

        // Foreign keys

        /// <summary>
        /// Parent Admin_Admina01Usuario pointed by [SIRA_50_BOOKING].([NIdUsuario01]) (FK_SIRA_50_BOOKING_ADMINA_01_USUARIOS)
        /// </summary>
        public virtual Admin_Admina01Usuario Admin_Admina01Usuario { get; set; } // FK_SIRA_50_BOOKING_ADMINA_01_USUARIOS

        /// <summary>
        /// Parent Admin_Admina02Personal pointed by [SIRA_50_BOOKING].([NIdEjecutivo02]) (FK_SIRA_50_BOOKING_ADMINA_02_PERSONAL)
        /// </summary>
        public virtual Admin_Admina02Personal Admin_Admina02Personal { get; set; } // FK_SIRA_50_BOOKING_ADMINA_02_PERSONAL

        /// <summary>
        /// Parent Admin_Adminc07Cliente pointed by [SIRA_50_BOOKING].([NIdClie07]) (FK_SIRA_50_BOOKING_ADMINC_07_CLIENTES_nIdClie07)
        /// </summary>
        public virtual Admin_Adminc07Cliente Admin_Adminc07Cliente { get; set; } // FK_SIRA_50_BOOKING_ADMINC_07_CLIENTES_nIdClie07

        /// <summary>
        /// Parent Admin_Adminc42Proveedore pointed by [SIRA_50_BOOKING].([NIdAgenteAdu42]) (FK_SIRA_50_BOOKING_ADMINC_42_PROVEEDORES)
        /// </summary>
        public virtual Admin_Adminc42Proveedore Admin_Adminc42Proveedore { get; set; } // FK_SIRA_50_BOOKING_ADMINC_42_PROVEEDORES

        /// <summary>
        /// Parent CatCliente pointed by [SIRA_50_BOOKING].([NIdCliente]) (FK_SIRA_50_BOOKING_cat_clientes)
        /// </summary>
        public virtual CatCliente CatCliente { get; set; } // FK_SIRA_50_BOOKING_cat_clientes

        /// <summary>
        /// Parent CatEmp pointed by [SIRA_50_BOOKING].([NIdEjecutivo]) (FK_SIRA_50_BOOKING_cat_emp)
        /// </summary>
        public virtual CatEmp CatEmp { get; set; } // FK_SIRA_50_BOOKING_cat_emp

        /// <summary>
        /// Parent CatProv pointed by [SIRA_50_BOOKING].([NIdAgenteAdu]) (FK_SIRA_50_BOOKING_cat_prov)
        /// </summary>
        public virtual CatProv CatProv { get; set; } // FK_SIRA_50_BOOKING_cat_prov

        /// <summary>
        /// Parent CatUsr pointed by [SIRA_50_BOOKING].([NIdUsuario]) (FK_SIRA_50_BOOKING_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIRA_50_BOOKING_cat_usr

        /// <summary>
        /// Parent SIR_Sir60Referencia pointed by [SIRA_50_BOOKING].([NIdReferencia60]) (FK_SIRA_50_BOOKING_SIR_60_REFERENCIAS)
        /// </summary>
        public virtual SIR_Sir60Referencia SIR_Sir60Referencia { get; set; } // FK_SIRA_50_BOOKING_SIR_60_REFERENCIAS

        public SIRAdmin_Sira50Booking()
        {
            NStatusVig = 1;
            DFechaEd = System.DateTime.Now;
            BCapturaManual = false;
            SIRAdmin_Sira51BookingContenedor = new System.Collections.Generic.List<SIRAdmin_Sira51BookingContenedor>();
            SIRAdmin_Sira52BookingObserv = new System.Collections.Generic.List<SIRAdmin_Sira52BookingObserv>();
        }
    }

}
// </auto-generated>
