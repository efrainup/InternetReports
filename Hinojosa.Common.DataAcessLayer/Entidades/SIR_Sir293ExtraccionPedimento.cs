// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_293_EXTRACCION_PEDIMENTOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir293ExtraccionPedimento
    {
        [Required]
        [Display(Name = "N ID extraccion 293")]
        public int NIdExtraccion293 { get; set; } // nIdExtraccion293 (Primary key)

        [Display(Name = "N ID patente 70")]
        public int? NIdPatente70 { get; set; } // nIdPatente70

        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "S pedimento")]
        public string SPedimento { get; set; } // sPedimento (length: 7)

        [Required]
        [Display(Name = "N tipo operacion")]
        public byte NTipoOperacion { get; set; } // nTipoOperacion

        [Required]
        [Display(Name = "N tipo actualizacion")]
        public byte NTipoActualizacion { get; set; } // nTipoActualizacion

        [Required]
        [Display(Name = "D entrada")]
        public System.DateTime DEntrada { get; set; } // dEntrada

        [Required]
        [Display(Name = "D entrada almacen")]
        public System.DateTime DEntradaAlmacen { get; set; } // dEntradaAlmacen

        [Required]
        [Display(Name = "D extraccion")]
        public System.DateTime DExtraccion { get; set; } // dExtraccion

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Display(Name = "N ID ref origen")]
        public int? NIdRefOrigen { get; set; } // nIdRefOrigen

        [Required]
        [Display(Name = "N tipo cambio")]
        public decimal NTipoCambio { get; set; } // nTipoCambio

        [Required]
        [Display(Name = "N factor act")]
        public decimal NFactorAct { get; set; } // nFactorAct

        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "S patente")]
        public string SPatente { get; set; } // sPatente (length: 4)

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir60Referencia where [SIR_60_REFERENCIAS].[nIdExtraccion293] point to this entity (FK_SIR_60_REFERENCIAS_SIR_293_EXTRACCION_PEDIMENTOS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir60Referencia> SIR_Sir60Referencia_NIdExtraccion293 { get; set; } // SIR_60_REFERENCIAS.FK_SIR_60_REFERENCIAS_SIR_293_EXTRACCION_PEDIMENTOS

        // Foreign keys

        /// <summary>
        /// Parent CatUsr pointed by [SIR_293_EXTRACCION_PEDIMENTOS].([NIdUsuarioEd]) (FK_SIR_293_EXTRACCION_PEDIMENTOS_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_293_EXTRACCION_PEDIMENTOS_cat_usr_ed

        /// <summary>
        /// Parent SIR_Sir60Referencia pointed by [SIR_293_EXTRACCION_PEDIMENTOS].([NIdRefOrigen]) (FK_SIR_293_EXTRACCION_PEDIMENTOS_SIR_60_REFERENCIAS_ORIGEN)
        /// </summary>
        public virtual SIR_Sir60Referencia SIR_Sir60Referencia_NIdRefOrigen { get; set; } // FK_SIR_293_EXTRACCION_PEDIMENTOS_SIR_60_REFERENCIAS_ORIGEN

        /// <summary>
        /// Parent SIR_Sir70Patente pointed by [SIR_293_EXTRACCION_PEDIMENTOS].([NIdPatente70]) (FK_SIR_293_EXTRACCION_PEDIMENTOS_SIR_70_PATENTES)
        /// </summary>
        public virtual SIR_Sir70Patente SIR_Sir70Patente { get; set; } // FK_SIR_293_EXTRACCION_PEDIMENTOS_SIR_70_PATENTES

        public SIR_Sir293ExtraccionPedimento()
        {
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            SIR_Sir60Referencia_NIdExtraccion293 = new System.Collections.Generic.List<SIR_Sir60Referencia>();
        }
    }

}
// </auto-generated>
