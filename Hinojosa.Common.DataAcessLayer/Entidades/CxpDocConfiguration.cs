// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cxp_doc
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CxpDocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CxpDoc>
    {
        public CxpDocConfiguration()
            : this("dbo")
        {
        }

        public CxpDocConfiguration(string schema)
        {
            ToTable("cxp_doc", schema);
            HasKey(x => x.IdCxpDoc);

            Property(x => x.IdCxpDoc).HasColumnName(@"id_cxp_doc").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdTipDoc).HasColumnName(@"id_tip_doc").HasColumnType("int").IsRequired();
            Property(x => x.IdProv).HasColumnName(@"id_prov").HasColumnType("int").IsRequired();
            Property(x => x.IdUsr).HasColumnName(@"id_usr").HasColumnType("int").IsRequired();
            Property(x => x.IdSuc).HasColumnName(@"id_suc").HasColumnType("int").IsRequired();
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.NumDoc).HasColumnName(@"num_doc").HasColumnType("int").IsRequired();
            Property(x => x.Referencia).HasColumnName(@"referencia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FecReg).HasColumnName(@"fec_reg").HasColumnType("datetime").IsRequired();
            Property(x => x.FecDoc).HasColumnName(@"fec_doc").HasColumnType("datetime").IsRequired();
            Property(x => x.Dias).HasColumnName(@"dias").HasColumnType("int").IsRequired();
            Property(x => x.FecVenc).HasColumnName(@"fec_venc").HasColumnType("datetime").IsRequired();
            Property(x => x.DctoPtg).HasColumnName(@"dcto_ptg").HasColumnType("float").IsRequired();
            Property(x => x.MtoDcto).HasColumnName(@"mto_dcto").HasColumnType("float").IsRequired();
            Property(x => x.ImpDoc).HasColumnName(@"imp_doc").HasColumnType("float").IsRequired();
            Property(x => x.CargosMisc).HasColumnName(@"cargos_misc").HasColumnType("float").IsRequired();
            Property(x => x.Flete).HasColumnName(@"flete").HasColumnType("float").IsRequired();
            Property(x => x.IvaFlete).HasColumnName(@"iva_flete").HasColumnType("float").IsRequired();
            Property(x => x.FleteRet).HasColumnName(@"flete_ret").HasColumnType("float").IsRequired();
            Property(x => x.PtgRetFle).HasColumnName(@"ptg_ret_fle").HasColumnType("float").IsRequired();
            Property(x => x.IsrRet).HasColumnName(@"isr_ret").HasColumnType("float").IsRequired();
            Property(x => x.PtgIsrRet).HasColumnName(@"ptg_isr_ret").HasColumnType("float").IsRequired();
            Property(x => x.Imptos).HasColumnName(@"imptos").HasColumnType("float").IsRequired();
            Property(x => x.Total).HasColumnName(@"total").HasColumnType("float").IsRequired();
            Property(x => x.Saldo).HasColumnName(@"saldo").HasColumnType("float").IsRequired();
            Property(x => x.Status).HasColumnName(@"status").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdProy).HasColumnName(@"id_proy").HasColumnType("int").IsRequired();
            Property(x => x.IdEnt).HasColumnName(@"id_ent").HasColumnType("int").IsRequired();
            Property(x => x.IdMda).HasColumnName(@"id_mda").HasColumnType("int").IsRequired();
            Property(x => x.Oper).HasColumnName(@"oper").HasColumnType("tinyint").IsRequired();
            Property(x => x.Tc).HasColumnName(@"tc").HasColumnType("float").IsRequired();
            Property(x => x.MtoDctoBse).HasColumnName(@"mto_dcto_bse").HasColumnType("float").IsRequired();
            Property(x => x.ImpDocBse).HasColumnName(@"imp_doc_bse").HasColumnType("float").IsRequired();
            Property(x => x.CargosMiscBse).HasColumnName(@"cargos_misc_bse").HasColumnType("float").IsRequired();
            Property(x => x.FleteBse).HasColumnName(@"flete_bse").HasColumnType("float").IsRequired();
            Property(x => x.IvaFleteBse).HasColumnName(@"iva_flete_bse").HasColumnType("float").IsRequired();
            Property(x => x.FleteRetBse).HasColumnName(@"flete_ret_bse").HasColumnType("float").IsRequired();
            Property(x => x.IsrRetBse).HasColumnName(@"isr_ret_bse").HasColumnType("float").IsRequired();
            Property(x => x.ImptosBse).HasColumnName(@"imptos_bse").HasColumnType("float").IsRequired();
            Property(x => x.TotalBse).HasColumnName(@"total_bse").HasColumnType("float").IsRequired();
            Property(x => x.SaldoBse).HasColumnName(@"saldo_bse").HasColumnType("float").IsRequired();
            Property(x => x.PtgIvaRet).HasColumnName(@"ptg_iva_ret").HasColumnType("float").IsRequired();
            Property(x => x.IvaRet).HasColumnName(@"iva_ret").HasColumnType("float").IsRequired();
            Property(x => x.PtgIeps).HasColumnName(@"ptg_ieps").HasColumnType("float").IsRequired();
            Property(x => x.Ieps).HasColumnName(@"ieps").HasColumnType("float").IsRequired();
            Property(x => x.IvaRetBse).HasColumnName(@"iva_ret_bse").HasColumnType("float").IsRequired();
            Property(x => x.IepsBse).HasColumnName(@"ieps_bse").HasColumnType("float").IsRequired();
            Property(x => x.NoFact).HasColumnName(@"no_fact").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.IdCpt).HasColumnName(@"id_cpt").HasColumnType("int").IsRequired();
            Property(x => x.IdCnd).HasColumnName(@"id_cnd").HasColumnType("int").IsRequired();
            Property(x => x.IdProvPad).HasColumnName(@"id_prov_pad").HasColumnType("int").IsRequired();
            Property(x => x.IdPol).HasColumnName(@"id_pol").HasColumnType("int").IsRequired();
            Property(x => x.IdClasProv).HasColumnName(@"id_clas_prov").HasColumnType("int").IsRequired();
            Property(x => x.IdRelImpDoc).HasColumnName(@"id_rel_imp_doc").HasColumnType("int").IsRequired();
            Property(x => x.IdProvFis).HasColumnName(@"id_prov_fis").HasColumnType("int").IsRequired();
            Property(x => x.IdCliCtaDe).HasColumnName(@"id_cli_cta_de").HasColumnType("int").IsRequired();
            Property(x => x.FecRec).HasColumnName(@"fec_rec").HasColumnType("datetime").IsRequired();
            Property(x => x.TipVenc).HasColumnName(@"tip_venc").HasColumnType("int").IsRequired();
            Property(x => x.FecEstCob).HasColumnName(@"fec_est_cob").HasColumnType("datetime").IsRequired();
            Property(x => x.TipNc).HasColumnName(@"tip_nc").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdRegNom).HasColumnName(@"id_reg_nom").HasColumnType("int").IsRequired();
            Property(x => x.IdPerApl).HasColumnName(@"id_per_apl").HasColumnType("int").IsRequired();
            Property(x => x.CDesdeCfd).HasColumnName(@"c_desde_cfd").HasColumnType("tinyint").IsRequired();
            Property(x => x.ArchivoXml).HasColumnName(@"archivo_xml").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.DesctoXml).HasColumnName(@"descto_xml").HasColumnType("float").IsRequired();
            Property(x => x.SubtotalXml).HasColumnName(@"subtotal_xml").HasColumnType("float").IsRequired();
            Property(x => x.ImptosXml).HasColumnName(@"imptos_xml").HasColumnType("float").IsRequired();
            Property(x => x.TotalXml).HasColumnName(@"total_xml").HasColumnType("float").IsRequired();
            Property(x => x.IdTipPas).HasColumnName(@"id_tip_pas").HasColumnType("int").IsRequired();
            Property(x => x.CValXml).HasColumnName(@"c_val_xml").HasColumnType("tinyint").IsRequired();
            Property(x => x.FecValXml).HasColumnName(@"fec_val_xml").HasColumnType("datetime").IsRequired();
            Property(x => x.IdUsrVal).HasColumnName(@"id_usr_val").HasColumnType("int").IsRequired();
            Property(x => x.Uuid).HasColumnName(@"uuid").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(36);
            Property(x => x.StatusSat).HasColumnName(@"statusSAT").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.IdRcnIva).HasColumnName(@"id_rcn_iva").HasColumnType("int").IsRequired();
            Property(x => x.IdSesion).HasColumnName(@"id_sesion").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.CatDocto).WithMany(b => b.CxpDocs).HasForeignKey(c => c.IdTipDoc).WillCascadeOnDelete(false); // FK_cxp_doc_cat_doctos
            HasRequired(a => a.CatUsr).WithMany(b => b.CxpDocs).HasForeignKey(c => c.IdUsr).WillCascadeOnDelete(false); // FK_cxp_doc_cat_usr
        }
    }

}
// </auto-generated>
