// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_60_REFERENCIAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir60ReferenciaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir60Referencia>
    {
        public SIR_Sir60ReferenciaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir60ReferenciaConfiguration(string schema)
        {
            ToTable("SIR_60_REFERENCIAS", schema);
            HasKey(x => x.NIdReferencia60);

            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SReferencia).HasColumnName(@"sReferencia").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NIdExpediente59).HasColumnName(@"nIdExpediente59").HasColumnType("int").IsRequired();
            Property(x => x.DFechaApertura).HasColumnName(@"dFechaApertura").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsOptional();
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdRegTrans41).HasColumnName(@"nIdRegTrans41").HasColumnType("int").IsOptional();
            Property(x => x.NIdPuertoOrigen).HasColumnName(@"nIdPuertoOrigen").HasColumnType("int").IsOptional();
            Property(x => x.NPesoBruto).HasColumnName(@"nPesoBruto").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NIdTipoTrafico25).HasColumnName(@"nIdTipoTrafico25").HasColumnType("int").IsRequired();
            Property(x => x.SComentarioRef).HasColumnName(@"sComentarioRef").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsRequired();
            Property(x => x.NIdEjecutivo).HasColumnName(@"nIdEjecutivo").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuario).HasColumnName(@"nIdUsuario").HasColumnType("int").IsOptional();
            Property(x => x.NIdTipoRef).HasColumnName(@"nIdTipoRef").HasColumnType("int").IsOptional();
            Property(x => x.DFechaOperacion).HasColumnName(@"dFechaOperacion").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.SMercanciaDesc).HasColumnName(@"sMercanciaDesc").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.NSistema).HasColumnName(@"nSistema").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdAduSec06).HasColumnName(@"nIdAduSec06").HasColumnType("int").IsOptional();
            Property(x => x.NIdImex).HasColumnName(@"nIdImex").HasColumnType("int").IsOptional();
            Property(x => x.NIdClaveDocto28).HasColumnName(@"nIdClaveDocto28").HasColumnType("int").IsOptional();
            Property(x => x.BExcluirCtaGastos).HasColumnName(@"bExcluirCtaGastos").HasColumnType("bit").IsRequired();
            Property(x => x.NIdConsignataria).HasColumnName(@"nIdConsignataria").HasColumnType("int").IsOptional();
            Property(x => x.DFechaCierreAdmin).HasColumnName(@"dFechaCierreAdmin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaCierreOper).HasColumnName(@"dFechaCierreOper").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdMtraSelAle67).HasColumnName(@"nIdMtraSelAle67").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.SNumPedimento).HasColumnName(@"sNumPedimento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.SConsignadoA).HasColumnName(@"sConsignadoA").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(80);
            Property(x => x.NIdProgDesp134).HasColumnName(@"nIdProgDesp134").HasColumnType("int").IsOptional();
            Property(x => x.NTipoCarga).HasColumnName(@"nTipoCarga").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdTipoMerc80).HasColumnName(@"nIdTipoMerc80").HasColumnType("int").IsRequired();
            Property(x => x.NIdStatus73).HasColumnName(@"nIdStatus73").HasColumnType("int").IsRequired();
            Property(x => x.NIdPedimento149).HasColumnName(@"nIdPedimento149").HasColumnType("int").IsOptional();
            Property(x => x.NColor).HasColumnName(@"nColor").HasColumnType("int").IsOptional();
            Property(x => x.NIdRecti28).HasColumnName(@"nIdRecti28").HasColumnType("int").IsOptional();
            Property(x => x.NIdRefOriginal60).HasColumnName(@"nIdRefOriginal60").HasColumnType("int").IsOptional();
            Property(x => x.NIdRefHist193).HasColumnName(@"nIdRefHist193").HasColumnType("int").IsOptional();
            Property(x => x.NIdClienteFact).HasColumnName(@"nIdClienteFact").HasColumnType("int").IsRequired();
            Property(x => x.NIdPrDesBod204).HasColumnName(@"nIdPrDesBod204").HasColumnType("int").IsOptional();
            Property(x => x.NValorFactParGlobal).HasColumnName(@"nValorFactParGlobal").HasColumnType("decimal").IsOptional().HasPrecision(10,9);
            Property(x => x.NIdPaisFacPar01).HasColumnName(@"nIdPaisFacPar01").HasColumnType("int").IsOptional();
            Property(x => x.BEsConsolidado).HasColumnName(@"bEsConsolidado").HasColumnType("bit").IsRequired();
            Property(x => x.NSisOrigen).HasColumnName(@"nSisOrigen").HasColumnType("tinyint").IsRequired();
            Property(x => x.NStatusVig).HasColumnName(@"nStatusVig").HasColumnType("tinyint").IsRequired();
            Property(x => x.SMarcasNumeros).HasColumnName(@"sMarcasNumeros").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SObservaciones).HasColumnName(@"sObservaciones").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DCierreCga).HasColumnName(@"dCierreCGA").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdOriDes86).HasColumnName(@"nIdOriDes86").HasColumnType("int").IsOptional();
            Property(x => x.NIdRecti290).HasColumnName(@"nIdRecti290").HasColumnType("int").IsOptional();
            Property(x => x.NIdExtraccion293).HasColumnName(@"nIdExtraccion293").HasColumnType("int").IsOptional();
            Property(x => x.NIdLineaNaviera).HasColumnName(@"nIdLineaNaviera").HasColumnType("int").IsOptional();
            Property(x => x.DPresentacion).HasColumnName(@"dPresentacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DCierre).HasColumnName(@"dCierre").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DDocumentacion).HasColumnName(@"dDocumentacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SBooking).HasColumnName(@"sBooking").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SRefCorresponsal).HasColumnName(@"sRefCorresponsal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SPedCorresponsal).HasColumnName(@"sPedCorresponsal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.NIdClias304).HasColumnName(@"nIdClias304").HasColumnType("int").IsOptional();
            Property(x => x.DPagoCorresponsal).HasColumnName(@"dPagoCorresponsal").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdPuertoOrigen04).HasColumnName(@"nIdPuertoOrigen04").HasColumnType("int").IsOptional();
            Property(x => x.NIdPuertoDestino04).HasColumnName(@"nIdPuertoDestino04").HasColumnType("int").IsOptional();
            Property(x => x.DUltimoContenedor).HasColumnName(@"dUltimoContenedor").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NFinanciamiento).HasColumnName(@"nFinanciamiento").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.BCapturaManual).HasColumnName(@"bCapturaManual").HasColumnType("bit").IsRequired();
            Property(x => x.NIdImex07).HasColumnName(@"nIdImex07").HasColumnType("int").IsOptional();
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsOptional();
            Property(x => x.NIdEjecutivo02).HasColumnName(@"nIdEjecutivo02").HasColumnType("int").IsOptional();
            Property(x => x.NIdTipoRef32).HasColumnName(@"nIdTipoRef32").HasColumnType("int").IsOptional();
            Property(x => x.NIdClieFact07).HasColumnName(@"nIdClieFact07").HasColumnType("int").IsOptional();
            Property(x => x.NIdNaviera42).HasColumnName(@"nIdNaviera42").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsu01).HasColumnName(@"nIdUsu01").HasColumnType("int").IsOptional();
            Property(x => x.DStatus).HasColumnName(@"dStatus").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DConstancia).HasColumnName(@"dConstancia").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DDoctosOk).HasColumnName(@"dDoctosOK").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DEntregaPreBl).HasColumnName(@"dEntregaPreBL").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DPedDespachado).HasColumnName(@"dPedDespachado").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DCartaTerminal).HasColumnName(@"dCartaTerminal").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DMciaTrasladada).HasColumnName(@"dMciaTrasladada").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BSobredimension).HasColumnName(@"bSobredimension").HasColumnType("bit").IsOptional();
            Property(x => x.NPlanasUtilizadas).HasColumnName(@"nPlanasUtilizadas").HasColumnType("int").IsOptional();
            Property(x => x.BMercPeligrosa).HasColumnName(@"bMercPeligrosa").HasColumnType("bit").IsRequired();
            Property(x => x.NIdTransportista).HasColumnName(@"nIdTransportista").HasColumnType("int").IsOptional();
            Property(x => x.NIdTransportista42).HasColumnName(@"nIdTransportista42").HasColumnType("int").IsOptional();
            Property(x => x.BFletePrepagado).HasColumnName(@"bFletePrepagado").HasColumnType("bit").IsOptional();
            Property(x => x.BOtrosIncPrePagado).HasColumnName(@"bOtrosIncPrePagado").HasColumnType("bit").IsOptional();
            Property(x => x.NIdReferencia60Ext).HasColumnName(@"nIdReferencia60Ext").HasColumnType("int").IsOptional();
            Property(x => x.SPorcentajeHonorarios).HasColumnName(@"sPorcentajeHonorarios").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.NClaveTarifaHonorarios).HasColumnName(@"nClaveTarifaHonorarios").HasColumnType("int").IsOptional();
            Property(x => x.NBaseHonorarios).HasColumnName(@"nBaseHonorarios").HasColumnType("decimal").IsOptional().HasPrecision(11,2);
            Property(x => x.SMotivoEliminacion).HasColumnName(@"sMotivoEliminacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3000);
            Property(x => x.BEsRectificacionExterna).HasColumnName(@"bEsRectificacionExterna").HasColumnType("bit").IsOptional();
            Property(x => x.BStatusAds).HasColumnName(@"bStatusADS").HasColumnType("bit").IsOptional();
            Property(x => x.DEntrega).HasColumnName(@"dEntrega").HasColumnType("datetime").IsOptional();
            Property(x => x.DFechaEstimadaDespacho).HasColumnName(@"dFechaEstimadaDespacho").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaDespacho).HasColumnName(@"dFechaDespacho").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BStatusRelConfronta).HasColumnName(@"bStatusRelConfronta").HasColumnType("bit").IsOptional();
            Property(x => x.DFStatusRelConfronta).HasColumnName(@"dFStatusRelConfronta").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaVoBo).HasColumnName(@"dFechaVoBo").HasColumnType("datetime").IsOptional();
            Property(x => x.DEntregaDestinoFinal).HasColumnName(@"dEntregaDestinoFinal").HasColumnType("datetime").IsOptional();
            Property(x => x.BMaster).HasColumnName(@"bMaster").HasColumnType("bit").IsOptional();
            Property(x => x.NIdReferenciaMaster).HasColumnName(@"nIdReferenciaMaster").HasColumnType("int").IsOptional();
            Property(x => x.BConsolidada).HasColumnName(@"bConsolidada").HasColumnType("bit").IsOptional();
            Property(x => x.BCreaReferencia).HasColumnName(@"bCreaReferencia").HasColumnType("bit").IsOptional();
            Property(x => x.DFechaHoraRecoleccion).HasColumnName(@"dFechaHoraRecoleccion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioRecoleccion).HasColumnName(@"nIdUsuarioRecoleccion").HasColumnType("int").IsOptional();
            Property(x => x.DFechaNota).HasColumnName(@"dFechaNota").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioNota).HasColumnName(@"nIdUsuarioNota").HasColumnType("int").IsOptional();
            Property(x => x.DFechaClasificacion).HasColumnName(@"dFechaClasificacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioClasificacion).HasColumnName(@"nIdUsuarioClasificacion").HasColumnType("int").IsOptional();
            Property(x => x.DFechaProforma).HasColumnName(@"dFechaProforma").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioProforma).HasColumnName(@"nIdUsuarioProforma").HasColumnType("int").IsOptional();
            Property(x => x.DEntregaATransportista).HasColumnName(@"dEntregaATransportista").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioATransportista).HasColumnName(@"nIdUsuarioATransportista").HasColumnType("int").IsOptional();
            Property(x => x.DFechaPrealerta).HasColumnName(@"dFechaPrealerta").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioPrealerta).HasColumnName(@"nIdUsuarioPrealerta").HasColumnType("int").IsOptional();
            Property(x => x.DFechaSolicitudClasificacion).HasColumnName(@"dFechaSolicitudClasificacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuarioSolicitudClasificacion01).HasColumnName(@"nIdUsuarioSolicitudClasificacion01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioRecoleccion01).HasColumnName(@"nIdUsuarioRecoleccion01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioPrealerta01).HasColumnName(@"nIdUsuarioPrealerta01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioClasificacion01).HasColumnName(@"nIdUsuarioClasificacion01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioProforma01).HasColumnName(@"nIdUsuarioProforma01").HasColumnType("int").IsOptional();
            Property(x => x.DEnvioContabilidad).HasColumnName(@"dEnvioContabilidad").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DEntregaCartaTraslado).HasColumnName(@"dEntregaCartaTraslado").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SMotivoCierreOperativo).HasColumnName(@"sMotivoCierreOperativo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3000);
            Property(x => x.BCierreOperativo).HasColumnName(@"bCierreOperativo").HasColumnType("bit").IsOptional();
            Property(x => x.SNumOperacion).HasColumnName(@"sNumOperacion").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NIdUsuarioNota01).HasColumnName(@"nIdUsuarioNota01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioATransportista01).HasColumnName(@"nIdUsuarioATransportista01").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioSolicitudClasificacion).HasColumnName(@"nIdUsuarioSolicitudClasificacion").HasColumnType("int").IsOptional();
            Property(x => x.NIdRefComp307).HasColumnName(@"nIdRefComp307").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEmbarque).HasColumnName(@"dFechaEmbarque").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SObservacionMonitorEjecutivo).HasColumnName(@"sObservacionMonitorEjecutivo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.BVisualizarEnMonitorEjecutivo).HasColumnName(@"bVisualizarEnMonitorEjecutivo").HasColumnType("bit").IsOptional();
            Property(x => x.NIdSolicitudSed673).HasColumnName(@"nIdSolicitudSED673").HasColumnType("int").IsOptional();
            Property(x => x.SFreightBill).HasColumnName(@"sFreightBill").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SObservacionesDeIncumplido).HasColumnName(@"sObservacionesDeIncumplido").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DFechaEntregaGuia).HasColumnName(@"dFechaEntregaGuia").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaCorteSolicitado).HasColumnName(@"dFechaCorteSolicitado").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaEntregaMciaAduana).HasColumnName(@"dFechaEntregaMciaAduana").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaEntregaDoctosCorte).HasColumnName(@"dFechaEntregaDoctosCorte").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SObservacionesPortada).HasColumnName(@"sObservacionesPortada").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NCoveCc).HasColumnName(@"nCoveCC").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NValidacionCc).HasColumnName(@"nValidacionCC").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NComplemSinValCove).HasColumnName(@"nComplemSinValCove").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.DFechaEtaExpo).HasColumnName(@"dFechaETAExpo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdRefCopiaOrg60).HasColumnName(@"nIdRefCopiaOrg60").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEstimadaPago).HasColumnName(@"dFechaEstimadaPago").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BDesconsolidacion).HasColumnName(@"bDesconsolidacion").HasColumnType("bit").IsOptional();
            Property(x => x.BConDemora).HasColumnName(@"bConDemora").HasColumnType("bit").IsOptional();
            Property(x => x.BPrevioEnDespacho).HasColumnName(@"bPrevioEnDespacho").HasColumnType("bit").IsOptional();
            Property(x => x.NDiasObjCalidadDespacho).HasColumnName(@"nDiasObjCalidadDespacho").HasColumnType("int").IsOptional();
            Property(x => x.NDiasComodinDespacho).HasColumnName(@"nDiasComodinDespacho").HasColumnType("int").IsOptional();
            Property(x => x.BObjCalidadCumplidoDespacho).HasColumnName(@"bObjCalidadCumplidoDespacho").HasColumnType("bit").IsOptional();
            Property(x => x.NDiasObjCalidadCga).HasColumnName(@"nDiasObjCalidadCGA").HasColumnType("int").IsOptional();
            Property(x => x.NDiasComodinCga).HasColumnName(@"nDiasComodinCGA").HasColumnType("int").IsOptional();
            Property(x => x.BObjCalidadCumplidoCga).HasColumnName(@"bObjCalidadCumplidoCGA").HasColumnType("bit").IsOptional();
            Property(x => x.NIdEstatusRef804).HasColumnName(@"nIdEstatusRef804").HasColumnType("int").IsOptional();
            Property(x => x.BNotifiEnviadaDom).HasColumnName(@"bNotifiEnviadaDom").HasColumnType("bit").IsOptional();
            Property(x => x.NIdTarifaMercancia112).HasColumnName(@"nIdTarifaMercancia112").HasColumnType("int").IsOptional();
            Property(x => x.BDeCargaM3).HasColumnName(@"bDeCargaM3").HasColumnType("bit").IsOptional();
            Property(x => x.BRequierePrevio).HasColumnName(@"bRequierePrevio").HasColumnType("bit").IsOptional();
            Property(x => x.BEsHistorico).HasColumnName(@"bEsHistorico").HasColumnType("bit").IsOptional();
            Property(x => x.BProcesandoExpediente).HasColumnName(@"bProcesandoExpediente").HasColumnType("bit").IsOptional();
            Property(x => x.DFechaProcesa).HasColumnName(@"dFechaProcesa").HasColumnType("datetime").IsOptional();
            Property(x => x.NSaldo).HasColumnName(@"nSaldo").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NAnticipo).HasColumnName(@"nAnticipo").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NIva).HasColumnName(@"nIva").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NComplementarios).HasColumnName(@"nComplementarios").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NHonorarios).HasColumnName(@"nHonorarios").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NPagoshechos).HasColumnName(@"nPagoshechos").HasColumnType("decimal").IsOptional().HasPrecision(12,2);

            // Foreign keys
            HasOptional(a => a.Admin_Admina01Usuario_NIdUsu01).WithMany(b => b.SIR_Sir60Referencia_NIdUsu01).HasForeignKey(c => c.NIdUsu01).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINA_01_USUARIOS
            HasOptional(a => a.Admin_Admina01Usuario_NIdUsuarioATransportista01).WithMany(b => b.SIR_Sir60Referencia_NIdUsuarioATransportista01).HasForeignKey(c => c.NIdUsuarioATransportista01).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINA_01_USUARIOS_nIdUsuarioATransportista01
            HasOptional(a => a.Admin_Admina01Usuario_NIdUsuarioNota01).WithMany(b => b.SIR_Sir60Referencia_NIdUsuarioNota01).HasForeignKey(c => c.NIdUsuarioNota01).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINA_01_USUARIOS_nIdUsuarioNota01
            HasOptional(a => a.Admin_Admina02Personal).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdEjecutivo02).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINA_02_PERSONAL
            HasOptional(a => a.Admin_Adminc07Cliente_NIdClie07).WithMany(b => b.SIR_Sir60Referencia_NIdClie07).HasForeignKey(c => c.NIdClie07).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINC_07_CLIENTES_nIdClie07
            HasOptional(a => a.Admin_Adminc07Cliente_NIdClieFact07).WithMany(b => b.SIR_Sir60Referencia_NIdClieFact07).HasForeignKey(c => c.NIdClieFact07).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINC_07_CLIENTES_nIdClieFact07
            HasOptional(a => a.Admin_Adminc07Cliente_NIdImex07).WithMany(b => b.SIR_Sir60Referencia_NIdImex07).HasForeignKey(c => c.NIdImex07).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINC_07_CLIENTES_nIdImex07
            HasOptional(a => a.Admin_Adminc32TiposReferencia).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdTipoRef32).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINC_32_TIPOS_REFERENCIAS
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdNaviera42).WithMany(b => b.SIR_Sir60Referencia_NIdNaviera42).HasForeignKey(c => c.NIdNaviera42).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINC_42_PROVEEDORES
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdTransportista42).WithMany(b => b.SIR_Sir60Referencia_NIdTransportista42).HasForeignKey(c => c.NIdTransportista42).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ADMINC_42_PROVEEDORES_Transportista
            HasOptional(a => a.CatCliente_NIdCliente).WithMany(b => b.SIR_Sir60Referencia_NIdCliente).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_clientes
            HasOptional(a => a.CatCliente_NIdImex).WithMany(b => b.SIR_Sir60Referencia_NIdImex).HasForeignKey(c => c.NIdImex).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_clientes1
            HasOptional(a => a.CatEmp).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdEjecutivo).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_emp
            HasOptional(a => a.CatProv_NIdConsignataria).WithMany(b => b.SIR_Sir60Referencia_NIdConsignataria).HasForeignKey(c => c.NIdConsignataria).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_prov
            HasOptional(a => a.CatProv_NIdLineaNaviera).WithMany(b => b.SIR_Sir60Referencia_NIdLineaNaviera).HasForeignKey(c => c.NIdLineaNaviera).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_prov_naviera
            HasOptional(a => a.CatProv_NIdTransportista).WithMany(b => b.SIR_Sir60Referencia_NIdTransportista).HasForeignKey(c => c.NIdTransportista).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_prov_Transportista
            HasOptional(a => a.CatUsr).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdUsuario).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_usr
            HasOptional(a => a.SIR_Sir01Pais).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdPaisFacPar01).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_01_PAISES
            HasOptional(a => a.SIR_Sir04Puerto_NIdPuertoDestino04).WithMany(b => b.SIR_Sir60Referencia_NIdPuertoDestino04).HasForeignKey(c => c.NIdPuertoDestino04).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_04_PUERTOS_DESTINO
            HasOptional(a => a.SIR_Sir04Puerto_NIdPuertoOrigen).WithMany(b => b.SIR_Sir60Referencia_NIdPuertoOrigen).HasForeignKey(c => c.NIdPuertoOrigen).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_04_PUERTOS
            HasOptional(a => a.SIR_Sir04Puerto_NIdPuertoOrigen04).WithMany(b => b.SIR_Sir60Referencia_NIdPuertoOrigen04).HasForeignKey(c => c.NIdPuertoOrigen04).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_04_PUERTOS_ORIGEN
            HasOptional(a => a.SIR_Sir06AduanaSec).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdAduSec06).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_06_ADUANA_SEC
            HasOptional(a => a.SIR_Sir134ProgramacionDespacho).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdProgDesp134).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_134_PROGRAMACION_DESPACHOS
            HasOptional(a => a.SIR_Sir149Pedimento).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdPedimento149).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_149_PEDIMENTO
            HasOptional(a => a.SIR_Sir193ReferenciasHistorico).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdRefHist193).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_193_REFERENCIAS_HISTORICO
            HasOptional(a => a.SIR_Sir204ProgDespachosBodega).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdPrDesBod204).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_204_PROG_DESPACHOS_BODEGA
            HasOptional(a => a.SIR_Sir28ClavesDocto_NIdClaveDocto28).WithMany(b => b.SIR_Sir60Referencia_NIdClaveDocto28).HasForeignKey(c => c.NIdClaveDocto28).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_28_CLAVES_DOCTOS
            HasOptional(a => a.SIR_Sir28ClavesDocto_NIdRecti28).WithMany(b => b.SIR_Sir60Referencia_NIdRecti28).HasForeignKey(c => c.NIdRecti28).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_28_CLAVES_DOCTOS_RECTI
            HasOptional(a => a.SIR_Sir290RectificPedimento).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdRecti290).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_290_RECTIFIC_PEDIMENTO
            HasOptional(a => a.SIR_Sir293ExtraccionPedimento_NIdExtraccion293).WithMany(b => b.SIR_Sir60Referencia_NIdExtraccion293).HasForeignKey(c => c.NIdExtraccion293).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_293_EXTRACCION_PEDIMENTOS
            HasOptional(a => a.SIR_Sir304Corresponsalia).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdClias304).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_304_CORRESPONSALIAS
            HasOptional(a => a.SIR_Sir307RefComplementaria).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdRefComp307).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_307_REF_COMPLEMENTARIAS_nIdRefComp307
            HasOptional(a => a.SIR_Sir41RegTransporte).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdRegTrans41).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_41_REG_TRANSPORTES
            HasOptional(a => a.SIR_Sir60Referencia1).WithMany(b => b.SIR_Sir60Referencia2).HasForeignKey(c => c.NIdReferenciaMaster).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_60_REFERENCIAS_nIdReferenciaMaster
            HasOptional(a => a.SIR_Sir673SolicitudSed).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdSolicitudSed673).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_673_SOLICITUD_SED
            HasOptional(a => a.SIR_Sir67MtraSelecAleatoria).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdMtraSelAle67).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_67_MTRA_SELEC_ALEATORIA
            HasOptional(a => a.SIR_Sir804EstatusReferencia).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdEstatusRef804).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_ESTATUS_MERCANCIA
            HasOptional(a => a.SIR_Sir86OrigenesDestino).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdOriDes86).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_86_ORIGENES_DESTINOS
            HasOptional(a => a.SisTipRef).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdTipoRef).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_sis_tip_ref
            HasRequired(a => a.CatCliente_NIdClienteFact).WithMany(b => b.SIR_Sir60Referencia_NIdClienteFact).HasForeignKey(c => c.NIdClienteFact).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_cat_clientes_fact
            HasRequired(a => a.SIR_Sir25TiposTrafico).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdTipoTrafico25).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_25_TIPOS_TRAFICO
            HasRequired(a => a.SIR_Sir59Expediente).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdExpediente59).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_59_EXPEDIENTES
            HasRequired(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_71_SUCURSAL_PATENTE_ADUANA
            HasRequired(a => a.SIR_Sir73StatusReferencia).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdStatus73).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_73_STATUS_REFERENCIAS
            HasRequired(a => a.SIR_Sir80TiposMercancia).WithMany(b => b.SIR_Sir60Referencia).HasForeignKey(c => c.NIdTipoMerc80).WillCascadeOnDelete(false); // FK_SIR_60_REFERENCIAS_SIR_80_TIPOS_MERCANCIA
            HasMany(t => t.SIR_Sir186OrdenesRemisione).WithMany(t => t.SIR_Sir60Referencia).Map(m =>
            {
                m.ToTable("SIR_187_REFERENCIAS_REMISIONES", "SIR");
                m.MapLeftKey("nIdReferencia60");
                m.MapRightKey("nIdRemision186");
            });
        }
    }

}
// </auto-generated>
