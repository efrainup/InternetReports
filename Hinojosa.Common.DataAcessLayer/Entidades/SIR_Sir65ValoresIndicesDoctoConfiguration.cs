// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_65_VALORES_INDICES_DOCTOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir65ValoresIndicesDoctoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir65ValoresIndicesDocto>
    {
        public SIR_Sir65ValoresIndicesDoctoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir65ValoresIndicesDoctoConfiguration(string schema)
        {
            ToTable("SIR_65_VALORES_INDICES_DOCTOS", schema);
            HasKey(x => x.NIdValorIndice65);

            Property(x => x.NIdValorIndice65).HasColumnName(@"nIdValorIndice65").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdIndiceDocto64).HasColumnName(@"nIdIndiceDocto64").HasColumnType("int").IsRequired();
            Property(x => x.SValor).HasColumnName(@"sValor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40);
            Property(x => x.NIdDocumento63).HasColumnName(@"nIdDocumento63").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.SIR_Sir63Documento).WithMany(b => b.SIR_Sir65ValoresIndicesDocto).HasForeignKey(c => c.NIdDocumento63); // FK_SIR_65_VALORES_INDICES_DOCTOS_SIR_63_DOCUMENTOS
            HasRequired(a => a.SIR_Sir64IndicesDocumento).WithMany(b => b.SIR_Sir65ValoresIndicesDocto).HasForeignKey(c => c.NIdIndiceDocto64).WillCascadeOnDelete(false); // FK_SIR_65_VALORES_INDICES_DOCTOS_SIR_64_INDICES_DOCUMENTOS
        }
    }

}
// </auto-generated>
