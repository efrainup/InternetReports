// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_11_FACTURAS_PARTIDAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir11FacturasPartidaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir11FacturasPartida>
    {
        public SIR_Sir11FacturasPartidaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir11FacturasPartidaConfiguration(string schema)
        {
            ToTable("SIR_11_FACTURAS_PARTIDAS", schema);
            HasKey(x => x.NIdFacturaPartida11);

            Property(x => x.NIdFacturaPartida11).HasColumnName(@"nIdFacturaPartida11").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdFactura52).HasColumnName(@"nIdFactura52").HasColumnType("int").IsRequired();
            Property(x => x.NNumero).HasColumnName(@"nNumero").HasColumnType("int").IsRequired();
            Property(x => x.NIdParte99).HasColumnName(@"nIdParte99").HasColumnType("int").IsOptional();
            Property(x => x.SFraccion).HasColumnName(@"sFraccion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.SDescripcionAa).HasColumnName(@"sDescripcionAA").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.NIdUmc10).HasColumnName(@"nIdUMC10").HasColumnType("int").IsOptional();
            Property(x => x.NIdUmt10).HasColumnName(@"nIdUMT10").HasColumnType("int").IsOptional();
            Property(x => x.NIdPaisOrigen01).HasColumnName(@"nIdPaisOrigen01").HasColumnType("int").IsRequired();
            Property(x => x.NIdPaisVendedor01).HasColumnName(@"nIdPaisVendedor01").HasColumnType("int").IsRequired();
            Property(x => x.NEstaVinculado).HasColumnName(@"nEstaVinculado").HasColumnType("tinyint").IsRequired();
            Property(x => x.NPrecioUnitario).HasColumnName(@"nPrecioUnitario").HasColumnType("decimal").IsRequired().HasPrecision(15,5);
            Property(x => x.NCantidadTarifa).HasColumnName(@"nCantidadTarifa").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.NCantidadFactura).HasColumnName(@"nCantidadFactura").HasColumnType("decimal").IsRequired().HasPrecision(15,3);
            Property(x => x.NValorFactura).HasColumnName(@"nValorFactura").HasColumnType("decimal").IsRequired().HasPrecision(15,3);
            Property(x => x.NIdMetodoVal101).HasColumnName(@"nIdMetodoVal101").HasColumnType("int").IsRequired();
            Property(x => x.BAplicaTl).HasColumnName(@"bAplicaTL").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaSe).HasColumnName(@"bAplicaSE").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaSagarpa).HasColumnName(@"bAplicaSAGARPA").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaSs).HasColumnName(@"bAplicaSS").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaSedena).HasColumnName(@"bAplicaSEDENA").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaNoms).HasColumnName(@"bAplicaNOMS").HasColumnType("bit").IsRequired();
            Property(x => x.BAgrupar).HasColumnName(@"bAgrupar").HasColumnType("bit").IsRequired();
            Property(x => x.NIdFacPartAgrupada100).HasColumnName(@"nIdFacPartAgrupada100").HasColumnType("int").IsOptional();
            Property(x => x.NPeso).HasColumnName(@"nPeso").HasColumnType("decimal").IsOptional().HasPrecision(17,6);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NValorAduana).HasColumnName(@"nValorAduana").HasColumnType("decimal").IsRequired().HasPrecision(12,0);
            Property(x => x.NValorDolares).HasColumnName(@"nValorDolares").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NDta).HasColumnName(@"nDTA").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NImporteGarantia).HasColumnName(@"nImporteGarantia").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NTipoArancel).HasColumnName(@"nTipoArancel").HasColumnType("tinyint").IsRequired();
            Property(x => x.NTasaArancel).HasColumnName(@"nTasaArancel").HasColumnType("decimal").IsOptional().HasPrecision(15,10);
            Property(x => x.NIdComplFracc140).HasColumnName(@"nIdComplFracc140").HasColumnType("int").IsOptional();
            Property(x => x.NIdCtaGarantia141).HasColumnName(@"nIdCtaGarantia141").HasColumnType("int").IsOptional();
            Property(x => x.NPesoAmx).HasColumnName(@"nPesoAMX").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NTipoSubdivision).HasColumnName(@"nTipoSubdivision").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdPartidaPadre11).HasColumnName(@"nIdPartidaPadre11").HasColumnType("int").IsOptional();
            Property(x => x.BSubdividida).HasColumnName(@"bSubdividida").HasColumnType("bit").IsRequired();
            Property(x => x.SNumParteProv).HasColumnName(@"sNumParteProv").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NCPreferencial).HasColumnName(@"nCPreferencial").HasColumnType("decimal").IsOptional().HasPrecision(5,2);
            Property(x => x.NMontoDesgravacion).HasColumnName(@"nMontoDesgravacion").HasColumnType("decimal").IsOptional().HasPrecision(6,3);
            Property(x => x.SNumParteCli).HasColumnName(@"sNumParteCli").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SUm).HasColumnName(@"sUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.SEs).HasColumnName(@"sES").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.BAplicaAcotaIva).HasColumnName(@"bAplicaAcotaIVA").HasColumnType("bit").IsRequired();
            Property(x => x.NValorMinimo).HasColumnName(@"nValorMinimo").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.SObservacion).HasColumnName(@"sObservacion").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NPctAdvRexp).HasColumnName(@"nPctADVRexp").HasColumnType("int").IsOptional();
            Property(x => x.NPctIvaRexp).HasColumnName(@"nPctIVARexp").HasColumnType("int").IsOptional();
            Property(x => x.SMarcaProducto).HasColumnName(@"sMarcaProducto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SModeloProducto).HasColumnName(@"sModeloProducto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BAplicaIsan).HasColumnName(@"bAplicaISAN").HasColumnType("bit").IsRequired();
            Property(x => x.SFraccionAme).HasColumnName(@"sFraccionAme").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SDescripcionAme).HasColumnName(@"sDescripcionAme").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NTipoFraccionAme).HasColumnName(@"nTipoFraccionAme").HasColumnType("tinyint").IsOptional();
            Property(x => x.NValAgregado).HasColumnName(@"nValAgregado").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NIdUmcove410).HasColumnName(@"nIdUMCOVE410").HasColumnType("int").IsOptional();
            Property(x => x.NCantidadCove).HasColumnName(@"nCantidadCove").HasColumnType("decimal").IsOptional().HasPrecision(15,3);
            Property(x => x.NPrecioUnitarioCove).HasColumnName(@"nPrecioUnitarioCove").HasColumnType("decimal").IsOptional().HasPrecision(15,6);
            Property(x => x.SDescripcionCove).HasColumnName(@"sDescripcionCove").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.NIdPartidaModeloPadre11).HasColumnName(@"nIdPartidaModeloPadre11").HasColumnType("int").IsOptional();
            Property(x => x.SCaja).HasColumnName(@"sCaja").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SNumeroFacturaExcel).HasColumnName(@"sNumeroFacturaExcel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NIdPartidaAvisoArribo577).HasColumnName(@"nIdPartidaAvisoArribo577").HasColumnType("int").IsOptional();
            Property(x => x.NConsecutivoOriginal).HasColumnName(@"nConsecutivoOriginal").HasColumnType("int").IsOptional();
            Property(x => x.SSubdivision).HasColumnName(@"sSubdivision").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.DValorDolaresCove).HasColumnName(@"dValorDolaresCOVE").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.BNotificacionPrecioUnitario).HasColumnName(@"bNotificacionPrecioUnitario").HasColumnType("bit").IsOptional();
            Property(x => x.BNotificacionVulnerable).HasColumnName(@"bNotificacionVulnerable").HasColumnType("bit").IsOptional();
            Property(x => x.NCantidadUmf).HasColumnName(@"nCantidadUMF").HasColumnType("decimal").IsOptional().HasPrecision(15,3);
            Property(x => x.NIdUMedFactura785).HasColumnName(@"nIdUMedFactura785").HasColumnType("int").IsOptional();
            Property(x => x.NValorFactOriginal).HasColumnName(@"nValorFactOriginal").HasColumnType("decimal").IsOptional().HasPrecision(15,3);
            Property(x => x.NPrecioUnitOriginal).HasColumnName(@"nPrecioUnitOriginal").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NValorMercanciaCove).HasColumnName(@"nValorMercanciaCOVE").HasColumnType("decimal").IsOptional().HasPrecision(16,6);
            Property(x => x.NNivelSubdivision).HasColumnName(@"nNivelSubdivision").HasColumnType("tinyint").IsOptional();
            Property(x => x.NIdPartidaSubOrig11).HasColumnName(@"nIdPartidaSubOrig11").HasColumnType("int").IsOptional();
            Property(x => x.NSaldoCantidad).HasColumnName(@"nSaldoCantidad").HasColumnType("decimal").IsOptional().HasPrecision(15,3);
            Property(x => x.SPedidoCustRef).HasColumnName(@"sPedidoCustRef").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SCaseNumber).HasColumnName(@"sCaseNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SCaseType).HasColumnName(@"sCaseType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NCasePesoKg).HasColumnName(@"nCasePesoKg").HasColumnType("decimal").IsOptional().HasPrecision(17,6);
            Property(x => x.BEsSubdivisionConsolidada).HasColumnName(@"bEsSubdivisionConsolidada").HasColumnType("bit").IsOptional();
            Property(x => x.SClaveDestino).HasColumnName(@"sClaveDestino").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NIdCcDestinos806).HasColumnName(@"nIdCCDestinos806").HasColumnType("int").IsOptional();
            Property(x => x.NIdFacturaPartida11Copia).HasColumnName(@"nIdFacturaPartida11Copia").HasColumnType("int").IsOptional();
            Property(x => x.BResHorario).HasColumnName(@"bResHorario").HasColumnType("bit").IsOptional();
            Property(x => x.NPrecioEstimado).HasColumnName(@"nPrecioEstimado").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NPrecioUnitarioUmf).HasColumnName(@"nPrecioUnitarioUMF").HasColumnType("decimal").IsOptional().HasPrecision(25,8);
            Property(x => x.STracking).HasColumnName(@"sTracking").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.NIdEntrada156).HasColumnName(@"nIdEntrada156").HasColumnType("int").IsOptional();
            Property(x => x.SCodigoProducto).HasColumnName(@"sCodigoProducto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BEsAnexo27).HasColumnName(@"bEsAnexo27").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasOptional(a => a.SIR_Sir100FacPartAgrupada).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdFacPartAgrupada100).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_100_FAC_PART_AGRUPADAS
            HasOptional(a => a.SIR_Sir10UnidadesMedida_NIdUmc10).WithMany(b => b.SIR_Sir11FacturasPartida_NIdUmc10).HasForeignKey(c => c.NIdUmc10).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_10_UNIDADES_MEDIDA
            HasOptional(a => a.SIR_Sir10UnidadesMedida_NIdUmt10).WithMany(b => b.SIR_Sir11FacturasPartida_NIdUmt10).HasForeignKey(c => c.NIdUmt10).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_10_UNIDADES_MEDIDA1
            HasOptional(a => a.SIR_Sir11FacturasPartida1).WithMany(b => b.SIR_Sir11FacturasPartida2).HasForeignKey(c => c.NIdPartidaModeloPadre11).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_11_FACTURAS_PARTIDAS_nIdPartidaModeloPadre
            HasOptional(a => a.SIR_Sir11FacturasPartida3).WithMany(b => b.SIR_Sir11FacturasPartida4).HasForeignKey(c => c.NIdPartidaPadre11).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_11_FACTURAS_PARTIDAS
            HasOptional(a => a.SIR_Sir11FacturasPartida5).WithMany(b => b.SIR_Sir11FacturasPartida6).HasForeignKey(c => c.NIdPartidaSubOrig11).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_11_FACTURAS_PARTIDAS_SUBDIVISION
            HasOptional(a => a.SIR_Sir140PartidaComplemFracc).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdComplFracc140).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_140_PARTIDA_COMPLEM_FRACC
            HasOptional(a => a.SIR_Sir141PartidaCtaGarantia).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdCtaGarantia141).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_141_PARTIDA_CTA_GARANTIA
            HasOptional(a => a.SIR_Sir156EntradasBodega).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdEntrada156).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_156_ENTRADAS_BODEGAS
            HasOptional(a => a.SIR_Sir410UnidadesMedidaCove).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdUmcove410).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_410_UNIDADES_MEDIDA_COVE
            HasOptional(a => a.SIR_Sir577PartidasAvisoArribo).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdPartidaAvisoArribo577).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_577_PARTIDAS_AVISO_ARRIBO
            HasOptional(a => a.SIR_Sir785UnidadesMedidaFactura).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdUMedFactura785).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_785_UNIDAD_MEDIDA_FACTURA
            HasOptional(a => a.SIR_Sir99Parte).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdParte99).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_99_PARTES
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_cat_usr_ed
            HasRequired(a => a.SIR_Sir01Pais_NIdPaisOrigen01).WithMany(b => b.SIR_Sir11FacturasPartida_NIdPaisOrigen01).HasForeignKey(c => c.NIdPaisOrigen01).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_01_PAISES
            HasRequired(a => a.SIR_Sir01Pais_NIdPaisVendedor01).WithMany(b => b.SIR_Sir11FacturasPartida_NIdPaisVendedor01).HasForeignKey(c => c.NIdPaisVendedor01).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_01_PAISES1
            HasRequired(a => a.SIR_Sir101MetodosValoracion).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdMetodoVal101).WillCascadeOnDelete(false); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_101_METODOS_VALORACION
            HasRequired(a => a.SIR_Sir52Factura).WithMany(b => b.SIR_Sir11FacturasPartida).HasForeignKey(c => c.NIdFactura52); // FK_SIR_11_FACTURAS_PARTIDAS_SIR_52_FACTURAS
        }
    }

}
// </auto-generated>
