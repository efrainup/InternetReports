// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // num_ped_adu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NumPedAduConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NumPedAdu>
    {
        public NumPedAduConfiguration()
            : this("dbo")
        {
        }

        public NumPedAduConfiguration(string schema)
        {
            ToTable("num_ped_adu", schema);
            HasKey(x => x.IdNumPedAdu);

            Property(x => x.IdNumPedAdu).HasColumnName(@"id_num_ped_adu").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CAduana).HasColumnName(@"c_aduana").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Patente).HasColumnName(@"patente").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Ejercicio).HasColumnName(@"ejercicio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Cantidad).HasColumnName(@"cantidad").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.FecIniVig).HasColumnName(@"fec_ini_vig").HasColumnType("datetime").IsOptional();
            Property(x => x.FecFinVig).HasColumnName(@"fec_fin_vig").HasColumnType("datetime").IsOptional();
            Property(x => x.Status).HasColumnName(@"status").HasColumnType("tinyint").IsOptional();
        }
    }

}
// </auto-generated>
