// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_346_SED_DOCUMENTS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir346SedDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir346SedDocument>
    {
        public SIR_Sir346SedDocumentConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir346SedDocumentConfiguration(string schema)
        {
            ToTable("SIR_346_SED_DOCUMENTS", schema);
            HasKey(x => x.NIdShipper346);

            Property(x => x.NIdShipper346).HasColumnName(@"nIdShipper346").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsOptional();
            Property(x => x.NIdEntrada156).HasColumnName(@"nIdEntrada156").HasColumnType("int").IsOptional();
            Property(x => x.SShipmentReference).HasColumnName(@"sShipmentReference").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(17);
            Property(x => x.SItn).HasColumnName(@"sITN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.STransportation).HasColumnName(@"sTransportation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NIdStateOrigin324).HasColumnName(@"nIdStateOrigin324").HasColumnType("int").IsOptional();
            Property(x => x.SZone).HasColumnName(@"sZone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.NIdPortExportAmerican325).HasColumnName(@"nIdPortExportAmerican325").HasColumnType("int").IsOptional();
            Property(x => x.NIdPortExportForeign326).HasColumnName(@"nIdPortExportForeign326").HasColumnType("int").IsOptional();
            Property(x => x.NIdCountriesDestination322).HasColumnName(@"nIdCountriesDestination322").HasColumnType("int").IsOptional();
            Property(x => x.NIdPortUnladingAmerican325).HasColumnName(@"nIdPortUnladingAmerican325").HasColumnType("int").IsOptional();
            Property(x => x.NIdPortUnladingForeign326).HasColumnName(@"nIdPortUnladingForeign326").HasColumnType("int").IsOptional();
            Property(x => x.DDeparture).HasColumnName(@"dDeparture").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NIdModeTransport46).HasColumnName(@"nIdModeTransport46").HasColumnType("int").IsOptional();
            Property(x => x.NIdAirCarrierIataTwo327).HasColumnName(@"nIdAirCarrierIATATwo327").HasColumnType("int").IsOptional();
            Property(x => x.NIdAirCarrierIataThree341).HasColumnName(@"nIdAirCarrierIATAThree_341").HasColumnType("int").IsOptional();
            Property(x => x.NIdStandarCarrierAlpha328).HasColumnName(@"nIdStandarCarrierAlpha328").HasColumnType("int").IsOptional();
            Property(x => x.SConveyanceName).HasColumnName(@"sConveyanceName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(23);
            Property(x => x.NIdVesselFlag322).HasColumnName(@"nIdVesselFlag322").HasColumnType("int").IsOptional();
            Property(x => x.BRelatedCompanies).HasColumnName(@"bRelatedCompanies").HasColumnType("bit").IsRequired();
            Property(x => x.BHazardousCargo).HasColumnName(@"bHazardousCargo").HasColumnType("bit").IsRequired();
            Property(x => x.BFlagTransaction).HasColumnName(@"bFlagTransaction").HasColumnType("bit").IsRequired();
            Property(x => x.SEntryNumber).HasColumnName(@"sEntryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.NIdInbondTypes336).HasColumnName(@"nIdInbondTypes336").HasColumnType("int").IsOptional();
            Property(x => x.SEmail).HasColumnName(@"sEmail").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NIdClienteBodegaUsppi).HasColumnName(@"nIdClienteBodegaUSPPI").HasColumnType("int").IsRequired();
            Property(x => x.SNameUsppi).HasColumnName(@"sNameUSPPI").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SIdNumberUsppi).HasColumnName(@"sIdNumberUSPPI").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(11);
            Property(x => x.NIdTypeUsppi).HasColumnName(@"nIdTypeUSPPI").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1);
            Property(x => x.SAddressLine1Usppi).HasColumnName(@"sAddressLine1USPPI").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SAddressLine2Usppi).HasColumnName(@"sAddressLine2USPPI").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SCityUsppi).HasColumnName(@"sCityUSPPI").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.NIdStateAmeUsppi324).HasColumnName(@"nIdStateAmeUSPPI324").HasColumnType("int").IsOptional();
            Property(x => x.SZipCode).HasColumnName(@"sZipCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.SContactFirstNameUsppi).HasColumnName(@"sContactFirstNameUSPPI").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.SContactInitialUsppi).HasColumnName(@"sContactInitialUSPPI").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.SContactLastNameUsppi).HasColumnName(@"sContactLastNameUSPPI").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.SContactPhoneUsppi).HasColumnName(@"sContactPhoneUSPPI").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.NIdImexUltCons).HasColumnName(@"nIdImexUltCons").HasColumnType("int").IsOptional();
            Property(x => x.SNameUltCons).HasColumnName(@"sNameUltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SContactNameUltCons).HasColumnName(@"sContactNameUltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SContactPhoneUltCons).HasColumnName(@"sContactPhoneUltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.SAddressLine1UltCons).HasColumnName(@"sAddressLine1UltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SAddressLine2UltCons).HasColumnName(@"sAddressLine2UltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SCityUltCons).HasColumnName(@"sCityUltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.BSoldEnRute).HasColumnName(@"bSoldEnRute").HasColumnType("bit").IsRequired();
            Property(x => x.NIdStateAmeUltCons324).HasColumnName(@"nIdStateAmeUltCons324").HasColumnType("int").IsOptional();
            Property(x => x.NIdStateMexUltCons323).HasColumnName(@"nIdStateMexUltCons323").HasColumnType("int").IsOptional();
            Property(x => x.NIdCountryUltCons322).HasColumnName(@"nIdCountryUltCons322").HasColumnType("int").IsOptional();
            Property(x => x.NIdZipCodAmeUltCons329).HasColumnName(@"nIdZipCodAmeUltCons329").HasColumnType("int").IsOptional();
            Property(x => x.SPcUltCons).HasColumnName(@"sPCUltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.SNameIntCons).HasColumnName(@"sNameIntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SContactNameIntCons).HasColumnName(@"sContactNameIntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SContactPhoneIntCons).HasColumnName(@"sContactPhoneIntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.SAddressLine1IntCons).HasColumnName(@"sAddressLine1IntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SAddressLine2IntCons).HasColumnName(@"sAddressLine2IntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SCityIntCons).HasColumnName(@"sCityIntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.NIdStateAmeIntCons324).HasColumnName(@"nIdStateAmeIntCons324").HasColumnType("int").IsOptional();
            Property(x => x.NIdStateMexIntCons323).HasColumnName(@"nIdStateMexIntCons323").HasColumnType("int").IsOptional();
            Property(x => x.NIdCountryIntCons322).HasColumnName(@"nIdCountryIntCons322").HasColumnType("int").IsOptional();
            Property(x => x.NIdZipCodAmeIntCons329).HasColumnName(@"nIdZipCodAmeIntCons329").HasColumnType("int").IsOptional();
            Property(x => x.SPcIntCons).HasColumnName(@"sPCIntCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.NIdTypeFf).HasColumnName(@"nIdTypeFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.SNameFf).HasColumnName(@"sNameFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SIdNumberFf).HasColumnName(@"sIdNumberFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.SContactNameFf).HasColumnName(@"sContactNameFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SContactPhoneFf).HasColumnName(@"sContactPhoneFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.SAddressLine1Ff).HasColumnName(@"sAddressLine1FF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SAddressLine2Ff).HasColumnName(@"sAddressLine2FF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SCityFf).HasColumnName(@"sCityFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.NIdStateAmeFf324).HasColumnName(@"nIdStateAmeFF324").HasColumnType("int").IsOptional();
            Property(x => x.NIdStateMexFf323).HasColumnName(@"nIdStateMexFF323").HasColumnType("int").IsOptional();
            Property(x => x.NIdCountryFf322).HasColumnName(@"nIdCountryFF322").HasColumnType("int").IsOptional();
            Property(x => x.NIdZipCodAmeFf329).HasColumnName(@"nIdZipCodAmeFF329").HasColumnType("int").IsOptional();
            Property(x => x.SPcff).HasColumnName(@"sPCFF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.NIdImexUltCons07).HasColumnName(@"nIdImexUltCons07").HasColumnType("int").IsOptional();
            Property(x => x.NEstatusAesDirect).HasColumnName(@"nEstatusAESDirect").HasColumnType("int").IsRequired();
            Property(x => x.NEstatusValidacionPost).HasColumnName(@"nEstatusValidacionPost").HasColumnType("int").IsRequired();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsRequired();
            Property(x => x.SKeyUsppi).HasColumnName(@"sKeyUSPPI").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.NOpcionPresentacion).HasColumnName(@"nOpcionPresentacion").HasColumnType("tinyint").IsOptional();
            Property(x => x.STipoUltCons).HasColumnName(@"sTipoUltCons").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.SAeiFilingType).HasColumnName(@"sAEIFilingType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NIdProveedor42).HasColumnName(@"nIdProveedor42").HasColumnType("int").IsOptional();
            Property(x => x.NIdRem206).HasColumnName(@"nIdRem206").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Admin_Adminc07Cliente).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdImexUltCons07).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_ADMINC_07_CLIENTES
            HasOptional(a => a.CatCliente).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdImexUltCons).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_cat_clientes
            HasOptional(a => a.SIR_Sir156EntradasBodega).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdEntrada156).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_156_ENTRADAS_BODEGAS
            HasOptional(a => a.SIR_Sir206Remesa_NIdRem206).WithMany(b => b.SIR_Sir346SedDocument_NIdRem206).HasForeignKey(c => c.NIdRem206).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_206_REMESAS_nIdRem206
            HasOptional(a => a.SIR_Sir322SedCountRy_NIdCountriesDestination322).WithMany(b => b.SIR_Sir346SedDocument_NIdCountriesDestination322).HasForeignKey(c => c.NIdCountriesDestination322).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_322_SED_COUNTRIES1
            HasOptional(a => a.SIR_Sir322SedCountRy_NIdCountryFf322).WithMany(b => b.SIR_Sir346SedDocument_NIdCountryFf322).HasForeignKey(c => c.NIdCountryFf322).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_322_SED_COUNTRIES4
            HasOptional(a => a.SIR_Sir322SedCountRy_NIdCountryIntCons322).WithMany(b => b.SIR_Sir346SedDocument_NIdCountryIntCons322).HasForeignKey(c => c.NIdCountryIntCons322).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_322_SED_COUNTRIES3
            HasOptional(a => a.SIR_Sir322SedCountRy_NIdCountryUltCons322).WithMany(b => b.SIR_Sir346SedDocument_NIdCountryUltCons322).HasForeignKey(c => c.NIdCountryUltCons322).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_322_SED_COUNTRIES2
            HasOptional(a => a.SIR_Sir322SedCountRy_NIdVesselFlag322).WithMany(b => b.SIR_Sir346SedDocument_NIdVesselFlag322).HasForeignKey(c => c.NIdVesselFlag322).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_322_SED_COUNTRIES
            HasOptional(a => a.SIR_Sir323SedMexicanState_NIdStateMexFf323).WithMany(b => b.SIR_Sir346SedDocument_NIdStateMexFf323).HasForeignKey(c => c.NIdStateMexFf323).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_323_SED_MEXICAN_STATES2
            HasOptional(a => a.SIR_Sir323SedMexicanState_NIdStateMexIntCons323).WithMany(b => b.SIR_Sir346SedDocument_NIdStateMexIntCons323).HasForeignKey(c => c.NIdStateMexIntCons323).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_323_SED_MEXICAN_STATES1
            HasOptional(a => a.SIR_Sir323SedMexicanState_NIdStateMexUltCons323).WithMany(b => b.SIR_Sir346SedDocument_NIdStateMexUltCons323).HasForeignKey(c => c.NIdStateMexUltCons323).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_323_SED_MEXICAN_STATES
            HasOptional(a => a.SIR_Sir324SedAmericanState_NIdStateAmeFf324).WithMany(b => b.SIR_Sir346SedDocument_NIdStateAmeFf324).HasForeignKey(c => c.NIdStateAmeFf324).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_324_SED_AMERICAN_STATES5
            HasOptional(a => a.SIR_Sir324SedAmericanState_NIdStateAmeIntCons324).WithMany(b => b.SIR_Sir346SedDocument_NIdStateAmeIntCons324).HasForeignKey(c => c.NIdStateAmeIntCons324).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_324_SED_AMERICAN_STATES2
            HasOptional(a => a.SIR_Sir324SedAmericanState_NIdStateAmeUltCons324).WithMany(b => b.SIR_Sir346SedDocument_NIdStateAmeUltCons324).HasForeignKey(c => c.NIdStateAmeUltCons324).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_324_SED_AMERICAN_STATES4
            HasOptional(a => a.SIR_Sir324SedAmericanState_NIdStateAmeUsppi324).WithMany(b => b.SIR_Sir346SedDocument_NIdStateAmeUsppi324).HasForeignKey(c => c.NIdStateAmeUsppi324).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_324_SED_AMERICAN_STATES1
            HasOptional(a => a.SIR_Sir324SedAmericanState_NIdStateOrigin324).WithMany(b => b.SIR_Sir346SedDocument_NIdStateOrigin324).HasForeignKey(c => c.NIdStateOrigin324).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_324_SED_AMERICAN_STATES
            HasOptional(a => a.SIR_Sir325SedAmericanPort).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdPortExportAmerican325).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_325_SED_AMERICAN_PORTS
            HasOptional(a => a.SIR_Sir326SedForeignPort).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdPortExportForeign326).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_326_SED_FOREIGN_PORTS
            HasOptional(a => a.SIR_Sir327SedAirCarriers2).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdAirCarrierIataTwo327).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_327_SED_AIR_CARRIERS_2
            HasOptional(a => a.SIR_Sir328SedStandarCarrier).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdStandarCarrierAlpha328).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_328_SED_STANDAR_CARRIERS
            HasOptional(a => a.SIR_Sir329SedZipCodAmeState_NIdZipCodAmeFf329).WithMany(b => b.SIR_Sir346SedDocument_NIdZipCodAmeFf329).HasForeignKey(c => c.NIdZipCodAmeFf329).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_329_SED_ZIP_COD_AME_STATES
            HasOptional(a => a.SIR_Sir329SedZipCodAmeState_NIdZipCodAmeIntCons329).WithMany(b => b.SIR_Sir346SedDocument_NIdZipCodAmeIntCons329).HasForeignKey(c => c.NIdZipCodAmeIntCons329).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_329_SED_ZIP_COD_AME_STATES1
            HasOptional(a => a.SIR_Sir329SedZipCodAmeState_NIdZipCodAmeUltCons329).WithMany(b => b.SIR_Sir346SedDocument_NIdZipCodAmeUltCons329).HasForeignKey(c => c.NIdZipCodAmeUltCons329).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_329_SED_ZIP_COD_AME_STATES2
            HasOptional(a => a.SIR_Sir336SedInbondType).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdInbondTypes336).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_336_SED_INBOND_TYPES
            HasOptional(a => a.SIR_Sir341SedAirCarriers3).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdAirCarrierIataThree341).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_341_SED_AIR_CARRIERS_3
            HasOptional(a => a.SIR_Sir42Proveedore).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdProveedor42).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_42_PROVEEDORES_nIdProveedor42
            HasOptional(a => a.SIR_Sir46SedTransportCode).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdModeTransport46).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_46_SED_TRANSPORT_CODES
            HasOptional(a => a.SIR_Sir60Referencia).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdReferencia60).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_60_REFERENCIAS
            HasRequired(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir346SedDocument).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_346_SED_DOCUMENTS_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
