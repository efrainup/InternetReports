// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_emp_dep
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatEmpDep
    {
        [Required]
        [Display(Name = "Id dep")]
        public int IdDep { get; set; } // id_dep (Primary key)

        [Required]
        [Display(Name = "Id rel dep")]
        public int IdRelDep { get; set; } // id_rel_dep

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Nom")]
        public string Nom { get; set; } // nom (length: 50)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec nac")]
        public System.DateTime FecNac { get; set; } // fec_nac

        [Required]
        [Display(Name = "Parentesco")]
        public int Parentesco { get; set; } // parentesco

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        ///<summary>
        /// Indica si la fecha del dependiente esta disponible
        ///</summary>
        [Required]
        [Display(Name = "C fec dsp")]
        public byte CFecDsp { get; set; } // c_fec_dsp

        [Required]
        [Display(Name = "C dep direc")]
        public byte CDepDirec { get; set; } // c_dep_direc

        ///<summary>
        /// Ocupaci√≥n del dependiente.
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Ocupa")]
        public string Ocupa { get; set; } // ocupa (length: 200)

        ///<summary>
        /// CURP del dependiente.
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Curp")]
        public string Curp { get; set; } // curp (length: 20)

        ///<summary>
        /// Si es beneficiario del dependiente.
        ///</summary>
        [Required]
        [Display(Name = "C benef")]
        public byte CBenef { get; set; } // c_benef

        ///<summary>
        /// Porcentaje del beneficiario del dependiente.
        ///</summary>
        [Required]
        [Display(Name = "Ptg")]
        public double Ptg { get; set; } // ptg

        public CatEmpDep()
        {
            IdDep = 0;
            IdRelDep = 0;
            Nom = "";
            Parentesco = 0;
            Status = 1;
            CFecDsp = 0;
            CDepDirec = 0;
            Ocupa = "";
            Curp = "";
            CBenef = 0;
            Ptg = 0;
        }
    }

}
// </auto-generated>
