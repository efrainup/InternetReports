// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_145_CONFIG_RECINTOS_MUELL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir145ConfigRecintosMuellConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir145ConfigRecintosMuell>
    {
        public SIR_Sir145ConfigRecintosMuellConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir145ConfigRecintosMuellConfiguration(string schema)
        {
            ToTable("SIR_145_CONFIG_RECINTOS_MUELL", schema);
            HasKey(x => x.NIdCongMuell145);

            Property(x => x.NIdCongMuell145).HasColumnName(@"nIdCongMuell145").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdRecinto).HasColumnName(@"nIdRecinto").HasColumnType("int").IsRequired();
            Property(x => x.NDiasLibres).HasColumnName(@"nDiasLibres").HasColumnType("smallint").IsRequired();
            Property(x => x.NDiasLibresRecargo).HasColumnName(@"nDiasLibresRecargo").HasColumnType("smallint").IsRequired();
            Property(x => x.BAplicaMuellaje).HasColumnName(@"bAplicaMuellaje").HasColumnType("bit").IsRequired();
            Property(x => x.NUnidadCobro).HasColumnName(@"nUnidadCobro").HasColumnType("int").IsRequired();
            Property(x => x.NTipoTarifa).HasColumnName(@"nTipoTarifa").HasColumnType("tinyint").IsRequired();
            Property(x => x.BAplicaCargaSuelta).HasColumnName(@"bAplicaCargaSuelta").HasColumnType("bit").IsRequired();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NDiasLibresImpo).HasColumnName(@"nDiasLibresImpo").HasColumnType("int").IsOptional();
            Property(x => x.NDiasLibresExpo).HasColumnName(@"nDiasLibresExpo").HasColumnType("int").IsOptional();
            Property(x => x.NDiasLibresImo).HasColumnName(@"nDiasLibresIMO").HasColumnType("int").IsOptional();
            Property(x => x.NDiasLibresDesis).HasColumnName(@"nDiasLibresDesis").HasColumnType("int").IsOptional();
            Property(x => x.NDiasLibresAlm).HasColumnName(@"nDiasLibresAlm").HasColumnType("int").IsOptional();
            Property(x => x.NDiasLibresPagoAd).HasColumnName(@"nDiasLibresPagoAd").HasColumnType("int").IsOptional();
            Property(x => x.NDiasPrimPlazo).HasColumnName(@"nDiasPrimPlazo").HasColumnType("int").IsOptional();
            Property(x => x.NDiasSegPlazo).HasColumnName(@"nDiasSegPlazo").HasColumnType("int").IsOptional();
            Property(x => x.NDiasTerPlazo).HasColumnName(@"nDiasTerPlazo").HasColumnType("int").IsOptional();
            Property(x => x.DPorcentImo).HasColumnName(@"dPorcentIMO").HasColumnType("decimal").IsOptional().HasPrecision(5,2);
            Property(x => x.NUnidadCobroAlm).HasColumnName(@"nUnidadCobroAlm").HasColumnType("int").IsOptional();
            Property(x => x.BAplicaDiasFest).HasColumnName(@"bAplicaDiasFest").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaContAlm).HasColumnName(@"bAplicaContAlm").HasColumnType("bit").IsRequired();
            Property(x => x.NTGeneralImpo).HasColumnName(@"nTGeneralImpo").HasColumnType("decimal").IsOptional().HasPrecision(5,2);
            Property(x => x.NTGeneralExpo).HasColumnName(@"nTGeneralExpo").HasColumnType("decimal").IsOptional().HasPrecision(5,2);
            Property(x => x.SSiglas).HasColumnName(@"sSiglas").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SClaveOficial).HasColumnName(@"sClaveOficial").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.BPredeterminado).HasColumnName(@"bPredeterminado").HasColumnType("bit").IsOptional();
            Property(x => x.BRecintoFiscal).HasColumnName(@"bRecintoFiscal").HasColumnType("bit").IsOptional();
            Property(x => x.SAduana).HasColumnName(@"sAduana").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NDescuento).HasColumnName(@"nDescuento").HasColumnType("decimal").IsOptional().HasPrecision(6,2);
            Property(x => x.NDiasLibresDesisExpo).HasColumnName(@"nDiasLibresDesisExpo").HasColumnType("int").IsOptional();
            Property(x => x.BTieneReportePersonalizado).HasColumnName(@"bTieneReportePersonalizado").HasColumnType("bit").IsOptional();
            Property(x => x.SPathReportePersonalizado).HasColumnName(@"sPathReportePersonalizado").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3000);
            Property(x => x.BEstadisticas).HasColumnName(@"bEstadisticas").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasRequired(a => a.CatProv).WithMany(b => b.SIR_Sir145ConfigRecintosMuell).HasForeignKey(c => c.NIdRecinto).WillCascadeOnDelete(false); // FK_SIR_145_CONFIG_RECINTOS_MUELL_cat_prov
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir145ConfigRecintosMuell).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_145_CONFIG_RECINTOS_MUELL_cat_usr_ed
        }
    }

}
// </auto-generated>
