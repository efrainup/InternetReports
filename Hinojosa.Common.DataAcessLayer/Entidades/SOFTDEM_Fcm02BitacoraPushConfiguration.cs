// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // FCM_02_BITACORA_PUSH
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SOFTDEM_Fcm02BitacoraPushConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SOFTDEM_Fcm02BitacoraPush>
    {
        public SOFTDEM_Fcm02BitacoraPushConfiguration()
            : this("SOFTDEM")
        {
        }

        public SOFTDEM_Fcm02BitacoraPushConfiguration(string schema)
        {
            ToTable("FCM_02_BITACORA_PUSH", schema);
            HasKey(x => x.NIdBitacoraPush02);

            Property(x => x.NIdBitacoraPush02).HasColumnName(@"nIdBitacoraPush02").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdTokenPush01).HasColumnName(@"nIdTokenPush01").HasColumnType("int").IsOptional();
            Property(x => x.SMensaje).HasColumnName(@"sMensaje").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
            Property(x => x.SJsonRequest).HasColumnName(@"sJSONRequest").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SJsonResponse).HasColumnName(@"sJSONResponse").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DFecha).HasColumnName(@"dFecha").HasColumnType("datetime").IsRequired();
            Property(x => x.NResponseStatusCode).HasColumnName(@"nResponseStatusCode").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.SOFTDEM_Fcm01TokenPush).WithMany(b => b.SOFTDEM_Fcm02BitacoraPush).HasForeignKey(c => c.NIdTokenPush01).WillCascadeOnDelete(false); // FK_FCM_02_BITACORA_PUSH_FCM_01_TOKEN_PUSH
            HasMany(t => t.SIR_Sir797NotificacionSirApp).WithMany(t => t.SOFTDEM_Fcm02BitacoraPush).Map(m =>
            {
                m.ToTable("SIR_798_BITACORA_NOTIFICACIONES_SIR_APP", "SIR");
                m.MapLeftKey("nIdBitacoraPush02");
                m.MapRightKey("nIdNotificacion797");
            });
        }
    }

}
// </auto-generated>
