// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // inv_mto_ser_lot
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InvMtoSerLot
    {
        [Required]
        [Display(Name = "Id mto ser lot")]
        public int IdMtoSerLot { get; set; } // id_mto_ser_lot (Primary key)

        [Required]
        [Display(Name = "Id pro")]
        public int IdPro { get; set; } // id_pro

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num lot")]
        public string NumLot { get; set; } // num_lot (length: 64)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser")]
        public string NumSer { get; set; } // num_ser (length: 64)

        [Required]
        [Display(Name = "Existencia")]
        public double Existencia { get; set; } // existencia

        [Required]
        [Display(Name = "Tipo")]
        public byte Tipo { get; set; } // tipo

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec elab")]
        public System.DateTime FecElab { get; set; } // fec_elab

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec cad")]
        public System.DateTime FecCad { get; set; } // fec_cad

        [Required]
        [Display(Name = "Id cert")]
        public int IdCert { get; set; } // id_cert

        [Required]
        [Display(Name = "C ped")]
        public byte CPed { get; set; } // c_ped

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Num ped")]
        public string NumPed { get; set; } // num_ped (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Aduana")]
        public string Aduana { get; set; } // aduana (length: 50)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha ped")]
        public System.DateTime FechaPed { get; set; } // fecha_ped

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Apartado")]
        public double Apartado { get; set; } // apartado

        [Required]
        [Display(Name = "Disponible")]
        public double Disponible { get; set; } // disponible

        [Required]
        [Display(Name = "Id ord")]
        public int IdOrd { get; set; } // id_ord

        [Required]
        [Display(Name = "Num ord")]
        public int NumOrd { get; set; } // num_ord

        [Required]
        [Display(Name = "Costo")]
        public double Costo { get; set; } // costo

        ///<summary>
        /// 1=orden de Produccion 2=Orden de Compra
        ///</summary>
        [Required]
        [Display(Name = "Tip ord")]
        public byte TipOrd { get; set; } // tip_ord

        [Required]
        [Display(Name = "Cant ini")]
        public double CantIni { get; set; } // cant_ini

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Patente")]
        public string Patente { get; set; } // patente (length: 10)

        [Required]
        [Display(Name = "Id ref")]
        public int IdRef { get; set; } // id_ref

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc

        [Required]
        [Display(Name = "Num doc")]
        public int NumDoc { get; set; } // num_doc

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec doc")]
        public System.DateTime FecDoc { get; set; } // fec_doc

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser fin")]
        public string NumSerFin { get; set; } // num_ser_fin (length: 64)

        [Required]
        [Display(Name = "Id doc det")]
        public int IdDocDet { get; set; } // id_doc_det

        [Required]
        [Display(Name = "Id cli")]
        public int IdCli { get; set; } // id_cli

        [Required]
        [Display(Name = "Id ped")]
        public int IdPed { get; set; } // id_ped

        [Required]
        [Display(Name = "C imp")]
        public byte CImp { get; set; } // c_imp

        [Required]
        [Display(Name = "Id mto ser lot ori")]
        public int IdMtoSerLotOri { get; set; } // id_mto_ser_lot_ori

        [Required]
        [Display(Name = "Id mto ser lot pad")]
        public int IdMtoSerLotPad { get; set; } // id_mto_ser_lot_pad

        [Required]
        [Display(Name = "Nlargo")]
        public double Nlargo { get; set; } // nlargo

        [Required]
        [Display(Name = "Nancho")]
        public double Nancho { get; set; } // nancho

        [Required]
        [Display(Name = "Nespesor")]
        public double Nespesor { get; set; } // nespesor

        [Required]
        [Display(Name = "Nvolumen")]
        public double Nvolumen { get; set; } // nvolumen

        [Required]
        [Display(Name = "Narea")]
        public double Narea { get; set; } // narea

        [Required]
        [Display(Name = "Npeso")]
        public double Npeso { get; set; } // npeso

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "S marca")]
        public string SMarca { get; set; } // sMarca (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S serie prov")]
        public string SSerieProv { get; set; } // sSerieProv (length: 100)

        [Required]
        [Display(Name = "Id inv mov part")]
        public int IdInvMovPart { get; set; } // id_inv_mov_part

        public InvMtoSerLot()
        {
            IdMtoSerLot = 0;
            IdPro = 0;
            NumLot = "";
            NumSer = "";
            Existencia = 0;
            Tipo = 1;
            IdCert = 0;
            CPed = 0;
            NumPed = "";
            Aduana = "";
            Status = 1;
            Apartado = 0;
            Disponible = 0;
            IdOrd = 0;
            NumOrd = 0;
            Costo = 0;
            TipOrd = 1;
            CantIni = 0;
            Patente = "";
            IdRef = 0;
            IdTipDoc = 0;
            IdDoc = 0;
            NumDoc = 0;
            IdUsr = 0;
            NumSerFin = "";
            IdDocDet = 0;
            IdCli = 0;
            IdPed = 0;
            CImp = 0;
            IdMtoSerLotOri = 0;
            IdMtoSerLotPad = 0;
            Nlargo = 0;
            Nancho = 0;
            Nespesor = 0;
            Nvolumen = 0;
            Narea = 0;
            Npeso = 0;
            SMarca = "";
            SSerieProv = "";
            IdInvMovPart = 0;
        }
    }

}
// </auto-generated>
