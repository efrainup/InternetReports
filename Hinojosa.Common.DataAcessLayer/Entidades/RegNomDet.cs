// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // reg_nom_det
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RegNomDet
    {
        [Required]
        [Display(Name = "Id reg nom det")]
        public int IdRegNomDet { get; set; } // id_reg_nom_det (Primary key)

        [Required]
        [Display(Name = "Id reg nom")]
        public int IdRegNom { get; set; } // id_reg_nom

        [Required]
        [Display(Name = "Id per ded")]
        public int IdPerDed { get; set; } // id_per_ded

        [Required]
        [Display(Name = "Id emp")]
        public int IdEmp { get; set; } // id_emp

        [Required]
        [Display(Name = "Id depto")]
        public int IdDepto { get; set; } // id_depto

        [Required]
        [Display(Name = "Id puesto")]
        public int IdPuesto { get; set; } // id_puesto

        [Required]
        [Display(Name = "Id cta dd")]
        public int IdCtaDd { get; set; } // id_cta_dd

        [Required]
        [Display(Name = "Num part")]
        public int NumPart { get; set; } // num_part

        [Required]
        [Display(Name = "Monto")]
        public double Monto { get; set; } // monto

        [Required]
        [Display(Name = "Id cen cto")]
        public int IdCenCto { get; set; } // id_cen_cto

        [Required]
        [Display(Name = "Id cod srv")]
        public int IdCodSrv { get; set; } // id_cod_srv

        [Required]
        [Display(Name = "Id ref")]
        public int IdRef { get; set; } // id_ref

        [Required]
        [Display(Name = "Id ent")]
        public int IdEnt { get; set; } // id_ent

        [Required]
        [Display(Name = "X 100")]
        public double X100 { get; set; } // x100

        [Required]
        [Display(Name = "Nph")]
        public byte Nph { get; set; } // nph

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Cmt")]
        public string Cmt { get; set; } // cmt (length: 25)

        [Required]
        [Display(Name = "Id prov")]
        public int IdProv { get; set; } // id_prov

        [Required]
        [Display(Name = "Id impto")]
        public int IdImpto { get; set; } // id_impto

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Id otr sis")]
        public string IdOtrSis { get; set; } // id_otr_sis (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Num doc terc")]
        public string NumDocTerc { get; set; } // num_doc_terc (length: 20)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec terc")]
        public System.DateTime FecTerc { get; set; } // fec_terc

        [Required]
        [Display(Name = "Monto terc")]
        public double MontoTerc { get; set; } // monto_terc

        [Required]
        [Display(Name = "Dias")]
        public double Dias { get; set; } // dias

        [Required]
        [Display(Name = "Ddt")]
        public byte Ddt { get; set; } // ddt

        [Required]
        [Display(Name = "Mto ter")]
        public double MtoTer { get; set; } // mto_ter

        [Required]
        [Display(Name = "Antiguedad")]
        public int Antiguedad { get; set; } // antiguedad

        [Required]
        [Display(Name = "Imp grav")]
        public double ImpGrav { get; set; } // imp_grav

        [Required]
        [Display(Name = "Imp exen")]
        public double ImpExen { get; set; } // imp_exen

        [Required]
        [Display(Name = "Dias inc")]
        public double DiasInc { get; set; } // dias_inc

        [Required]
        [Display(Name = "Tip inc")]
        public int TipInc { get; set; } // tip_inc

        [Required]
        [Display(Name = "Descto inc")]
        public double DesctoInc { get; set; } // descto_inc

        [Required]
        [Display(Name = "Dias lab he")]
        public int DiasLabHe { get; set; } // dias_lab_he

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Tip he")]
        public string TipHe { get; set; } // tip_he (length: 10)

        [Required]
        [Display(Name = "He")]
        public int He { get; set; } // he

        [Required]
        [Display(Name = "Imp pag he")]
        public double ImpPagHe { get; set; } // imp_pag_he

        [Required]
        [Display(Name = "Id bco cta")]
        public int IdBcoCta { get; set; } // id_bco_cta

        [Required]
        [Display(Name = "Id bco cta emp")]
        public int IdBcoCtaEmp { get; set; } // id_bco_cta_emp

        [Required]
        [Display(Name = "Sdi")]
        public double Sdi { get; set; } // sdi

        [Required]
        [Display(Name = "Sdo bse cot")]
        public double SdoBseCot { get; set; } // sdo_bse_cot

        [Required]
        [Display(Name = "Inc tip 1")]
        public int IncTip1 { get; set; } // inc_tip1

        [Required]
        [Display(Name = "Inc dscto 1")]
        public decimal IncDscto1 { get; set; } // inc_dscto1

        [Required]
        [Display(Name = "Inc tip 2")]
        public int IncTip2 { get; set; } // inc_tip2

        [Required]
        [Display(Name = "Inc dscto 2")]
        public decimal IncDscto2 { get; set; } // inc_dscto2

        [Required]
        [Display(Name = "Inc tip 3")]
        public int IncTip3 { get; set; } // inc_tip3

        [Required]
        [Display(Name = "Inc dscto 3")]
        public decimal IncDscto3 { get; set; } // inc_dscto3

        [Required]
        [Display(Name = "He dd")]
        public int HeDd { get; set; } // he_dd

        [Required]
        [Display(Name = "He cantd")]
        public decimal HeCantd { get; set; } // he_cantd

        [Required]
        [Display(Name = "He impd")]
        public decimal HeImpd { get; set; } // he_impd

        [Required]
        [Display(Name = "He dt")]
        public int HeDt { get; set; } // he_dt

        [Required]
        [Display(Name = "He cantt")]
        public decimal HeCantt { get; set; } // he_cantt

        [Required]
        [Display(Name = "He impt")]
        public decimal HeImpt { get; set; } // he_impt

        public RegNomDet()
        {
            IdRegNomDet = 0;
            IdRegNom = 0;
            IdPerDed = 0;
            IdEmp = 0;
            IdDepto = 0;
            IdPuesto = 0;
            IdCtaDd = 0;
            NumPart = 0;
            Monto = 0;
            IdCenCto = 0;
            IdCodSrv = 0;
            IdRef = 0;
            IdEnt = 0;
            X100 = 0;
            Nph = 0;
            Cmt = "";
            IdProv = 0;
            IdImpto = 0;
            IdOtrSis = "";
            NumDocTerc = "";
            MontoTerc = 0;
            Dias = 0;
            Ddt = 0;
            MtoTer = 0;
            Antiguedad = 0;
            ImpGrav = 0;
            ImpExen = 0;
            DiasInc = 0;
            TipInc = 0;
            DesctoInc = 0;
            DiasLabHe = 0;
            TipHe = "";
            He = 0;
            ImpPagHe = 0;
            IdBcoCta = 0;
            IdBcoCtaEmp = 0;
            Sdi = 0;
            SdoBseCot = 0;
            IncTip1 = 0;
            IncDscto1 = 0m;
            IncTip2 = 0;
            IncDscto2 = 0m;
            IncTip3 = 0;
            IncDscto3 = 0m;
            HeDd = 0;
            HeCantd = 0m;
            HeImpd = 0m;
            HeDt = 0;
            HeCantt = 0m;
            HeImpt = 0m;
        }
    }

}
// </auto-generated>
