// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_256_CLIENTES_IDENTIFICADORES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir256ClientesIdentificadoreConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir256ClientesIdentificadore>
    {
        public SIR_Sir256ClientesIdentificadoreConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir256ClientesIdentificadoreConfiguration(string schema)
        {
            ToTable("SIR_256_CLIENTES_IDENTIFICADORES", schema);
            HasKey(x => x.NIdCliIdent256);

            Property(x => x.NIdCliIdent256).HasColumnName(@"nIdCliIdent256").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdIdenPerm69).HasColumnName(@"nIdIdenPerm69").HasColumnType("int").IsRequired();
            Property(x => x.SComplemento1).HasColumnName(@"sComplemento1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SComplemento2).HasColumnName(@"sComplemento2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SComplemento3).HasColumnName(@"sComplemento3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SFirmaDescargo).HasColumnName(@"sFirmaDescargo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.SNumero).HasColumnName(@"sNumero").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NCantidadMcia).HasColumnName(@"nCantidadMcia").HasColumnType("decimal").IsRequired().HasPrecision(15,3);
            Property(x => x.NValorDolares).HasColumnName(@"nValorDolares").HasColumnType("decimal").IsRequired().HasPrecision(14,2);
            Property(x => x.NNivel).HasColumnName(@"nNivel").HasColumnType("tinyint").IsRequired();
            Property(x => x.SCertificado).HasColumnName(@"sCertificado").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.BExcepcionCert).HasColumnName(@"bExcepcionCert").HasColumnType("bit").IsRequired();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.DInicio).HasColumnName(@"dInicio").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFin).HasColumnName(@"dFin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdCliIden289).HasColumnName(@"nIdCliIden289").HasColumnType("int").IsOptional();
            Property(x => x.NIdFracc167).HasColumnName(@"nIdFracc167").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.SIR_Sir167FraccionesArancelaria).WithMany(b => b.SIR_Sir256ClientesIdentificadore).HasForeignKey(c => c.NIdFracc167).WillCascadeOnDelete(false); // FK_SIR_256_CLIENTES_IDENTIFICADORES_SIR_167_FRACCIONES_ARANCELARIAS
            HasOptional(a => a.SIR_Sir289MtraClientesIdent).WithMany(b => b.SIR_Sir256ClientesIdentificadore).HasForeignKey(c => c.NIdCliIden289).WillCascadeOnDelete(false); // FK_SIR_256_CLIENTES_IDENTIFICADORES_SIR_289_MTRA_CLIENTES_IDENT
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir256ClientesIdentificadore).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_256_CLIENTES_IDENTIFICADORES_cat_usr_ed
            HasRequired(a => a.SIR_Sir69IdentificadorPermiso).WithMany(b => b.SIR_Sir256ClientesIdentificadore).HasForeignKey(c => c.NIdIdenPerm69).WillCascadeOnDelete(false); // FK_SIR_256_CLIENTES_IDENTIFICADORES_SIR_69_IDENTIFICADOR_PERMISOS
        }
    }

}
// </auto-generated>
