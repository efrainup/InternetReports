// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // Machines
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MachineConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Machine>
    {
        public MachineConfiguration()
            : this("dbo")
        {
        }

        public MachineConfiguration(string schema)
        {
            ToTable("Machines", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MachineAlias).HasColumnName(@"MachineAlias").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ConnectType).HasColumnName(@"ConnectType").HasColumnType("int").IsRequired();
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.SerialPort).HasColumnName(@"SerialPort").HasColumnType("int").IsOptional();
            Property(x => x.Port).HasColumnName(@"Port").HasColumnType("int").IsOptional();
            Property(x => x.Baudrate).HasColumnName(@"Baudrate").HasColumnType("int").IsOptional();
            Property(x => x.MachineNumber).HasColumnName(@"MachineNumber").HasColumnType("int").IsRequired();
            Property(x => x.IsHost).HasColumnName(@"IsHost").HasColumnType("bit").IsOptional();
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsOptional();
            Property(x => x.CommPassword).HasColumnName(@"CommPassword").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.UiLanguage).HasColumnName(@"UILanguage").HasColumnType("smallint").IsOptional();
            Property(x => x.DateFormat).HasColumnName(@"DateFormat").HasColumnType("smallint").IsOptional();
            Property(x => x.InOutRecordWarn).HasColumnName(@"InOutRecordWarn").HasColumnType("smallint").IsOptional();
            Property(x => x.Idle).HasColumnName(@"Idle").HasColumnType("smallint").IsOptional();
            Property(x => x.Voice).HasColumnName(@"Voice").HasColumnType("smallint").IsOptional();
            Property(x => x.Managercount).HasColumnName(@"managercount").HasColumnType("smallint").IsOptional();
            Property(x => x.Usercount).HasColumnName(@"usercount").HasColumnType("smallint").IsOptional();
            Property(x => x.Fingercount).HasColumnName(@"fingercount").HasColumnType("smallint").IsOptional();
            Property(x => x.SecretCount).HasColumnName(@"SecretCount").HasColumnType("smallint").IsOptional();
            Property(x => x.FirmwareVersion).HasColumnName(@"FirmwareVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ProductType).HasColumnName(@"ProductType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.LockControl).HasColumnName(@"LockControl").HasColumnType("smallint").IsOptional();
            Property(x => x.Purpose).HasColumnName(@"Purpose").HasColumnType("smallint").IsOptional();
            Property(x => x.ProduceKind).HasColumnName(@"ProduceKind").HasColumnType("int").IsOptional();
            Property(x => x.DeviceNetmask).HasColumnName(@"DeviceNetmask").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.DeviceGetway).HasColumnName(@"DeviceGetway").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Sn).HasColumnName(@"sn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.PhotoStamp).HasColumnName(@"PhotoStamp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.IsIfChangeConfigServer2).HasColumnName(@"IsIfChangeConfigServer2").HasColumnType("int").IsOptional();
            Property(x => x.CUsaNom).HasColumnName(@"c_usa_nom").HasColumnType("tinyint").IsRequired();
            Property(x => x.Url).HasColumnName(@"url").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ShortName).HasColumnName(@"shortName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5);
            Property(x => x.LastUpdateDate).HasColumnName(@"lastUpdateDate").HasColumnType("datetime").IsRequired();
        }
    }

}
// </auto-generated>
