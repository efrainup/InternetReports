// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_cfg_env_sftp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatCfgEnvSftp
    {
        [Display(Name = "Id cli fa da")]
        public int? IdCliFaDa { get; set; } // id_cli_fa_da

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Nom srv")]
        public string NomSrv { get; set; } // nom_srv (Primary key) (length: 100)

        [Required]
        [Display(Name = "Pto srv")]
        public int PtoSrv { get; set; } // pto_srv (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Usr srv")]
        public string UsrSrv { get; set; } // usr_srv (Primary key) (length: 100)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Usr pwd")]
        public string UsrPwd { get; set; } // usr_pwd (Primary key) (length: 100)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "Usr pk")]
        public string UsrPk { get; set; } // usr_pk (Primary key) (length: 300)

        [Required]
        [Display(Name = "Mod pasivo")]
        public bool ModPasivo { get; set; } // mod_pasivo (Primary key)

        [Required]
        [Display(Name = "Ssl")]
        public bool Ssl { get; set; } // SSL (Primary key)

        [Required]
        [Display(Name = "Ssh")]
        public bool Ssh { get; set; } // SSH (Primary key)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg (Primary key)

        [Required]
        [Display(Name = "Status")]
        public bool Status { get; set; } // status (Primary key)

        public CatCfgEnvSftp()
        {
            UsrPk = "";
            ModPasivo = false;
            Ssl = false;
            Ssh = false;
        }
    }

}
// </auto-generated>
