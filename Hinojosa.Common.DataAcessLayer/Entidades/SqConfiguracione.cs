// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SQ_Configuraciones
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SqConfiguracione
    {
        [Required]
        [Display(Name = "N ID configuracion")]
        public int NIdConfiguracion { get; set; } // nIdConfiguracion (Primary key)

        [Required]
        [Display(Name = "N tipo")]
        public int NTipo { get; set; } // nTipo

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S nombre")]
        public string SNombre { get; set; } // sNombre (length: 100)

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S descripcion")]
        public string SDescripcion { get; set; } // sDescripcion (length: 250)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S usuario")]
        public string SUsuario { get; set; } // sUsuario (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S password")]
        public string SPassword { get; set; } // sPassword (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S ruta")]
        public string SRuta { get; set; } // sRuta (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S ip")]
        public string SIp { get; set; } // sIP (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S smtp")]
        public string SSmtp { get; set; } // sSMTP (length: 100)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S puerto")]
        public string SPuerto { get; set; } // sPuerto (length: 10)

        [Display(Name = "B habilita ssl")]
        public bool? BHabilitaSsl { get; set; } // bHabilitaSSL

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S base datos")]
        public string SBaseDatos { get; set; } // sBaseDatos (length: 100)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha alta")]
        public System.DateTime DFechaAlta { get; set; } // dFechaAlta

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime? DFechaEdicion { get; set; } // dFechaEdicion

        [Display(Name = "S correos")]
        public string SCorreos { get; set; } // sCorreos

        public SqConfiguracione()
        {
            DFechaAlta = System.DateTime.Now;
        }
    }

}
// </auto-generated>
