// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_205_SALIDAS_BODEGA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir205SalidasBodegaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir205SalidasBodega>
    {
        public SIR_Sir205SalidasBodegaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir205SalidasBodegaConfiguration(string schema)
        {
            ToTable("SIR_205_SALIDAS_BODEGA", schema);
            HasKey(x => x.NIdSalBod205);

            Property(x => x.NIdSalBod205).HasColumnName(@"nIdSalBod205").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdTransportista).HasColumnName(@"nIdTransportista").HasColumnType("int").IsOptional();
            Property(x => x.NIdEmpleado).HasColumnName(@"nIdEmpleado").HasColumnType("int").IsRequired();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsRequired();
            Property(x => x.SChofer).HasColumnName(@"sChofer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(60);
            Property(x => x.SNumEconomico).HasColumnName(@"sNumEconomico").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.SPlacas).HasColumnName(@"sPlacas").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.SObservacion).HasColumnName(@"sObservacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SOrdenSalida).HasColumnName(@"sOrdenSalida").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NTipoSalida).HasColumnName(@"nTipoSalida").HasColumnType("tinyint").IsRequired();
            Property(x => x.NStatusSalida).HasColumnName(@"nStatusSalida").HasColumnType("tinyint").IsRequired();
            Property(x => x.DFechaSalida).HasColumnName(@"dFechaSalida").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.DFechaRegistro).HasColumnName(@"dFechaRegistro").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaProgramacion).HasColumnName(@"dFechaProgramacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BFletePagado).HasColumnName(@"bFletePagado").HasColumnType("bit").IsRequired();
            Property(x => x.SCaja).HasColumnName(@"sCaja").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SSellos).HasColumnName(@"sSellos").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.STalon).HasColumnName(@"sTalon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SObservacionesNota).HasColumnName(@"sObservacionesNota").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SObservacionesHoja).HasColumnName(@"sObservacionesHoja").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SObservacionesRelacion).HasColumnName(@"sObservacionesRelacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SAtencion).HasColumnName(@"sAtencion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(120);
            Property(x => x.NOtrosCargos).HasColumnName(@"nOtrosCargos").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.STransportista).HasColumnName(@"sTransportista").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NIdSpaBodega71).HasColumnName(@"nIdSPABodega71").HasColumnType("int").IsOptional();
            Property(x => x.NIdSucursal).HasColumnName(@"nIdSucursal").HasColumnType("int").IsOptional();
            Property(x => x.NIdTipoProgramacion648).HasColumnName(@"nIdTipoProgramacion648").HasColumnType("int").IsOptional();
            Property(x => x.NTipoEmbarque).HasColumnName(@"nTipoEmbarque").HasColumnType("int").IsOptional();
            Property(x => x.NTotalPesosLbs).HasColumnName(@"nTotalPesosLbs").HasColumnType("decimal").IsOptional().HasPrecision(21,10);
            Property(x => x.SPuerta).HasColumnName(@"sPuerta").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.NCargo).HasColumnName(@"nCargo").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.SEntrega).HasColumnName(@"sEntrega").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.BListoParaCargar).HasColumnName(@"bListoParaCargar").HasColumnType("bit").IsOptional();
            Property(x => x.BMercanciaCargada).HasColumnName(@"bMercanciaCargada").HasColumnType("bit").IsOptional();
            Property(x => x.BListoParaCruce).HasColumnName(@"bListoParaCruce").HasColumnType("bit").IsOptional();
            Property(x => x.BCarrilFast).HasColumnName(@"bCarrilFast").HasColumnType("bit").IsOptional();
            Property(x => x.BAmarres).HasColumnName(@"bAmarres").HasColumnType("bit").IsOptional();
            Property(x => x.NOrdenCruce).HasColumnName(@"nOrdenCruce").HasColumnType("int").IsOptional();
            Property(x => x.DFechaOrdenCruce).HasColumnName(@"dFechaOrdenCruce").HasColumnType("datetime").IsOptional();
            Property(x => x.SLicencia).HasColumnName(@"sLicencia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.NIdEntFedLicenciaChofer284).HasColumnName(@"nIdEntFedLicenciaChofer284").HasColumnType("int").IsOptional();
            Property(x => x.DListoParaCargar).HasColumnName(@"dListoParaCargar").HasColumnType("datetime").IsOptional();
            Property(x => x.DMercanciaCargada).HasColumnName(@"dMercanciaCargada").HasColumnType("datetime").IsOptional();
            Property(x => x.DListoParaCruce).HasColumnName(@"dListoParaCruce").HasColumnType("datetime").IsOptional();
            Property(x => x.NIdUsuarioListoParaCargar).HasColumnName(@"nIdUsuarioListoParaCargar").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioMercanciaCargada).HasColumnName(@"nIdUsuarioMercanciaCargada").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioListoParaCruce).HasColumnName(@"nIdUsuarioListoParaCruce").HasColumnType("int").IsOptional();
            Property(x => x.BMultipleUsuarioControlCarga).HasColumnName(@"bMultipleUsuarioControlCarga").HasColumnType("bit").IsOptional();
            Property(x => x.BControlDeCargaConfirmada).HasColumnName(@"bControlDeCargaConfirmada").HasColumnType("bit").IsOptional();
            Property(x => x.SServicioEspecial).HasColumnName(@"sServicioEspecial").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BAplicaDirGeneral).HasColumnName(@"bAplicaDirGeneral").HasColumnType("bit").IsOptional();
            Property(x => x.NIdChoferTransfer754).HasColumnName(@"nIdChoferTransfer754").HasColumnType("int").IsOptional();
            Property(x => x.BEmbarqueUrgente).HasColumnName(@"bEmbarqueUrgente").HasColumnType("bit").IsOptional();
            Property(x => x.NIdTransportistaMex).HasColumnName(@"nIdTransportistaMex").HasColumnType("int").IsOptional();
            Property(x => x.NIdTipoCont09).HasColumnName(@"nIdTipoCont09").HasColumnType("int").IsOptional();
            Property(x => x.NEstatusNotificacion).HasColumnName(@"nEstatusNotificacion").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsuarioEnvioNotificacion).HasColumnName(@"nIdUsuarioEnvioNotificacion").HasColumnType("int").IsOptional();
            Property(x => x.DEnvioNotificacion).HasColumnName(@"dEnvioNotificacion").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.CatProv_NIdTransportista).WithMany(b => b.SIR_Sir205SalidasBodega_NIdTransportista).HasForeignKey(c => c.NIdTransportista).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_cat_prov
            HasOptional(a => a.CatProv_NIdTransportistaMex).WithMany(b => b.SIR_Sir205SalidasBodega_NIdTransportistaMex).HasForeignKey(c => c.NIdTransportistaMex).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_TRANSPORTISTA_MEXICANO
            HasOptional(a => a.SIR_Sir09TiposContenedor).WithMany(b => b.SIR_Sir205SalidasBodega).HasForeignKey(c => c.NIdTipoCont09).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_SIR_09_TIPOS_CONTENEDOR
            HasOptional(a => a.SIR_Sir284EntidadesFederativa).WithMany(b => b.SIR_Sir205SalidasBodega).HasForeignKey(c => c.NIdEntFedLicenciaChofer284).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_SIR_284_ENTIDADES_FEDERATIVAS
            HasOptional(a => a.SIR_Sir648TiposProgramacionSalidasRt).WithMany(b => b.SIR_Sir205SalidasBodega).HasForeignKey(c => c.NIdTipoProgramacion648).WillCascadeOnDelete(false); // [FK_SIR_205_SALIDAS_BODEGA_SIR_648_TIPOS_PROGRAMACION_SALIDAS_RT
            HasRequired(a => a.CatEmp).WithMany(b => b.SIR_Sir205SalidasBodega).HasForeignKey(c => c.NIdEmpleado).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_cat_emp
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir205SalidasBodega).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_cat_usr
            HasRequired(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir205SalidasBodega).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_205_SALIDAS_BODEGA_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
