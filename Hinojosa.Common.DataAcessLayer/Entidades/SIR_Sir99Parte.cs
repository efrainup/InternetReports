// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_99_PARTES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir99Parte
    {
        [Required]
        [Display(Name = "N ID parte 99")]
        public int NIdParte99 { get; set; } // nIdParte99 (Primary key)

        [Display(Name = "N ID cliente")]
        public int? NIdCliente { get; set; } // nIdCliente

        [Required(AllowEmptyStrings = true)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "S parte")]
        public string SParte { get; set; } // sParte (length: 60)

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S fraccion")]
        public string SFraccion { get; set; } // sFraccion (length: 12)

        [Display(Name = "S descripcion tigie")]
        public string SDescripcionTigie { get; set; } // sDescripcionTIGIE

        [Display(Name = "S descripcion factura")]
        public string SDescripcionFactura { get; set; } // sDescripcionFactura

        [Display(Name = "S descripcion aa")]
        public string SDescripcionAa { get; set; } // sDescripcionAA

        [Display(Name = "N ID umc 10")]
        public int? NIdUmc10 { get; set; } // nIdUMC10

        [Display(Name = "N ID umt 10")]
        public int? NIdUmt10 { get; set; } // nIdUMT10

        [Display(Name = "N ID pais ori dest 01")]
        public int? NIdPaisOriDest01 { get; set; } // nIdPaisOriDest01

        [Display(Name = "N ID pais comp vend 01")]
        public int? NIdPaisCompVend01 { get; set; } // nIdPaisCompVend01

        [Display(Name = "N ID proveedor 42")]
        public int? NIdProveedor42 { get; set; } // nIdProveedor42

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "S codigo barras")]
        public string SCodigoBarras { get; set; } // sCodigoBarras (length: 40)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S control interno")]
        public string SControlInterno { get; set; } // sControlInterno (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S familia producto")]
        public string SFamiliaProducto { get; set; } // sFamiliaProducto (length: 30)

        [Required]
        [Display(Name = "B activa")]
        public bool BActiva { get; set; } // bActiva

        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "S fotografia")]
        public string SFotografia { get; set; } // sFotografia (length: 64)

        [Required]
        [Display(Name = "N esta vinculado")]
        public byte NEstaVinculado { get; set; } // nEstaVinculado

        [Display(Name = "N cp referencial")]
        public decimal? NCPreferencial { get; set; } // nCPreferencial

        [Required]
        [Display(Name = "N ID metodo val 101")]
        public int NIdMetodoVal101 { get; set; } // nIdMetodoVal101

        [Required]
        [Display(Name = "B aplica tlc")]
        public bool BAplicaTlc { get; set; } // bAplicaTLC

        [Required]
        [Display(Name = "B aplica aladi")]
        public bool BAplicaAladi { get; set; } // bAplicaALADI

        [Required]
        [Display(Name = "N monto desgravacion")]
        public decimal NMontoDesgravacion { get; set; } // nMontoDesgravacion

        [Required]
        [Display(Name = "N tipo arancel")]
        public byte NTipoArancel { get; set; } // nTipoArancel

        [Required]
        [Display(Name = "N tasa arancel")]
        public decimal NTasaArancel { get; set; } // nTasaArancel

        [Required]
        [Display(Name = "N tasa max adv")]
        public decimal NTasaMaxAdv { get; set; } // nTasaMaxAdv

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Required]
        [Display(Name = "N tipo operacion")]
        public byte NTipoOperacion { get; set; } // nTipoOperacion

        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "S um")]
        public string SUm { get; set; } // sUM (length: 2)

        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "S es")]
        public string SEs { get; set; } // sES (length: 1)

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha alta")]
        public System.DateTime? DFechaAlta { get; set; } // dFechaAlta

        [Display(Name = "D consulta tarifa")]
        public System.DateTime? DConsultaTarifa { get; set; } // dConsultaTarifa

        [Display(Name = "N ID clie 07")]
        public int? NIdClie07 { get; set; } // nIdClie07

        [Display(Name = "N peso")]
        public decimal? NPeso { get; set; } // nPeso

        [Display(Name = "N mt")]
        public decimal? NMt { get; set; } // nMT

        [Display(Name = "N valor minimo")]
        public decimal? NValorMinimo { get; set; } // nValorMinimo

        [Display(Name = "N ID umcove 410")]
        public int? NIdUmcove410 { get; set; } // nIdUMCOVE410

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S observaciones")]
        public string SObservaciones { get; set; } // sObservaciones (length: 500)

        [Display(Name = "N tipo registro")]
        public byte? NTipoRegistro { get; set; } // nTipoRegistro

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S registro")]
        public string SRegistro { get; set; } // sRegistro (length: 100)

        [Display(Name = "B certificado origen")]
        public bool? BCertificadoOrigen { get; set; } // bCertificadoOrigen

        [Display(Name = "D emision")]
        public System.DateTime? DEmision { get; set; } // dEmision

        [Display(Name = "D vencimiento")]
        public System.DateTime? DVencimiento { get; set; } // dVencimiento

        [Display(Name = "B sub modelo")]
        public bool? BSubModelo { get; set; } // bSubModelo

        [Display(Name = "B exotico")]
        public bool? BExotico { get; set; } // bExotico

        [Display(Name = "N ID motivos partes 412")]
        public int? NIdMotivosPartes412 { get; set; } // nIdMotivosPartes412

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S motivos partes libre")]
        public string SMotivosPartesLibre { get; set; } // sMotivosPartesLibre (length: 500)

        [Display(Name = "N ID parte padre 99")]
        public int? NIdPartePadre99 { get; set; } // nIdPartePadre99

        [Display(Name = "N consecutivo")]
        public int? NConsecutivo { get; set; } // nConsecutivo

        [Display(Name = "B es modificada")]
        public bool? BEsModificada { get; set; } // bEsModificada

        [Display(Name = "S descripcion certificado")]
        public string SDescripcionCertificado { get; set; } // sDescripcionCertificado

        [Display(Name = "N factor conversion")]
        public decimal? NFactorConversion { get; set; } // nFactorConversion

        [Display(Name = "B uva")]
        public bool? BUva { get; set; } // bUVA

        [Display(Name = "B importado no revisado")]
        public bool? BImportadoNoRevisado { get; set; } // bImportadoNoRevisado

        [Display(Name = "B no importable")]
        public bool? BNoImportable { get; set; } // bNoImportable

        [Display(Name = "B tomar fotografia")]
        public bool? BTomarFotografia { get; set; } // bTomarFotografia

        [Display(Name = "B pesar mercancia")]
        public bool? BPesarMercancia { get; set; } // bPesarMercancia

        [Display(Name = "N tipo uso mercancia")]
        public byte? NTipoUsoMercancia { get; set; } // nTipoUsoMercancia

        [Display(Name = "N tipo exotico")]
        public byte? NTipoExotico { get; set; } // nTipoExotico

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S nom uva")]
        public string SNomUva { get; set; } // sNomUVA (length: 50)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S observaciones 2")]
        public string SObservaciones2 { get; set; } // sObservaciones2 (length: 500)

        [Display(Name = "B con uniformes")]
        public bool? BConUniformes { get; set; } // bConUniformes

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S leyendas")]
        public string SLeyendas { get; set; } // sLeyendas (length: 500)

        [Display(Name = "N puede requerir pgr")]
        public byte? NPuedeRequerirPgr { get; set; } // nPuedeRequerirPGR

        [Display(Name = "N idf racc desd 685")]
        public int? NIdFraccDesd685 { get; set; } // nIDFraccDesd685

        [Display(Name = "N precio unitario")]
        public decimal? NPrecioUnitario { get; set; } // nPrecioUnitario

        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "S parte cliente")]
        public string SParteCliente { get; set; } // sParteCliente (length: 60)

        [Display(Name = "N ID um ed factura 785")]
        public int? NIdUMedFactura785 { get; set; } // nIdUMedFactura785

        [Display(Name = "B res horario")]
        public bool? BResHorario { get; set; } // bResHorario

        [Display(Name = "S descripcion ingles")]
        public string SDescripcionIngles { get; set; } // sDescripcionIngles

        [Display(Name = "N tipo fraccion ame aux")]
        public byte? NTipoFraccionAmeAux { get; set; } // nTipoFraccionAmeAux

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S fraccion ame aux")]
        public string SFraccionAmeAux { get; set; } // sFraccionAmeAux (length: 10)

        // Reverse navigation

        /// <summary>
        /// Child CatClientes (Many-to-Many) mapped by table [SIR_383_RELAC_CLIENTE_PARTE]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CatCliente> CatClientes { get; set; } // Many to many mapping
        /// <summary>
        /// Child SIR_Sir100FacPartAgrupada where [SIR_100_FAC_PART_AGRUPADAS].[nIdParte99] point to this entity (FK_SIR_100_FAC_PART_AGRUPADAS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir100FacPartAgrupada> SIR_Sir100FacPartAgrupada { get; set; } // SIR_100_FAC_PART_AGRUPADAS.FK_SIR_100_FAC_PART_AGRUPADAS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir102PartesImpuesto where [SIR_102_PARTES_IMPUESTOS].[nIdParte99] point to this entity (FK_SIR_102_PARTES_IMPUESTOS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir102PartesImpuesto> SIR_Sir102PartesImpuesto { get; set; } // SIR_102_PARTES_IMPUESTOS.FK_SIR_102_PARTES_IMPUESTOS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir103PartesIdentificadore where [SIR_103_PARTES_IDENTIFICADORES].[nIdParte99] point to this entity (FK_SIR_103_PARTES_IDENTIFICADORES_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir103PartesIdentificadore> SIR_Sir103PartesIdentificadore { get; set; } // SIR_103_PARTES_IDENTIFICADORES.FK_SIR_103_PARTES_IDENTIFICADORES_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir105PartesCaracteristica where [SIR_105_PARTES_CARACTERISTICAS].[nIdParte99] point to this entity (FK_SIR_105_PARTES_CARACTERISTICAS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir105PartesCaracteristica> SIR_Sir105PartesCaracteristica { get; set; } // SIR_105_PARTES_CARACTERISTICAS.FK_SIR_105_PARTES_CARACTERISTICAS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir11FacturasPartida where [SIR_11_FACTURAS_PARTIDAS].[nIdParte99] point to this entity (FK_SIR_11_FACTURAS_PARTIDAS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir11FacturasPartida> SIR_Sir11FacturasPartida { get; set; } // SIR_11_FACTURAS_PARTIDAS.FK_SIR_11_FACTURAS_PARTIDAS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir353FraccionesAmericana where [SIR_353_FRACCIONES_AMERICANAS].[nIdParte99] point to this entity (FK_SIR_353_FRACCIONES_AMERICANAS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir353FraccionesAmericana> SIR_Sir353FraccionesAmericana { get; set; } // SIR_353_FRACCIONES_AMERICANAS.FK_SIR_353_FRACCIONES_AMERICANAS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir413HistoricoParte where [SIR_413_HISTORICO_PARTE].[nIdParte99] point to this entity (FK_SIR_413_HISTORICO_PARTE_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir413HistoricoParte> SIR_Sir413HistoricoParte { get; set; } // SIR_413_HISTORICO_PARTE.FK_SIR_413_HISTORICO_PARTE_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir415DocumentosParte where [SIR_415_DOCUMENTOS_PARTE].[nIdParte99] point to this entity (FK_SIR_415_DOCUMENTOS_PARTE_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir415DocumentosParte> SIR_Sir415DocumentosParte { get; set; } // SIR_415_DOCUMENTOS_PARTE.FK_SIR_415_DOCUMENTOS_PARTE_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir445PartesDescripcionesIdioma where [SIR_445_PARTES_DESCRIPCIONES_IDIOMAS].[nIdParte99] point to this entity (FK_SIR_445_PARTES_DESCRIPCIONES_IDIOMAS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir445PartesDescripcionesIdioma> SIR_Sir445PartesDescripcionesIdioma { get; set; } // SIR_445_PARTES_DESCRIPCIONES_IDIOMAS.FK_SIR_445_PARTES_DESCRIPCIONES_IDIOMAS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir460PartesDescripcionExotico where [SIR_460_PARTES_DESCRIPCION_EXOTICOS].[nIdParte99] point to this entity (FK_SIR_460_PARTES_DESCRIPCION_EXOTICOS_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir460PartesDescripcionExotico> SIR_Sir460PartesDescripcionExotico { get; set; } // SIR_460_PARTES_DESCRIPCION_EXOTICOS.FK_SIR_460_PARTES_DESCRIPCION_EXOTICOS_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir577PartidasAvisoArribo where [SIR_577_PARTIDAS_AVISO_ARRIBO].[nIdParte99] point to this entity (FK_SIR_577_PARTIDAS_AVISO_ARRIBO_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir577PartidasAvisoArribo> SIR_Sir577PartidasAvisoArribo { get; set; } // SIR_577_PARTIDAS_AVISO_ARRIBO.FK_SIR_577_PARTIDAS_AVISO_ARRIBO_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir66CargaSuelta where [SIR_66_CARGA_SUELTA].[nIdParte99] point to this entity (FK_SIR_66_CARGA_SUELTA_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir66CargaSuelta> SIR_Sir66CargaSuelta { get; set; } // SIR_66_CARGA_SUELTA.FK_SIR_66_CARGA_SUELTA_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir728PartePermisoAduana where [SIR_728_PARTE_PERMISO_ADUANA].[nIdParte99] point to this entity (FK_SIR_728_PARTE_PERMISO_ADUANA_SIR_99_PARTES)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir728PartePermisoAduana> SIR_Sir728PartePermisoAduana { get; set; } // SIR_728_PARTE_PERMISO_ADUANA.FK_SIR_728_PARTE_PERMISO_ADUANA_SIR_99_PARTES
        /// <summary>
        /// Child SIR_Sir99Parte where [SIR_99_PARTES].[nIdPartePadre99] point to this entity (FK_SIR_99_PARTES_SIR_99_PARTES_nIdPartePadre99)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir99Parte> SIR_Sir99Parte2 { get; set; } // SIR_99_PARTES.FK_SIR_99_PARTES_SIR_99_PARTES_nIdPartePadre99

        // Foreign keys

        /// <summary>
        /// Parent Admin_Adminc07Cliente pointed by [SIR_99_PARTES].([NIdClie07]) (FK_SIR_99_PARTES_ADMINC_07_CLIENTES)
        /// </summary>
        public virtual Admin_Adminc07Cliente Admin_Adminc07Cliente { get; set; } // FK_SIR_99_PARTES_ADMINC_07_CLIENTES

        /// <summary>
        /// Parent CatCliente pointed by [SIR_99_PARTES].([NIdCliente]) (FK_SIR_99_PARTES_cat_clientes)
        /// </summary>
        public virtual CatCliente CatCliente { get; set; } // FK_SIR_99_PARTES_cat_clientes

        /// <summary>
        /// Parent CatUsr pointed by [SIR_99_PARTES].([NIdUsuarioEd]) (FK_SIR_99_PARTES_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_99_PARTES_cat_usr_ed

        /// <summary>
        /// Parent SIR_Sir01Pais pointed by [SIR_99_PARTES].([NIdPaisCompVend01]) (FK_SIR_99_PARTES_SIR_01_PAISES1)
        /// </summary>
        public virtual SIR_Sir01Pais SIR_Sir01Pais_NIdPaisCompVend01 { get; set; } // FK_SIR_99_PARTES_SIR_01_PAISES1

        /// <summary>
        /// Parent SIR_Sir01Pais pointed by [SIR_99_PARTES].([NIdPaisOriDest01]) (FK_SIR_99_PARTES_SIR_01_PAISES)
        /// </summary>
        public virtual SIR_Sir01Pais SIR_Sir01Pais_NIdPaisOriDest01 { get; set; } // FK_SIR_99_PARTES_SIR_01_PAISES

        /// <summary>
        /// Parent SIR_Sir101MetodosValoracion pointed by [SIR_99_PARTES].([NIdMetodoVal101]) (FK_SIR_99_PARTES_SIR_101_METODOS_VALORACION)
        /// </summary>
        public virtual SIR_Sir101MetodosValoracion SIR_Sir101MetodosValoracion { get; set; } // FK_SIR_99_PARTES_SIR_101_METODOS_VALORACION

        /// <summary>
        /// Parent SIR_Sir10UnidadesMedida pointed by [SIR_99_PARTES].([NIdUmc10]) (FK_SIR_99_PARTES_SIR_10_UNIDADES_MEDIDA)
        /// </summary>
        public virtual SIR_Sir10UnidadesMedida SIR_Sir10UnidadesMedida_NIdUmc10 { get; set; } // FK_SIR_99_PARTES_SIR_10_UNIDADES_MEDIDA

        /// <summary>
        /// Parent SIR_Sir10UnidadesMedida pointed by [SIR_99_PARTES].([NIdUmt10]) (FK_SIR_99_PARTES_SIR_10_UNIDADES_MEDIDA1)
        /// </summary>
        public virtual SIR_Sir10UnidadesMedida SIR_Sir10UnidadesMedida_NIdUmt10 { get; set; } // FK_SIR_99_PARTES_SIR_10_UNIDADES_MEDIDA1

        /// <summary>
        /// Parent SIR_Sir410UnidadesMedidaCove pointed by [SIR_99_PARTES].([NIdUmcove410]) (FK_SIR_99_PARTES_SIR_410_UNIDADES_MEDIDA_COVE)
        /// </summary>
        public virtual SIR_Sir410UnidadesMedidaCove SIR_Sir410UnidadesMedidaCove { get; set; } // FK_SIR_99_PARTES_SIR_410_UNIDADES_MEDIDA_COVE

        /// <summary>
        /// Parent SIR_Sir412MotivosModificacionParte pointed by [SIR_99_PARTES].([NIdMotivosPartes412]) (FK_SIR_99_PARTES_SIR_412_MOTIVOS_MODIFICACION_PARTES)
        /// </summary>
        public virtual SIR_Sir412MotivosModificacionParte SIR_Sir412MotivosModificacionParte { get; set; } // FK_SIR_99_PARTES_SIR_412_MOTIVOS_MODIFICACION_PARTES

        /// <summary>
        /// Parent SIR_Sir42Proveedore pointed by [SIR_99_PARTES].([NIdProveedor42]) (FK_SIR_99_PARTES_SIR_42_PROVEEDORES)
        /// </summary>
        public virtual SIR_Sir42Proveedore SIR_Sir42Proveedore { get; set; } // FK_SIR_99_PARTES_SIR_42_PROVEEDORES

        /// <summary>
        /// Parent SIR_Sir685FraccionesDesdoblamiento pointed by [SIR_99_PARTES].([NIdFraccDesd685]) (FK_SIR_99_PARTES_SIR_685_ FRACCIONES_DESDOBLAMIENTO)
        /// </summary>
        public virtual SIR_Sir685FraccionesDesdoblamiento SIR_Sir685FraccionesDesdoblamiento { get; set; } // FK_SIR_99_PARTES_SIR_685_ FRACCIONES_DESDOBLAMIENTO

        /// <summary>
        /// Parent SIR_Sir785UnidadesMedidaFactura pointed by [SIR_99_PARTES].([NIdUMedFactura785]) (FK_SIR_99_PARTES_SIR_785_UNIDAD_MEDIDA_FACTURA)
        /// </summary>
        public virtual SIR_Sir785UnidadesMedidaFactura SIR_Sir785UnidadesMedidaFactura { get; set; } // FK_SIR_99_PARTES_SIR_785_UNIDAD_MEDIDA_FACTURA

        /// <summary>
        /// Parent SIR_Sir99Parte pointed by [SIR_99_PARTES].([NIdPartePadre99]) (FK_SIR_99_PARTES_SIR_99_PARTES_nIdPartePadre99)
        /// </summary>
        public virtual SIR_Sir99Parte SIR_Sir99Parte1 { get; set; } // FK_SIR_99_PARTES_SIR_99_PARTES_nIdPartePadre99

        public SIR_Sir99Parte()
        {
            BAplicaTlc = false;
            BAplicaAladi = false;
            NTipoArancel = 1;
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            BCertificadoOrigen = false;
            BConUniformes = false;
            SIR_Sir100FacPartAgrupada = new System.Collections.Generic.List<SIR_Sir100FacPartAgrupada>();
            SIR_Sir102PartesImpuesto = new System.Collections.Generic.List<SIR_Sir102PartesImpuesto>();
            SIR_Sir103PartesIdentificadore = new System.Collections.Generic.List<SIR_Sir103PartesIdentificadore>();
            SIR_Sir105PartesCaracteristica = new System.Collections.Generic.List<SIR_Sir105PartesCaracteristica>();
            SIR_Sir11FacturasPartida = new System.Collections.Generic.List<SIR_Sir11FacturasPartida>();
            SIR_Sir353FraccionesAmericana = new System.Collections.Generic.List<SIR_Sir353FraccionesAmericana>();
            SIR_Sir413HistoricoParte = new System.Collections.Generic.List<SIR_Sir413HistoricoParte>();
            SIR_Sir415DocumentosParte = new System.Collections.Generic.List<SIR_Sir415DocumentosParte>();
            SIR_Sir445PartesDescripcionesIdioma = new System.Collections.Generic.List<SIR_Sir445PartesDescripcionesIdioma>();
            SIR_Sir460PartesDescripcionExotico = new System.Collections.Generic.List<SIR_Sir460PartesDescripcionExotico>();
            SIR_Sir577PartidasAvisoArribo = new System.Collections.Generic.List<SIR_Sir577PartidasAvisoArribo>();
            SIR_Sir66CargaSuelta = new System.Collections.Generic.List<SIR_Sir66CargaSuelta>();
            SIR_Sir728PartePermisoAduana = new System.Collections.Generic.List<SIR_Sir728PartePermisoAduana>();
            SIR_Sir99Parte2 = new System.Collections.Generic.List<SIR_Sir99Parte>();
            CatClientes = new System.Collections.Generic.List<CatCliente>();
        }
    }

}
// </auto-generated>
