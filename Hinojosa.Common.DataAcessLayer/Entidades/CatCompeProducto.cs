// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_compe_productos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatCompeProducto
    {
        [Required]
        [Display(Name = "Id compe")]
        public int IdCompe { get; set; } // id_compe (Primary key)

        [Required]
        [Display(Name = "Id prod")]
        public int IdProd { get; set; } // id_Prod (Primary key)

        [Display(Name = "Id prod 1 g")]
        public int? IdProd1G { get; set; } // id_Prod_1G

        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Nombre")]
        public string Nombre { get; set; } // nombre (length: 150)

        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Nombre corto")]
        public string NombreCorto { get; set; } // nombre_corto (length: 150)

        [Display(Name = "Id mda")]
        public int? IdMda { get; set; } // id_mda

        [Display(Name = "Id udm")]
        public int? IdUdm { get; set; } // id_udm

        [Display(Name = "Id udm vta")]
        public int? IdUdmVta { get; set; } // id_udm_vta

        [Display(Name = "Status")]
        public byte? Status { get; set; } // status

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // Fec_reg (Primary key)

        [Display(Name = "Cantidad")]
        public double? Cantidad { get; set; } // cantidad

        [Display(Name = "Precio")]
        public double? Precio { get; set; } // precio

        [Display(Name = "Id udm dest")]
        public int? IdUdmDest { get; set; } // id_udm_dest

        [Display(Name = "Importe")]
        public double? Importe { get; set; } // importe
    }

}
// </auto-generated>
