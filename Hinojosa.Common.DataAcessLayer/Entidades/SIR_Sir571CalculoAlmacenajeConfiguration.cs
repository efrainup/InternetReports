// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_571_CALCULO_ALMACENAJE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir571CalculoAlmacenajeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir571CalculoAlmacenaje>
    {
        public SIR_Sir571CalculoAlmacenajeConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir571CalculoAlmacenajeConfiguration(string schema)
        {
            ToTable("SIR_571_CALCULO_ALMACENAJE", schema);
            HasKey(x => x.NIdCalculoAlmacenaje571);

            Property(x => x.NIdCalculoAlmacenaje571).HasColumnName(@"nIdCalculoAlmacenaje571").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SFolio).HasColumnName(@"sFolio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsRequired();
            Property(x => x.NIdTerminal).HasColumnName(@"nIdTerminal").HasColumnType("int").IsRequired();
            Property(x => x.NPesoContenedor).HasColumnName(@"nPesoContenedor").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NTara).HasColumnName(@"nTara").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NPesoTotal).HasColumnName(@"nPesoTotal").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.DEntrada).HasColumnName(@"dEntrada").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DPago).HasColumnName(@"dPago").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SMarcas).HasColumnName(@"sMarcas").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3000);
            Property(x => x.NTipoDeCarga).HasColumnName(@"nTipoDeCarga").HasColumnType("tinyint").IsOptional();
            Property(x => x.NVolumen).HasColumnName(@"nVolumen").HasColumnType("tinyint").IsOptional();
            Property(x => x.NUbicacion).HasColumnName(@"nUbicacion").HasColumnType("tinyint").IsOptional();
            Property(x => x.NMercancia).HasColumnName(@"nMercancia").HasColumnType("tinyint").IsOptional();
            Property(x => x.BRejasEspeciales).HasColumnName(@"bRejasEspeciales").HasColumnType("bit").IsOptional();
            Property(x => x.BPagoAdicionalAlfolio).HasColumnName(@"bPagoAdicionalAlfolio").HasColumnType("bit").IsOptional();
            Property(x => x.SPagoAdicionalAlFolio).HasColumnName(@"sPagoAdicionalAlFolio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.DPagoAdicionalAlFolio).HasColumnName(@"dPagoAdicionalAlFolio").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NSubtotal).HasColumnName(@"nSubtotal").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NIva).HasColumnName(@"nIva").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NTotal).HasColumnName(@"nTotal").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NPesoSobreKilogramo).HasColumnName(@"nPesoSobreKilogramo").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NPlazo).HasColumnName(@"nPlazo").HasColumnType("tinyint").IsOptional();
            Property(x => x.NDiasLibres).HasColumnName(@"nDiasLibres").HasColumnType("smallint").IsOptional();
            Property(x => x.DTeminoDiasLibres).HasColumnName(@"dTeminoDiasLibres").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BDatosDeLaAgencia).HasColumnName(@"bDatosDeLaAgencia").HasColumnType("bit").IsOptional();
            Property(x => x.BDatosDelImex).HasColumnName(@"bDatosDelImex").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasRequired(a => a.CatProv).WithMany(b => b.SIR_Sir571CalculoAlmacenaje).HasForeignKey(c => c.NIdTerminal).WillCascadeOnDelete(false); // FK_SIR_571_CALCULO_ALMACENAJE_cat_prov
            HasRequired(a => a.SIR_Sir60Referencia).WithMany(b => b.SIR_Sir571CalculoAlmacenaje).HasForeignKey(c => c.NIdReferencia60).WillCascadeOnDelete(false); // FK_SIR_571_CALCULO_ALMACENAJE_SIR_60_REFERENCIAS
            HasMany(t => t.SIR_Sir76Contenedore).WithMany(t => t.SIR_Sir571CalculoAlmacenaje).Map(m =>
            {
                m.ToTable("SIR_573_CALCULO_ALMACENAJE_CONTENEDORES", "SIR");
                m.MapLeftKey("nIdCalculoAlmacenaje571");
                m.MapRightKey("nIdContenedor76");
            });
        }
    }

}
// </auto-generated>
