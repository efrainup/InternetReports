// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_379_FACTURAS_PENDIENTES_HONDA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir379FacturasPendientesHondaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir379FacturasPendientesHonda>
    {
        public SIR_Sir379FacturasPendientesHondaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir379FacturasPendientesHondaConfiguration(string schema)
        {
            ToTable("SIR_379_FACTURAS_PENDIENTES_HONDA", schema);
            HasKey(x => x.NIdFacturaPendiente379);

            Property(x => x.NIdFacturaPendiente379).HasColumnName(@"nIdFacturaPendiente379").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SContador).HasColumnName(@"sContador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SOper).HasColumnName(@"sOper").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SClavePed).HasColumnName(@"sClavePed").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.SFactura).HasColumnName(@"sFactura").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SFecha).HasColumnName(@"sFecha").HasColumnType("datetime").IsOptional();
            Property(x => x.SCveMoneda).HasColumnName(@"sCveMoneda").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SCveIncoterm).HasColumnName(@"sCveIncoterm").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.NPesoBruto).HasColumnName(@"nPesoBruto").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.SCajas).HasColumnName(@"sCajas").HasColumnType("int").IsOptional();
            Property(x => x.NPiezas).HasColumnName(@"nPiezas").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NPallets).HasColumnName(@"nPallets").HasColumnType("int").IsOptional();
            Property(x => x.SCveDestino).HasColumnName(@"sCveDestino").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SModoTransp).HasColumnName(@"sModoTransp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SLineaTransp).HasColumnName(@"sLineaTransp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.DFechaEta).HasColumnName(@"dFechaETA").HasColumnType("datetime").IsOptional();
            Property(x => x.SBl).HasColumnName(@"sBL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.NFlete).HasColumnName(@"nFlete").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NGastos).HasColumnName(@"nGastos").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NSeguros).HasColumnName(@"nSeguros").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.SCodVendedor).HasColumnName(@"sCodVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SNombreVendedor).HasColumnName(@"sNombreVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SRfcVendedor).HasColumnName(@"sRFCVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SCurpVendedor).HasColumnName(@"sCURPVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SDireccVendedor).HasColumnName(@"sDireccVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SCiudadVendedor).HasColumnName(@"sCiudadVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SEstadoVendedor).HasColumnName(@"sEstadoVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.SCpVendedor).HasColumnName(@"sCPVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.SPaisVendedor).HasColumnName(@"sPaisVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.STelVendedor).HasColumnName(@"sTelVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.SFaxVendedor).HasColumnName(@"sFaxVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.SCodComprador).HasColumnName(@"sCodComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SNombreComprador).HasColumnName(@"sNombreComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SRfcComprador).HasColumnName(@"sRFCComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SCurpComprador).HasColumnName(@"sCURPComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SDireccComprador).HasColumnName(@"sDireccComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(35);
            Property(x => x.SCiudadComprador).HasColumnName(@"sCiudadComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SEstadoComprador).HasColumnName(@"sEstadoComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SCpComprador).HasColumnName(@"sCPComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.SPaisComprador).HasColumnName(@"sPaisComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.STelComprador).HasColumnName(@"sTelComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.SFaxComprador).HasColumnName(@"sFaxComprador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.DFechaEmbarque).HasColumnName(@"dFechaEmbarque").HasColumnType("datetime").IsOptional();
            Property(x => x.NValorDolares).HasColumnName(@"nValorDolares").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.SNumContenedor).HasColumnName(@"sNumContenedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.SReferenciaAgente).HasColumnName(@"sReferenciaAgente").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SConsecutivoRef).HasColumnName(@"sConsecutivoRef").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.SVersionFicha).HasColumnName(@"sVersionFicha").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.NTipoPedimento).HasColumnName(@"nTipoPedimento").HasColumnType("tinyint").IsOptional();
        }
    }

}
// </auto-generated>
