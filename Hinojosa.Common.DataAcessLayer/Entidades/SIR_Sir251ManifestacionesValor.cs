// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_251_MANIFESTACIONES_VALOR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir251ManifestacionesValor
    {
        [Required]
        [Display(Name = "N ID man valor 251")]
        public int NIdManValor251 { get; set; } // nIdManValor251 (Primary key)

        [Required]
        [Display(Name = "N ID referencia 60")]
        public int NIdReferencia60 { get; set; } // nIdReferencia60

        [Display(Name = "N transaccion")]
        public byte? NTransaccion { get; set; } // nTransaccion

        [Display(Name = "N valido por")]
        public byte? NValidoPor { get; set; } // nValidoPor

        [Display(Name = "B compra venta")]
        public bool? BCompraVenta { get; set; } // bCompraVenta

        [Display(Name = "B restricciones")]
        public bool? BRestricciones { get; set; } // bRestricciones

        [Display(Name = "B contra prestaciones")]
        public bool? BContraPrestaciones { get; set; } // bContraPrestaciones

        [Display(Name = "B regalias reversiones")]
        public bool? BRegaliasReversiones { get; set; } // bRegaliasReversiones

        [Display(Name = "B mas pedimentos")]
        public bool? BMasPedimentos { get; set; } // bMasPedimentos

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S observaciones")]
        public string SObservaciones { get; set; } // sObservaciones (length: 500)

        [Display(Name = "N otros ped des")]
        public decimal? NOtrosPedDes { get; set; } // nOtrosPedDes

        [Display(Name = "N comisiones des")]
        public decimal? NComisionesDes { get; set; } // nComisionesDes

        [Display(Name = "N flestes des")]
        public decimal? NFlestesDes { get; set; } // nFlestesDes

        [Display(Name = "N carga descarga des")]
        public decimal? NCargaDescargaDes { get; set; } // nCargaDescargaDes

        [Display(Name = "N material")]
        public decimal? NMaterial { get; set; } // nMaterial

        [Display(Name = "N tecnologia des")]
        public decimal? NTecnologiaDes { get; set; } // nTecnologiaDes

        [Display(Name = "N regalias des")]
        public decimal? NRegaliasDes { get; set; } // nRegaliasDes

        [Display(Name = "N reversiones des")]
        public decimal? NReversionesDes { get; set; } // nReversionesDes

        [Display(Name = "N total desglose")]
        public decimal? NTotalDesglose { get; set; } // nTotalDesglose

        [Display(Name = "N no relacionados div")]
        public decimal? NNoRelacionadosDiv { get; set; } // nNoRelacionadosDiv

        [Display(Name = "N fletes div")]
        public decimal? NFletesDiv { get; set; } // nFletesDiv

        [Display(Name = "N const div")]
        public decimal? NConstDiv { get; set; } // nConstDiv

        [Display(Name = "N armado div")]
        public decimal? NArmadoDiv { get; set; } // nArmadoDiv

        [Display(Name = "N dividendo div")]
        public decimal? NDividendoDiv { get; set; } // nDividendoDiv

        [Display(Name = "N total diversos")]
        public decimal? NTotalDiversos { get; set; } // nTotalDiversos

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Display(Name = "N contribuciones")]
        public decimal? NContribuciones { get; set; } // nContribuciones

        [Required]
        [Display(Name = "D fecha")]
        public System.DateTime DFecha { get; set; } // dFecha

        [Display(Name = "N ID cli rep 309")]
        public int? NIdCliRep309 { get; set; } // nIdCliRep309

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S ciudad tetra pak")]
        public string SCiudadTetraPak { get; set; } // sCiudadTetraPak (length: 100)

        [Display(Name = "N ID incoterm 53")]
        public int? NIdIncoterm53 { get; set; } // nIdIncoterm53

        [Required]
        [Display(Name = "N tratado")]
        public byte NTratado { get; set; } // nTratado

        [Required]
        [Display(Name = "B aplica tetra pak")]
        public bool BAplicaTetraPak { get; set; } // bAplicaTetraPak

        [Display(Name = "B es precio previsto fac")]
        public bool? BEsPrecioPrevistoFac { get; set; } // bEsPrecioPrevistoFac

        [Display(Name = "B es precio otros doctos")]
        public bool? BEsPrecioOtrosDoctos { get; set; } // bEsPrecioOtrosDoctos

        [Display(Name = "B existen con no valor trans")]
        public bool? BExistenConNoValorTrans { get; set; } // bExistenConNoValorTrans

        [Display(Name = "B conceptos desglosados")]
        public bool? BConceptosDesglosados { get; set; } // bConceptosDesglosados

        [Display(Name = "B anexa documentacion mv")]
        public bool? BAnexaDocumentacionMv { get; set; } // bAnexaDocumentacionMV

        [Display(Name = "B no anexa documentacion mv")]
        public bool? BNoAnexaDocumentacionMv { get; set; } // bNoAnexaDocumentacionMV

        [Display(Name = "N importe prec pagado")]
        public byte? NImportePrecPagado { get; set; } // nImportePrecPagado

        [Display(Name = "N opta facturas")]
        public byte? NOptaFacturas { get; set; } // nOptaFacturas

        [Display(Name = "N opta doctos valor aduana")]
        public byte? NOptaDoctosValorAduana { get; set; } // nOptaDoctosValorAduana

        [Display(Name = "N merc regimen impo temporal")]
        public byte? NMercRegimenImpoTemporal { get; set; } // nMercRegimenImpoTemporal

        [Display(Name = "N valor mcias provicional")]
        public byte? NValorMciasProvicional { get; set; } // nValorMciasProvicional

        [Display(Name = "N doc consta valor mcia")]
        public byte? NDocConstaValorMcia { get; set; } // nDocConstaValorMcia

        [Display(Name = "B hcusd")]
        public bool? BHcusd { get; set; } // bHCUSD

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) SIR_Sir251ManifestacionesValor pointed by [SIR_351_METODOS_MANIFESTACION].[nIdManValor251] (FK_SIR_351_METODOS_MANIFESTACION_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual SIR_Sir351MetodosManifestacion SIR_Sir351MetodosManifestacion { get; set; } // SIR_351_METODOS_MANIFESTACION.FK_SIR_351_METODOS_MANIFESTACION_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir255DetalleManifestacion where [SIR_255_DETALLE_MANIFESTACION].[nIdManValor251] point to this entity (FK_SIR_255_DETALLE_MANIFESTACION_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir255DetalleManifestacion> SIR_Sir255DetalleManifestacion { get; set; } // SIR_255_DETALLE_MANIFESTACION.FK_SIR_255_DETALLE_MANIFESTACION_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir374RelacionDoctosAnexadosMv where [SIR_374_RELACION_DOCTOS_ANEXADOS_MV].[nIdManValor251] point to this entity (FK_SIR_374_RELACION_DOCTOS_ANEXADOS_MV_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir374RelacionDoctosAnexadosMv> SIR_Sir374RelacionDoctosAnexadosMv { get; set; } // SIR_374_RELACION_DOCTOS_ANEXADOS_MV.FK_SIR_374_RELACION_DOCTOS_ANEXADOS_MV_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir375ConceptosArticulo66 where [SIR_375_CONCEPTOS_ARTICULO66].[nIdManValor251] point to this entity (FK_SIR_375_CONCEPTOS_ARTICULO66_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir375ConceptosArticulo66> SIR_Sir375ConceptosArticulo66 { get; set; } // SIR_375_CONCEPTOS_ARTICULO66.FK_SIR_375_CONCEPTOS_ARTICULO66_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir376ValorDeterminado where [SIR_376_VALOR_DETERMINADO].[nIdManValor251] point to this entity (FK_SIR_376_VALOR_DETERMINADO_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir376ValorDeterminado> SIR_Sir376ValorDeterminado { get; set; } // SIR_376_VALOR_DETERMINADO.FK_SIR_376_VALOR_DETERMINADO_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir377DocumentosAnexado where [SIR_377_DOCUMENTOS_ANEXADOS].[nIdManValor251] point to this entity (FK_SIR_377_DOCUMENTOS_ANEXADOS_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir377DocumentosAnexado> SIR_Sir377DocumentosAnexado { get; set; } // SIR_377_DOCUMENTOS_ANEXADOS.FK_SIR_377_DOCUMENTOS_ANEXADOS_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir378ValorProvisional where [SIR_378_VALOR_PROVISIONAL].[nIdManValor251] point to this entity (FK_SIR_378_VALOR_PROVISIONAL_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir378ValorProvisional> SIR_Sir378ValorProvisional { get; set; } // SIR_378_VALOR_PROVISIONAL.FK_SIR_378_VALOR_PROVISIONAL_SIR_251_MANIFESTACIONES_VALOR
        /// <summary>
        /// Child SIR_Sir392FraccionesProveeMv where [SIR_392_FRACCIONES_PROVEE_MV].[nIdManValor251] point to this entity (FK_SIR_392_FRACCIONES_PROVEE_MV_SIR_251_MANIFESTACIONES_VALOR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir392FraccionesProveeMv> SIR_Sir392FraccionesProveeMv { get; set; } // SIR_392_FRACCIONES_PROVEE_MV.FK_SIR_392_FRACCIONES_PROVEE_MV_SIR_251_MANIFESTACIONES_VALOR

        // Foreign keys

        /// <summary>
        /// Parent CatUsr pointed by [SIR_251_MANIFESTACIONES_VALOR].([NIdUsuarioEd]) (FK_SIR_251_MANIFESTACIONES_VALOR_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_251_MANIFESTACIONES_VALOR_cat_usr_ed

        /// <summary>
        /// Parent SIR_Sir309ClientesRepresentante pointed by [SIR_251_MANIFESTACIONES_VALOR].([NIdCliRep309]) (FK_SIR_251_MANIFESTACIONES_VALOR_SIR_309_CLIENTES_REPRESENTANTES)
        /// </summary>
        public virtual SIR_Sir309ClientesRepresentante SIR_Sir309ClientesRepresentante { get; set; } // FK_SIR_251_MANIFESTACIONES_VALOR_SIR_309_CLIENTES_REPRESENTANTES

        /// <summary>
        /// Parent SIR_Sir53Incoterm pointed by [SIR_251_MANIFESTACIONES_VALOR].([NIdIncoterm53]) (FK_SIR_251_MANIFESTACIONES_VALOR_SIR_53_INCOTERMS)
        /// </summary>
        public virtual SIR_Sir53Incoterm SIR_Sir53Incoterm { get; set; } // FK_SIR_251_MANIFESTACIONES_VALOR_SIR_53_INCOTERMS

        /// <summary>
        /// Parent SIR_Sir60Referencia pointed by [SIR_251_MANIFESTACIONES_VALOR].([NIdReferencia60]) (FK_SIR_251_MANIFESTACIONES_VALOR_SIR_60_REFERENCIAS)
        /// </summary>
        public virtual SIR_Sir60Referencia SIR_Sir60Referencia { get; set; } // FK_SIR_251_MANIFESTACIONES_VALOR_SIR_60_REFERENCIAS

        public SIR_Sir251ManifestacionesValor()
        {
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            NTratado = 0;
            BAplicaTetraPak = false;
            BEsPrecioPrevistoFac = false;
            BEsPrecioOtrosDoctos = false;
            BExistenConNoValorTrans = false;
            BConceptosDesglosados = false;
            BAnexaDocumentacionMv = false;
            BNoAnexaDocumentacionMv = false;
            SIR_Sir255DetalleManifestacion = new System.Collections.Generic.List<SIR_Sir255DetalleManifestacion>();
            SIR_Sir374RelacionDoctosAnexadosMv = new System.Collections.Generic.List<SIR_Sir374RelacionDoctosAnexadosMv>();
            SIR_Sir375ConceptosArticulo66 = new System.Collections.Generic.List<SIR_Sir375ConceptosArticulo66>();
            SIR_Sir376ValorDeterminado = new System.Collections.Generic.List<SIR_Sir376ValorDeterminado>();
            SIR_Sir377DocumentosAnexado = new System.Collections.Generic.List<SIR_Sir377DocumentosAnexado>();
            SIR_Sir378ValorProvisional = new System.Collections.Generic.List<SIR_Sir378ValorProvisional>();
            SIR_Sir392FraccionesProveeMv = new System.Collections.Generic.List<SIR_Sir392FraccionesProveeMv>();
        }
    }

}
// </auto-generated>
