// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_523_REGULARIZACIONES_RECTIFICACION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir523RegularizacionesRectificacion
    {
        [Required]
        [Display(Name = "N ID pedimento 149")]
        public int NIdPedimento149 { get; set; } // nIdPedimento149 (Primary key)

        [Required]
        [Display(Name = "N area")]
        public byte NArea { get; set; } // nArea

        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "S area resposable")]
        public string SAreaResposable { get; set; } // sAreaResposable (length: 300)

        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "S responsable")]
        public string SResponsable { get; set; } // sResponsable (length: 800)

        [Display(Name = "N monto por fh")]
        public decimal? NMontoPorFh { get; set; } // nMontoPorFH

        [Display(Name = "N monto por cliente")]
        public decimal? NMontoPorCliente { get; set; } // nMontoPorCliente

        [Display(Name = "N monto por otros")]
        public decimal? NMontoPorOtros { get; set; } // nMontoPorOtros

        [MaxLength(3000)]
        [StringLength(3000)]
        [Display(Name = "S observacion")]
        public string SObservacion { get; set; } // sObservacion (length: 3000)

        [Display(Name = "B fh honorario")]
        public bool? BFhHonorario { get; set; } // bFhHonorario

        [Display(Name = "B fh impuesto")]
        public bool? BFhImpuesto { get; set; } // bFhImpuesto

        [Display(Name = "B cte honorario")]
        public bool? BCteHonorario { get; set; } // bCteHonorario

        [Display(Name = "B cte impuesto")]
        public bool? BCteImpuesto { get; set; } // bCteImpuesto

        [Display(Name = "B otro honorario")]
        public bool? BOtroHonorario { get; set; } // bOtroHonorario

        [Display(Name = "B otro impuesto")]
        public bool? BOtroImpuesto { get; set; } // bOtroImpuesto

        // Foreign keys

        /// <summary>
        /// Parent SIR_Sir149Pedimento pointed by [SIR_523_REGULARIZACIONES_RECTIFICACION].([NIdPedimento149]) (FK_SIR_523_REGULARIZACIONES_RECTIFICACION_SIR_149_PEDIMENTO)
        /// </summary>
        public virtual SIR_Sir149Pedimento SIR_Sir149Pedimento { get; set; } // FK_SIR_523_REGULARIZACIONES_RECTIFICACION_SIR_149_PEDIMENTO
    }

}
// </auto-generated>
