// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // The table 'tbl_ped_de_proceda' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // tbl_ped_de_proceda
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TblPedDeProceda
    {
        [Display(Name = "N patente")]
        public int? NPatente { get; set; } // nPatente

        [Display(Name = "S agente aduanal")]
        public string SAgenteAduanal { get; set; } // sAgenteAduanal

        [Display(Name = "S rfc im ex")]
        public string SRfcImEx { get; set; } // sRfcImEx

        [Display(Name = "S razon sociallm ex")]
        public string SRazonSociallmEx { get; set; } // sRazonSociallmEx

        [Display(Name = "N ID pedimento")]
        public int? NIdPedimento { get; set; } // nIdPedimento

        [Display(Name = "N pedimento")]
        public int? NPedimento { get; set; } // nPedimento

        [Display(Name = "S estatus val")]
        public string SEstatusVal { get; set; } // sEstatusVal

        [Display(Name = "S tipo pago")]
        public string STipoPago { get; set; } // sTipoPago

        [Display(Name = "N tipo pago")]
        public int? NTipoPago { get; set; } // nTipoPago

        [Display(Name = "S operacion")]
        public string SOperacion { get; set; } // sOperacion

        [Display(Name = "S clave doc")]
        public string SClaveDoc { get; set; } // sClaveDoc

        [Display(Name = "N aduana seccion")]
        public int? NAduanaSeccion { get; set; } // nAduanaSeccion

        [Display(Name = "N valor aduanal comercial")]
        public double? NValorAduanalComercial { get; set; } // nValorAduanalComercial

        [Display(Name = "N impuesto efectivo")]
        public double? NImpuestoEfectivo { get; set; } // nImpuestoEfectivo

        [Display(Name = "N impuesto no efectivo")]
        public double? NImpuestoNoEfectivo { get; set; } // nImpuestoNoEfectivo

        [Display(Name = "N preval")]
        public int? NPreval { get; set; } // nPreval

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha entrada presentacion")]
        public System.DateTime? DFechaEntradaPresentacion { get; set; } // dFechaEntradaPresentacion

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha pago")]
        public System.DateTime? DFechaPago { get; set; } // dFechaPago

        [Display(Name = "N anio sem jul")]
        public int? NAnioSemJul { get; set; } // nAnioSemJul

        [Display(Name = "S nombre archivo m 3")]
        public string SNombreArchivoM3 { get; set; } // sNombreArchivoM3
    }

}
// </auto-generated>
