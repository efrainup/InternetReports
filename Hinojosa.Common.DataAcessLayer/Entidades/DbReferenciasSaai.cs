// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // DB_Referencias_Saai
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DbReferenciasSaai
    {
        [Display(Name = "N ID referencia")]
        public int? NIdReferencia { get; set; } // nIdReferencia

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "S referencia")]
        public string SReferencia { get; set; } // sReferencia (Primary key) (length: 20)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "S pedimento")]
        public string SPedimento { get; set; } // sPedimento (Primary key) (length: 7)

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha pago")]
        public System.DateTime? DFechaPago { get; set; } // dFechaPago

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "S regimen")]
        public string SRegimen { get; set; } // sRegimen (length: 5)

        [Display(Name = "N tipo cambio")]
        public decimal? NTipoCambio { get; set; } // nTipoCambio

        [Display(Name = "N peso bruto")]
        public decimal? NPesoBruto { get; set; } // nPesoBruto

        [Display(Name = "N valor dolares")]
        public decimal? NValorDolares { get; set; } // nValorDolares

        [Display(Name = "N valor aduana")]
        public decimal? NValorAduana { get; set; } // nValorAduana

        [Display(Name = "N valor comercial")]
        public decimal? NValorComercial { get; set; } // nValorComercial

        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "S ref original")]
        public string SRefOriginal { get; set; } // sRefOriginal (length: 20)

        [Display(Name = "N valor seguros")]
        public decimal? NValorSeguros { get; set; } // nValorSeguros

        [Display(Name = "N seguros")]
        public decimal? NSeguros { get; set; } // nSeguros

        [Display(Name = "N fletes")]
        public decimal? NFletes { get; set; } // nFletes

        [Display(Name = "N embalajes")]
        public decimal? NEmbalajes { get; set; } // nEmbalajes

        [Display(Name = "N otros incrementables")]
        public decimal? NOtrosIncrementables { get; set; } // nOtrosIncrementables

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha ent pre")]
        public System.DateTime? DFechaEntPre { get; set; } // dFechaEntPre
    }

}
// </auto-generated>
