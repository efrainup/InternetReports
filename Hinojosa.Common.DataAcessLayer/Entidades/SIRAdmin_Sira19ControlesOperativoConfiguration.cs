// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_19_CONTROLES_OPERATIVOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira19ControlesOperativoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIRAdmin_Sira19ControlesOperativo>
    {
        public SIRAdmin_Sira19ControlesOperativoConfiguration()
            : this("SIRAdmin")
        {
        }

        public SIRAdmin_Sira19ControlesOperativoConfiguration(string schema)
        {
            ToTable("SIRA_19_CONTROLES_OPERATIVOS", schema);
            HasKey(x => x.NIdCtrlOp19);

            Property(x => x.NIdCtrlOp19).HasColumnName(@"nIdCtrlOp19").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SNombreCampo).HasColumnName(@"sNombreCampo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.SDescripcion).HasColumnName(@"sDescripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NTipo).HasColumnName(@"nTipo").HasColumnType("tinyint").IsRequired();
            Property(x => x.NTipoBase).HasColumnName(@"nTipoBase").HasColumnType("tinyint").IsRequired();
            Property(x => x.NOrigen).HasColumnName(@"nOrigen").HasColumnType("tinyint").IsRequired();
            HasMany(t => t.SisRecursoes).WithMany(t => t.SIRAdmin_Sira19ControlesOperativo).Map(m =>
            {
                m.ToTable("SIR_126_MOD_CTR_OPERATIVAS", "SIR");
                m.MapLeftKey("nIdCtrlOp19");
                m.MapRightKey("nIdModulo");
            });
        }
    }

}
// </auto-generated>
