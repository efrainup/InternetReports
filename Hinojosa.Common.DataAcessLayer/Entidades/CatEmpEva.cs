// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_emp_eva
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatEmpEva
    {
        [Required]
        [Display(Name = "Id eva")]
        public int IdEva { get; set; } // id_eva (Primary key)

        [Required]
        [Display(Name = "Id rel eva")]
        public int IdRelEva { get; set; } // id_rel_eva

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ini")]
        public System.DateTime FecIni { get; set; } // fec_ini

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ter")]
        public System.DateTime FecTer { get; set; } // fec_ter

        [Required]
        [Display(Name = "Id tip tit eva")]
        public int IdTipTitEva { get; set; } // id_tip_tit_eva

        [Required]
        [Display(Name = "Calif")]
        public double Calif { get; set; } // calif

        [Required(AllowEmptyStrings = true)]
        [MaxLength(2147483647)]
        [StringLength(2147483647)]
        [Display(Name = "Cmt")]
        public string Cmt { get; set; } // cmt (length: 2147483647)

        [Required]
        [Display(Name = "Id clas")]
        public int IdClas { get; set; } // id_clas

        [Required]
        [Display(Name = "Id per rh")]
        public int IdPerRh { get; set; } // id_per_rh

        [Required]
        [Display(Name = "Id per eva")]
        public int IdPerEva { get; set; } // id_per_eva

        [Required]
        [Display(Name = "Id nota")]
        public int IdNota { get; set; } // id_nota

        [Required]
        [Display(Name = "Status")]
        public int Status { get; set; } // status

        [Required]
        [Display(Name = "Pond")]
        public double Pond { get; set; } // pond

        [Required]
        [Display(Name = "Calif pond")]
        public double CalifPond { get; set; } // calif_pond

        public CatEmpEva()
        {
            IdEva = 0;
            IdRelEva = 0;
            IdTipTitEva = 0;
            Calif = 0;
            Cmt = "";
            IdClas = 0;
            IdPerRh = 0;
            IdPerEva = 0;
            IdNota = 0;
            Status = 1;
            Pond = 0;
            CalifPond = 0;
        }
    }

}
// </auto-generated>
