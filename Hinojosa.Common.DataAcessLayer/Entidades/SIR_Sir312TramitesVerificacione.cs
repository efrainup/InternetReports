// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_312_TRAMITES_VERIFICACIONES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir312TramitesVerificacione
    {
        [Required]
        [Display(Name = "N ID tra ver 312")]
        public int NIdTraVer312 { get; set; } // nIdTraVer312 (Primary key)

        [Required]
        [Display(Name = "N ID reg sag 228")]
        public int NIdRegSag228 { get; set; } // nIdRegSag228

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S ine")]
        public string SIne { get; set; } // sINE (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S comprobante lp")]
        public string SComprobanteLp { get; set; } // sComprobanteLP (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S comprobante trat")]
        public string SComprobanteTrat { get; set; } // sComprobanteTrat (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S folio rtv")]
        public string SFolioRtv { get; set; } // sFolioRTV (length: 50)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S otros")]
        public string SOtros { get; set; } // sOtros (length: 100)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S dictamen")]
        public string SDictamen { get; set; } // sDictamen (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S certificado origen")]
        public string SCertificadoOrigen { get; set; } // sCertificadoOrigen (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S acta circunstanciada")]
        public string SActaCircunstanciada { get; set; } // sActaCircunstanciada (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S jefe inspectoria")]
        public string SJefeInspectoria { get; set; } // sJefeInspectoria (length: 50)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S ruta")]
        public string SRuta { get; set; } // sRuta (length: 500)

        [Display(Name = "N no aviso")]
        public int? NNoAviso { get; set; } // nNoAviso

        [Display(Name = "N fianza")]
        public decimal? NFianza { get; set; } // nFianza

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S direccion")]
        public string SDireccion { get; set; } // sDireccion (length: 100)

        [Required]
        [Display(Name = "B manifiesto impo")]
        public bool BManifiestoImpo { get; set; } // bManifiestoImpo

        [Required]
        [Display(Name = "B resp civil")]
        public bool BRespCivil { get; set; } // bRespCivil

        [Required]
        [Display(Name = "B fianza")]
        public bool BFianza { get; set; } // bFianza

        [Required]
        [Display(Name = "B facturas")]
        public bool BFacturas { get; set; } // bFacturas

        [Required]
        [Display(Name = "N ID representante")]
        public int NIdRepresentante { get; set; } // nIdRepresentante

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        // Foreign keys

        /// <summary>
        /// Parent CatEmp pointed by [SIR_312_TRAMITES_VERIFICACIONES].([NIdRepresentante]) (FK_SIR_312_TRAMITES_VERIFICACIONES_cat_emp)
        /// </summary>
        public virtual CatEmp CatEmp { get; set; } // FK_SIR_312_TRAMITES_VERIFICACIONES_cat_emp

        /// <summary>
        /// Parent CatUsr pointed by [SIR_312_TRAMITES_VERIFICACIONES].([NIdUsuarioEd]) (FK_SIR_312_TRAMITES_VERIFICACIONES_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_312_TRAMITES_VERIFICACIONES_cat_usr

        /// <summary>
        /// Parent SIR_Sir228RegistrosSagarpa pointed by [SIR_312_TRAMITES_VERIFICACIONES].([NIdRegSag228]) (FK_SIR_312_TRAMITES_VERIFICACIONES_SIR_228_REGISTROS_SAGARPA)
        /// </summary>
        public virtual SIR_Sir228RegistrosSagarpa SIR_Sir228RegistrosSagarpa { get; set; } // FK_SIR_312_TRAMITES_VERIFICACIONES_SIR_228_REGISTROS_SAGARPA

        public SIR_Sir312TramitesVerificacione()
        {
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
        }
    }

}
// </auto-generated>
