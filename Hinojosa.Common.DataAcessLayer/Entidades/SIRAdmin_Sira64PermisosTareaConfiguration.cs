// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_64_PERMISOS_TAREAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira64PermisosTareaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIRAdmin_Sira64PermisosTarea>
    {
        public SIRAdmin_Sira64PermisosTareaConfiguration()
            : this("SIRAdmin")
        {
        }

        public SIRAdmin_Sira64PermisosTareaConfiguration(string schema)
        {
            ToTable("SIRA_64_PERMISOS_TAREAS", schema);
            HasKey(x => x.NIdPermisosTareas64);

            Property(x => x.NIdPermisosTareas64).HasColumnName(@"nIdPermisosTareas64").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SNombre).HasColumnName(@"sNombre").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SDescripcion).HasColumnName(@"sDescripcion").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NIdPermisoFuncion60).HasColumnName(@"nIdPermisoFuncion60").HasColumnType("int").IsRequired();
            Property(x => x.SClave).HasColumnName(@"sClave").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BDefault).HasColumnName(@"bDefault").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.SIRAdmin_Sira60PermisosFuncionesCliente).WithMany(b => b.SIRAdmin_Sira64PermisosTarea).HasForeignKey(c => c.NIdPermisoFuncion60).WillCascadeOnDelete(false); // FK_SIRA_64_PERMISOS_TAREAS_SIRA_60_PERMISOS_FUNCIONES_CLIENTE
        }
    }

}
// </auto-generated>
