// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_23_CONF_PAGO_ELECTRONICO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira23ConfPagoElectronicoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIRAdmin_Sira23ConfPagoElectronico>
    {
        public SIRAdmin_Sira23ConfPagoElectronicoConfiguration()
            : this("SIRAdmin")
        {
        }

        public SIRAdmin_Sira23ConfPagoElectronicoConfiguration(string schema)
        {
            ToTable("SIRA_23_CONF_PAGO_ELECTRONICO", schema);
            HasKey(x => x.NIdCpe23);

            Property(x => x.NIdCpe23).HasColumnName(@"nIdCPE23").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdSucursal).HasColumnName(@"nIdSucursal").HasColumnType("int").IsOptional();
            Property(x => x.SArchivoEnviar).HasColumnName(@"sArchivoEnviar").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SArchivoRecibir).HasColumnName(@"sArchivoRecibir").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NNivelSeguridad).HasColumnName(@"nNivelSeguridad").HasColumnType("tinyint").IsRequired();
            Property(x => x.NTipoConsecutivo).HasColumnName(@"nTipoConsecutivo").HasColumnType("tinyint").IsRequired();
            Property(x => x.NConsecutivo).HasColumnName(@"nConsecutivo").HasColumnType("int").IsRequired();
            Property(x => x.NTipoExtension).HasColumnName(@"nTipoExtension").HasColumnType("tinyint").IsRequired();
            Property(x => x.SLetraInicial).HasColumnName(@"sLetraInicial").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1);
            Property(x => x.SExtension).HasColumnName(@"sExtension").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.BAplicaPagoAa).HasColumnName(@"bAplicaPagoAA").HasColumnType("bit").IsRequired();
            Property(x => x.BGeneraPcreco).HasColumnName(@"bGeneraPCRECO").HasColumnType("bit").IsRequired();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.DFechaConsecutivo).HasColumnName(@"dFechaConsecutivo").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NSemanaSaai).HasColumnName(@"nSemanaSaai").HasColumnType("int").IsOptional();
            Property(x => x.BClaveAa).HasColumnName(@"bClaveAA").HasColumnType("bit").IsRequired();
            Property(x => x.BClaveMandatario).HasColumnName(@"bClaveMandatario").HasColumnType("bit").IsRequired();
            Property(x => x.BValidaPagoBanco).HasColumnName(@"bValidaPagoBanco").HasColumnType("bit").IsRequired();
            Property(x => x.NIdProducto).HasColumnName(@"nIdProducto").HasColumnType("int").IsOptional();
            Property(x => x.SRutaEcEnvio).HasColumnName(@"sRutaECEnvio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaEcRecepcion).HasColumnName(@"sRutaECRecepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaSagEnvio).HasColumnName(@"sRutaSagEnvio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaSagRecepcion).HasColumnName(@"sRutaSagRecepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaNoPedEnvio).HasColumnName(@"sRutaNoPedEnvio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaNoPedRecepcion).HasColumnName(@"sRutaNoPedRecepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SLetraInicialNoPed).HasColumnName(@"sLetraInicialNoPed").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.BSucursalNoPed).HasColumnName(@"bSucursalNoPed").HasColumnType("bit").IsRequired();
            Property(x => x.BTipoValSagarpa).HasColumnName(@"bTipoValSagarpa").HasColumnType("bit").IsRequired();
            Property(x => x.SRutaProfEnvio).HasColumnName(@"sRutaProfEnvio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaProfRecepcion).HasColumnName(@"sRutaProfRecepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaProfElimEnvio).HasColumnName(@"sRutaProfElimEnvio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaProfElimRecepcion).HasColumnName(@"sRutaProfElimRecepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SClaveNoPedimento).HasColumnName(@"sClaveNoPedimento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SLetraIniNoPedResp).HasColumnName(@"sLetraIniNoPedResp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.SRutaM3Envio).HasColumnName(@"sRutaM3Envio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaM3Recepcion).HasColumnName(@"sRutaM3Recepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.BAnidadoM3).HasColumnName(@"bAnidadoM3").HasColumnType("bit").IsRequired();
            Property(x => x.BAutorizaFondoErp).HasColumnName(@"bAutorizaFondoERP").HasColumnType("bit").IsRequired();
            Property(x => x.BArchivoBorrado).HasColumnName(@"bArchivoBorrado").HasColumnType("bit").IsRequired();
            Property(x => x.BEdicionMuestras).HasColumnName(@"bEdicionMuestras").HasColumnType("bit").IsRequired();
            Property(x => x.BPartidasRemesas).HasColumnName(@"bPartidasRemesas").HasColumnType("bit").IsRequired();
            Property(x => x.BClienteEjecutivo).HasColumnName(@"bClienteEjecutivo").HasColumnType("bit").IsRequired();
            Property(x => x.BActPp).HasColumnName(@"bActPP").HasColumnType("bit").IsRequired();
            Property(x => x.BExCuentaGasto).HasColumnName(@"bExCuentaGasto").HasColumnType("bit").IsRequired();
            Property(x => x.BConsultarTarifa).HasColumnName(@"bConsultarTarifa").HasColumnType("bit").IsRequired();
            Property(x => x.BAplicaIdRc).HasColumnName(@"bAplicaIdRC").HasColumnType("bit").IsRequired();
            Property(x => x.BFolioFacturas).HasColumnName(@"bFolioFacturas").HasColumnType("bit").IsRequired();
            Property(x => x.BCalculaSir).HasColumnName(@"bCalculaSIR").HasColumnType("bit").IsRequired();
            Property(x => x.BUtilizaFox).HasColumnName(@"bUtilizaFox").HasColumnType("bit").IsRequired();
            Property(x => x.BPrefijosRemesas).HasColumnName(@"bPrefijosRemesas").HasColumnType("bit").IsRequired();
            Property(x => x.NHoraDespachos).HasColumnName(@"nHoraDespachos").HasColumnType("int").IsOptional();
            Property(x => x.BIncluirBarcodePc).HasColumnName(@"bIncluirBarcodePC").HasColumnType("bit").IsRequired();
            Property(x => x.BGeneraBandera).HasColumnName(@"bGeneraBandera").HasColumnType("bit").IsOptional();
            Property(x => x.BVerificaSaldo).HasColumnName(@"bVerificaSaldo").HasColumnType("bit").IsOptional();
            Property(x => x.SPasswordSaldo).HasColumnName(@"sPasswordSaldo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NIdSuc12).HasColumnName(@"nIdSuc12").HasColumnType("int").IsOptional();
            Property(x => x.BActualizaIgifp).HasColumnName(@"bActualizaIGIFP").HasColumnType("bit").IsOptional();
            Property(x => x.BValidaSellosA4).HasColumnName(@"bValidaSellosA4").HasColumnType("bit").IsOptional();
            Property(x => x.SRutaLibEEnvio).HasColumnName(@"sRutaLibEEnvio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SRutaLibERecepcion).HasColumnName(@"sRutaLibERecepcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.BRecargosConFraccion).HasColumnName(@"bRecargosConFraccion").HasColumnType("bit").IsOptional();
            Property(x => x.SCorreoElectronico).HasColumnName(@"sCorreoElectronico").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BNoAplicaBl).HasColumnName(@"bNoAplicaBL").HasColumnType("bit").IsOptional();
            Property(x => x.SRutaCoveXml).HasColumnName(@"sRutaCoveXML").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SUsuarioCove).HasColumnName(@"sUsuarioCove").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SPasswordCove).HasColumnName(@"sPasswordCove").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.BIncluirCaratulaRef).HasColumnName(@"bIncluirCaratulaRef").HasColumnType("bit").IsOptional();
            Property(x => x.BActualizaFirmasManual).HasColumnName(@"bActualizaFirmasManual").HasColumnType("bit").IsOptional();
            Property(x => x.SRutaKeyCove).HasColumnName(@"sRutaKEYCove").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SPalabraSecCove).HasColumnName(@"sPalabraSecCove").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BConcatenaFactCovePedAnt).HasColumnName(@"bConcatenaFactCOVEPedAnt").HasColumnType("bit").IsOptional();
            Property(x => x.BNoAutocompletarCbRemesa).HasColumnName(@"bNoAutocompletarCBRemesa").HasColumnType("bit").IsOptional();
            Property(x => x.BFechasSelecAleatoria).HasColumnName(@"bFechasSelecAleatoria").HasColumnType("bit").IsOptional();
            Property(x => x.BColorSeleccionEnNotificacion).HasColumnName(@"bColorSeleccionEnNotificacion").HasColumnType("bit").IsOptional();
            Property(x => x.BAgregarDoctosCrearRef).HasColumnName(@"bAgregarDoctosCrearRef").HasColumnType("bit").IsOptional();
            Property(x => x.BPermiteUsoFraccionesVulnerables).HasColumnName(@"bPermiteUsoFraccionesVulnerables").HasColumnType("bit").IsOptional();
            Property(x => x.BOmitirImpuestoEci).HasColumnName(@"bOmitirImpuestoECI").HasColumnType("bit").IsOptional();
            Property(x => x.SSociedadConstituida).HasColumnName(@"sSociedadConstituida").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NTipoRecargo).HasColumnName(@"nTipoRecargo").HasColumnType("tinyint").IsOptional();
            Property(x => x.BActivaContraSupPagElec).HasColumnName(@"bActivaContraSupPagElec").HasColumnType("bit").IsOptional();
            Property(x => x.BAplicaDta8Ivaieps).HasColumnName(@"bAplicaDTA8IVAIEPS").HasColumnType("bit").IsOptional();
            Property(x => x.BAutomatizaInfoCove).HasColumnName(@"bAutomatizaInfoCOVE").HasColumnType("bit").IsOptional();
            Property(x => x.BActualizaIvar1).HasColumnName(@"bActualizaIVAR1").HasColumnType("bit").IsOptional();
            Property(x => x.BHabilitarInventariosSellos).HasColumnName(@"bHabilitarInventariosSellos").HasColumnType("bit").IsOptional();
            Property(x => x.BEliminarEspaciosCbPartesIi).HasColumnName(@"bEliminarEspaciosCBPartesII").HasColumnType("bit").IsOptional();
            Property(x => x.BIncluirBarcodeImex).HasColumnName(@"bIncluirBarcodeIMEX").HasColumnType("bit").IsOptional();
            Property(x => x.BAnidadoArchivoPago).HasColumnName(@"bAnidadoArchivoPago").HasColumnType("bit").IsOptional();
            Property(x => x.BActivaConvertidorUnidades).HasColumnName(@"bActivaConvertidorUnidades").HasColumnType("bit").IsOptional();
            Property(x => x.BActivaPrecioUnitarioParte).HasColumnName(@"bActivaPrecioUnitarioParte").HasColumnType("bit").IsOptional();
            Property(x => x.BExcluirDtaParteIiFracciones).HasColumnName(@"bExcluirDTAParteIIFracciones").HasColumnType("bit").IsOptional();
            Property(x => x.BSoloConciderarDtaParteIiGlobal).HasColumnName(@"bSoloConciderarDTAParteIIGlobal").HasColumnType("bit").IsOptional();
            Property(x => x.SPasswordPagoCuentaCliente).HasColumnName(@"sPasswordPagoCuentaCliente").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.BConfirmaCuentaCliente).HasColumnName(@"bConfirmaCuentaCliente").HasColumnType("bit").IsOptional();
            Property(x => x.NConsecutivoTope).HasColumnName(@"nConsecutivoTope").HasColumnType("int").IsOptional();
            Property(x => x.NConsecutivoInicio).HasColumnName(@"nConsecutivoInicio").HasColumnType("int").IsOptional();
            Property(x => x.NTipoFactorAct).HasColumnName(@"nTipoFactorAct").HasColumnType("int").IsOptional();
            Property(x => x.BAdministraFormaPago9Partidas).HasColumnName(@"bAdministraFormaPago9Partidas").HasColumnType("bit").IsOptional();
            Property(x => x.BGeneraCodBarRemEspacio).HasColumnName(@"bGeneraCodBarRemEspacio").HasColumnType("bit").IsOptional();
            Property(x => x.BGeneraCodBarParteIiSinCeros).HasColumnName(@"bGeneraCodBarParteIISinCeros").HasColumnType("bit").IsOptional();
            Property(x => x.BGeneraPreviaAutorizacion).HasColumnName(@"bGeneraPreviaAutorizacion").HasColumnType("bit").IsOptional();
            Property(x => x.BBitacoraImpresionPedimento).HasColumnName(@"bBitacoraImpresionPedimento").HasColumnType("bit").IsOptional();
            Property(x => x.BLLenarEspacioVacioCbRemesa).HasColumnName(@"bLLenarEspacioVacioCBRemesa").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasOptional(a => a.Admin_Admina12Sucursale).WithMany(b => b.SIRAdmin_Sira23ConfPagoElectronico).HasForeignKey(c => c.NIdSuc12).WillCascadeOnDelete(false); // FK_SIRA_23_CONF_PAGO_ELECTRONICO_ADMINA_12_SUCURSALES
            HasOptional(a => a.CatPro).WithMany(b => b.SIRAdmin_Sira23ConfPagoElectronico).HasForeignKey(c => c.NIdProducto).WillCascadeOnDelete(false); // FK_SIRA_23_CONF_PAGO_ELECTRONICO_cat_pro
            HasOptional(a => a.McpSuc).WithMany(b => b.SIRAdmin_Sira23ConfPagoElectronico_NIdSucursal).HasForeignKey(c => c.NIdSucursal).WillCascadeOnDelete(false); // FK_SIRA_23_CONF_PAGO_ELECTRONICO_mcp_suc
            HasRequired(a => a.CatUsr).WithMany(b => b.SIRAdmin_Sira23ConfPagoElectronico).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIRA_23_CONF_PAGO_ELECTRONICO_cat_usr_ed
            HasMany(t => t.McpSucs).WithMany(t => t.SIRAdmin_Sira23ConfPagoElectronico_NIdCpe23).Map(m =>
            {
                m.ToTable("SIRA_62_CONFIG_OFICINA_SUCURSALES", "SIRAdmin");
                m.MapLeftKey("nIdCPE23");
                m.MapRightKey("nIdSucursal");
            });
        }
    }

}
// </auto-generated>
