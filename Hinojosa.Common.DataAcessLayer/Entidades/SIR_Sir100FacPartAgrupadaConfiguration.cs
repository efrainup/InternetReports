// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_100_FAC_PART_AGRUPADAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir100FacPartAgrupadaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir100FacPartAgrupada>
    {
        public SIR_Sir100FacPartAgrupadaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir100FacPartAgrupadaConfiguration(string schema)
        {
            ToTable("SIR_100_FAC_PART_AGRUPADAS", schema);
            HasKey(x => x.NIdFacPartAgrupada100);

            Property(x => x.NIdFacPartAgrupada100).HasColumnName(@"nIdFacPartAgrupada100").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NNumero).HasColumnName(@"nNumero").HasColumnType("int").IsRequired();
            Property(x => x.NIdParte99).HasColumnName(@"nIdParte99").HasColumnType("int").IsOptional();
            Property(x => x.SFraccion).HasColumnName(@"sFraccion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SDescripcionAa).HasColumnName(@"sDescripcionAA").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.NIdUmc10).HasColumnName(@"nIdUMC10").HasColumnType("int").IsOptional();
            Property(x => x.NIdUmt10).HasColumnName(@"nIdUMT10").HasColumnType("int").IsOptional();
            Property(x => x.NIdPaisOrigen01).HasColumnName(@"nIdPaisOrigen01").HasColumnType("int").IsOptional();
            Property(x => x.NIdPaisVendedor01).HasColumnName(@"nIdPaisVendedor01").HasColumnType("int").IsOptional();
            Property(x => x.NEstaVinculado).HasColumnName(@"nEstaVinculado").HasColumnType("tinyint").IsOptional();
            Property(x => x.NPrecioUnitario).HasColumnName(@"nPrecioUnitario").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NCantidadTarifa).HasColumnName(@"nCantidadTarifa").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.NCantidadFactura).HasColumnName(@"nCantidadFactura").HasColumnType("decimal").IsOptional().HasPrecision(15,3);
            Property(x => x.NValorFactura).HasColumnName(@"nValorFactura").HasColumnType("decimal").IsRequired().HasPrecision(15,3);
            Property(x => x.NIdMetodoVal101).HasColumnName(@"nIdMetodoVal101").HasColumnType("int").IsOptional();
            Property(x => x.BAplicaTl).HasColumnName(@"bAplicaTL").HasColumnType("bit").IsOptional();
            Property(x => x.BAplicaSe).HasColumnName(@"bAplicaSE").HasColumnType("bit").IsOptional();
            Property(x => x.BAplicaSagarpa).HasColumnName(@"bAplicaSAGARPA").HasColumnType("bit").IsOptional();
            Property(x => x.BAplicaSs).HasColumnName(@"bAplicaSS").HasColumnType("bit").IsOptional();
            Property(x => x.BAplicaSedena).HasColumnName(@"bAplicaSEDENA").HasColumnType("bit").IsOptional();
            Property(x => x.BAplicaNoms).HasColumnName(@"bAplicaNOMS").HasColumnType("bit").IsOptional();
            Property(x => x.BAgrupar).HasColumnName(@"bAgrupar").HasColumnType("bit").IsRequired();
            Property(x => x.NPeso).HasColumnName(@"nPeso").HasColumnType("decimal").IsOptional().HasPrecision(17,6);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NValorAduana).HasColumnName(@"nValorAduana").HasColumnType("decimal").IsOptional().HasPrecision(12,0);
            Property(x => x.NValorDolares).HasColumnName(@"nValorDolares").HasColumnType("decimal").IsOptional().HasPrecision(14,2);
            Property(x => x.NDta).HasColumnName(@"nDTA").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NImporteGarantia).HasColumnName(@"nImporteGarantia").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NTipoArancel).HasColumnName(@"nTipoArancel").HasColumnType("tinyint").IsRequired();
            Property(x => x.NTasaArancel).HasColumnName(@"nTasaArancel").HasColumnType("decimal").IsOptional().HasPrecision(20,10);
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsOptional();
            Property(x => x.SObservacion).HasColumnName(@"sObservacion").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NFactorAct).HasColumnName(@"nFactorAct").HasColumnType("decimal").IsOptional().HasPrecision(12,5);
            Property(x => x.NValorRecargo).HasColumnName(@"nValorRecargo").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NPorcentAdv).HasColumnName(@"nPorcentADV").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NPorcentValEsp).HasColumnName(@"nPorcentValEsp").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NIdCompAgrup202).HasColumnName(@"nIdCompAgrup202").HasColumnType("int").IsOptional();
            Property(x => x.SHNumFraccion).HasColumnName(@"sHNumFraccion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.SHDescFraccion).HasColumnName(@"sHDescFraccion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.SHCvePaisOrigen).HasColumnName(@"sHCvePaisOrigen").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SHCvePaisVendedor).HasColumnName(@"sHCvePaisVendedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SHDescPaisO).HasColumnName(@"sHDescPaisO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(72);
            Property(x => x.SHDescPaisV).HasColumnName(@"sHDescPaisV").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(72);
            Property(x => x.NPesoAmx).HasColumnName(@"nPesoAMX").HasColumnType("decimal").IsOptional().HasPrecision(14,3);
            Property(x => x.NFactorMoneda).HasColumnName(@"nFactorMoneda").HasColumnType("decimal").IsOptional().HasPrecision(10,9);
            Property(x => x.NValorMinimo).HasColumnName(@"nValorMinimo").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NValorPagado).HasColumnName(@"nValorPagado").HasColumnType("decimal").IsOptional().HasPrecision(12,0);
            Property(x => x.NPiezas).HasColumnName(@"nPiezas").HasColumnType("int").IsOptional();
            Property(x => x.BAplicaIsan).HasColumnName(@"bAplicaISAN").HasColumnType("bit").IsRequired();
            Property(x => x.NValorMerNoOrigi).HasColumnName(@"nValorMerNoOrigi").HasColumnType("decimal").IsOptional().HasPrecision(12,0);
            Property(x => x.NPorcentaje).HasColumnName(@"nPorcentaje").HasColumnType("decimal").IsOptional().HasPrecision(12,0);
            Property(x => x.NMontoIgi).HasColumnName(@"nMontoIGI").HasColumnType("decimal").IsOptional().HasPrecision(12,0);
            Property(x => x.BPruebaSuf).HasColumnName(@"bPruebaSuf").HasColumnType("bit").IsRequired();
            Property(x => x.BR353ConCero).HasColumnName(@"bR353ConCero").HasColumnType("bit").IsOptional();
            Property(x => x.SSubdivision).HasColumnName(@"sSubdivision").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.NPrecioEstimado).HasColumnName(@"nPrecioEstimado").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NDtaGarantia).HasColumnName(@"nDTAGarantia").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NCantidadCc).HasColumnName(@"nCantidadCC").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NPrecioReferencia).HasColumnName(@"nPrecioReferencia").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NIdUmtPrecioReferencia10).HasColumnName(@"nIdUMTPrecioReferencia10").HasColumnType("int").IsOptional();
            Property(x => x.NPrecioDiscriminacion).HasColumnName(@"nPrecioDiscriminacion").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.BAplicaIepsMezcla).HasColumnName(@"bAplicaIEPSMezcla").HasColumnType("bit").IsOptional();
            Property(x => x.SXmlTarifa).HasColumnName(@"sXMLTarifa").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SConsultaTarifa).HasColumnName(@"sConsultaTarifa").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.BEsAnexo27).HasColumnName(@"bEsAnexo27").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasOptional(a => a.SIR_Sir01Pais_NIdPaisOrigen01).WithMany(b => b.SIR_Sir100FacPartAgrupada_NIdPaisOrigen01).HasForeignKey(c => c.NIdPaisOrigen01).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_01_PAISES
            HasOptional(a => a.SIR_Sir01Pais_NIdPaisVendedor01).WithMany(b => b.SIR_Sir100FacPartAgrupada_NIdPaisVendedor01).HasForeignKey(c => c.NIdPaisVendedor01).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_01_PAISES1
            HasOptional(a => a.SIR_Sir101MetodosValoracion).WithMany(b => b.SIR_Sir100FacPartAgrupada).HasForeignKey(c => c.NIdMetodoVal101).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_101_METODOS_VALORACION
            HasOptional(a => a.SIR_Sir10UnidadesMedida_NIdUmc10).WithMany(b => b.SIR_Sir100FacPartAgrupada_NIdUmc10).HasForeignKey(c => c.NIdUmc10).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_10_UNIDADES_MEDIDA
            HasOptional(a => a.SIR_Sir10UnidadesMedida_NIdUmt10).WithMany(b => b.SIR_Sir100FacPartAgrupada_NIdUmt10).HasForeignKey(c => c.NIdUmt10).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_10_UNIDADES_MEDIDA1
            HasOptional(a => a.SIR_Sir10UnidadesMedida_NIdUmtPrecioReferencia10).WithMany(b => b.SIR_Sir100FacPartAgrupada_NIdUmtPrecioReferencia10).HasForeignKey(c => c.NIdUmtPrecioReferencia10).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_10_UNIDADES_MEDIDA_PEDREF
            HasOptional(a => a.SIR_Sir202ComplemFraccAgrup).WithMany(b => b.SIR_Sir100FacPartAgrupada).HasForeignKey(c => c.NIdCompAgrup202).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_202_COMPLEM_FRACC_AGRUP
            HasOptional(a => a.SIR_Sir60Referencia).WithMany(b => b.SIR_Sir100FacPartAgrupada).HasForeignKey(c => c.NIdReferencia60).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_60_REFERENCIAS
            HasOptional(a => a.SIR_Sir99Parte).WithMany(b => b.SIR_Sir100FacPartAgrupada).HasForeignKey(c => c.NIdParte99).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_SIR_99_PARTES
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir100FacPartAgrupada).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_100_FAC_PART_AGRUPADAS_cat_usr_ed
        }
    }

}
// </auto-generated>
