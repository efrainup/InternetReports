// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_emp_med
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatEmpMed
    {
        [Required]
        [Display(Name = "Id emp med")]
        public int IdEmpMed { get; set; } // id_emp_med (Primary key)

        [Required]
        [Display(Name = "Id rel emp med")]
        public int IdRelEmpMed { get; set; } // id_rel_emp_med

        [Required]
        [Display(Name = "Est")]
        public int Est { get; set; } // est

        [Required]
        [Display(Name = "Peso")]
        public int Peso { get; set; } // peso

        [Required]
        [Display(Name = "Imc")]
        public double Imc { get; set; } // imc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Tipopeso")]
        public string Tipopeso { get; set; } // tipopeso (length: 20)

        [Required]
        [Display(Name = "C fuma")]
        public byte CFuma { get; set; } // c_fuma

        [Required]
        [Display(Name = "C bebe")]
        public byte CBebe { get; set; } // c_bebe

        [Required]
        [Display(Name = "C trat adic")]
        public byte CTratAdic { get; set; } // c_trat_adic

        [Required]
        [Display(Name = "C prob vista")]
        public byte CProbVista { get; set; } // c_prob_vista

        [Required]
        [Display(Name = "C prob oido")]
        public byte CProbOido { get; set; } // c_prob_oido

        [Required]
        [Display(Name = "C trat med")]
        public byte CTratMed { get; set; } // c_trat_med

        [Required]
        [Display(Name = "Id nota trat med")]
        public int IdNotaTratMed { get; set; } // id_nota_trat_med

        [Required]
        [Display(Name = "C deporte")]
        public byte CDeporte { get; set; } // c_deporte

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Des deporte")]
        public string DesDeporte { get; set; } // des_deporte (length: 50)

        [Required]
        [Display(Name = "Id rel opera")]
        public int IdRelOpera { get; set; } // id_rel_opera

        [Required]
        [Display(Name = "Id rel enfer")]
        public int IdRelEnfer { get; set; } // id_rel_enfer

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        ///<summary>
        /// Si tuvo varación de peso en el año
        ///</summary>
        [Required]
        [Display(Name = "C var peso")]
        public byte CVarPeso { get; set; } // c_var_peso

        ///<summary>
        /// Cuántos kilogramos aumentó de peso el empleado
        ///</summary>
        [Required]
        [Display(Name = "Kg mas")]
        public byte KgMas { get; set; } // kg_mas

        ///<summary>
        /// Cuántos kilogramos bajó de peso el empleado
        ///</summary>
        [Required]
        [Display(Name = "Kg menos")]
        public byte KgMenos { get; set; } // kg_menos

        ///<summary>
        /// Causas por las cuáles varió el peso del empleado
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Causa peso")]
        public string CausaPeso { get; set; } // causa_peso (length: 100)

        ///<summary>
        /// Días y frecuencia con que realiza actividad física
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Dias deporte")]
        public string DiasDeporte { get; set; } // dias_deporte (length: 100)

        ///<summary>
        /// Número de cigarros que fuma o fumaba
        ///</summary>
        [Required]
        [Display(Name = "No cigars")]
        public byte NoCigars { get; set; } // no_cigars

        ///<summary>
        /// Si el empleado fumaba anteriormente
        ///</summary>
        [Required]
        [Display(Name = "C fumaba")]
        public byte CFumaba { get; set; } // c_fumaba

        ///<summary>
        /// Año en que inició a fumar
        ///</summary>
        [Required]
        [Display(Name = "Anio ini fum")]
        public int AnioIniFum { get; set; } // anio_ini_fum

        ///<summary>
        /// Año en que dejó de fumar
        ///</summary>
        [Required]
        [Display(Name = "Anio fin fum")]
        public int AnioFinFum { get; set; } // anio_fin_fum

        ///<summary>
        /// Causa por la cual dejó de fumar
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Causa dejo fum")]
        public string CausaDejoFum { get; set; } // causa_dejo_fum (length: 100)

        ///<summary>
        /// Año en que empezó a ingerir bebidas alcohólicas
        ///</summary>
        [Required]
        [Display(Name = "Anio bebe")]
        public int AnioBebe { get; set; } // anio_bebe

        ///<summary>
        /// Si ha usado drogas
        ///</summary>
        [Required]
        [Display(Name = "C drogas")]
        public byte CDrogas { get; set; } // c_drogas

        ///<summary>
        /// Fecha en que inició a drogarse
        ///</summary>
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ini drg")]
        public System.DateTime FecIniDrg { get; set; } // fec_ini_drg

        ///<summary>
        /// Fecha última que se drogó
        ///</summary>
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ult drg")]
        public System.DateTime FecUltDrg { get; set; } // fec_ult_drg

        ///<summary>
        /// Frecuencia con se drogaba o se droga
        ///</summary>
        [Required]
        [Display(Name = "Frec drg")]
        public byte FrecDrg { get; set; } // frec_drg

        ///<summary>
        /// Tipo de drogas que empleaba
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Tipo drg")]
        public string TipoDrg { get; set; } // tipo_drg (length: 100)

        ///<summary>
        /// Si ha pertenecido o no a instituciones de tratamiento de adicciones
        ///</summary>
        [Required]
        [Display(Name = "C inst adic")]
        public byte CInstAdic { get; set; } // c_inst_adic

        ///<summary>
        /// Saber si el doctor midió
        ///</summary>
        [Required]
        [Display(Name = "C midio")]
        public byte CMidio { get; set; } // c_midio

        [Required]
        [Display(Name = "C peso")]
        public byte CPeso { get; set; } // c_peso

        ///<summary>
        /// Frecuencia cardíaca
        ///</summary>
        [Required]
        [Display(Name = "Frec card")]
        public byte FrecCard { get; set; } // frec_card

        ///<summary>
        /// Si la frecuencia cardíaca es rítmica
        ///</summary>
        [Required]
        [Display(Name = "C ritmo")]
        public byte CRitmo { get; set; } // c_ritmo

        ///<summary>
        /// Número de extrasistoles por minutos
        ///</summary>
        [Required]
        [Display(Name = "No extrasistoles")]
        public byte NoExtrasistoles { get; set; } // no_extrasistoles

        ///<summary>
        /// Presión arterial; 1=Sistólica, 2=Diastólica
        ///</summary>
        [Required]
        [Display(Name = "C presion art")]
        public byte CPresionArt { get; set; } // c_presion_art

        ///<summary>
        /// Enfermedades de Glándulas Mamarias
        ///</summary>
        [Required]
        [Display(Name = "C enf glan mam")]
        public byte CEnfGlanMam { get; set; } // c_enf_glan_mam

        ///<summary>
        /// Enfermedades en los Ovarios
        ///</summary>
        [Required]
        [Display(Name = "C enf ova")]
        public byte CEnfOva { get; set; } // c_enf_ova

        ///<summary>
        /// Enfermedades en el Útero
        ///</summary>
        [Required]
        [Display(Name = "C enf ute")]
        public byte CEnfUte { get; set; } // c_enf_ute

        ///<summary>
        /// Si estás embarazada
        ///</summary>
        [Required]
        [Display(Name = "C emb")]
        public byte CEmb { get; set; } // c_emb

        ///<summary>
        /// Semanas de Gestación
        ///</summary>
        [Required]
        [Display(Name = "Sem gesta")]
        public byte SemGesta { get; set; } // sem_gesta

        ///<summary>
        /// Fecha de Última Regla
        ///</summary>
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ult reg")]
        public System.DateTime FecUltReg { get; set; } // fec_ult_reg

        ///<summary>
        /// Gesta
        ///</summary>
        [Required]
        [Display(Name = "C gesta")]
        public byte CGesta { get; set; } // c_gesta

        ///<summary>
        /// Para
        ///</summary>
        [Required]
        [Display(Name = "C para")]
        public byte CPara { get; set; } // c_para

        ///<summary>
        /// Aborto
        ///</summary>
        [Required]
        [Display(Name = "C abort")]
        public byte CAbort { get; set; } // c_abort

        ///<summary>
        /// Césarea
        ///</summary>
        [Required]
        [Display(Name = "C cesar")]
        public byte CCesar { get; set; } // c_cesar

        ///<summary>
        /// Mastografía
        ///</summary>
        [Required]
        [Display(Name = "C masto")]
        public byte CMasto { get; set; } // c_masto

        ///<summary>
        /// Motivos y resultados
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Motivos masto")]
        public string MotivosMasto { get; set; } // motivos_masto (length: 100)

        ///<summary>
        /// Papanicolau
        ///</summary>
        [Required]
        [Display(Name = "C papa")]
        public byte CPapa { get; set; } // c_papa

        ///<summary>
        /// Fecha de Papanicolau
        ///</summary>
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec pap")]
        public System.DateTime FecPap { get; set; } // fec_pap

        ///<summary>
        /// Resultados del Papanicolau
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Result papa")]
        public string ResultPapa { get; set; } // result_papa (length: 100)

        ///<summary>
        /// Nota para conclusiones
        ///</summary>
        [Required]
        [Display(Name = "Id nota conc")]
        public int IdNotaConc { get; set; } // id_nota_conc

        ///<summary>
        /// Nota estado de salud
        ///</summary>
        [Required]
        [Display(Name = "Id nota salud")]
        public int IdNotaSalud { get; set; } // id_nota_salud

        ///<summary>
        /// Nombre del Doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Nom dr")]
        public string NomDr { get; set; } // nom_dr (length: 100)

        ///<summary>
        /// Número de Registro
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "No reg")]
        public string NoReg { get; set; } // no_reg (length: 50)

        ///<summary>
        /// Calle del domiclio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Calle")]
        public string Calle { get; set; } // calle (length: 80)

        ///<summary>
        /// Número Externo del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "No ext")]
        public string NoExt { get; set; } // no_ext (length: 10)

        ///<summary>
        /// Número Interno del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(13)]
        [StringLength(13)]
        [Display(Name = "No int")]
        public string NoInt { get; set; } // no_int (length: 13)

        ///<summary>
        /// Calles entre las que su ubica del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Calles")]
        public string Calles { get; set; } // calles (length: 40)

        ///<summary>
        /// Colonia del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Col")]
        public string Col { get; set; } // col (length: 40)

        ///<summary>
        /// Ciudad del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Ciudad")]
        public string Ciudad { get; set; } // ciudad (length: 80)

        ///<summary>
        /// Delegación del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Deleg")]
        public string Deleg { get; set; } // deleg (length: 50)

        ///<summary>
        /// Código Postal del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Cp")]
        public string Cp { get; set; } // cp (length: 10)

        ///<summary>
        /// Identificador del País del domicilio del doctor
        ///</summary>
        [Required]
        [Display(Name = "Id pais")]
        public int IdPais { get; set; } // id_pais

        ///<summary>
        /// Identificador del estado del domicilio del doctor
        ///</summary>
        [Required]
        [Display(Name = "Id edo")]
        public int IdEdo { get; set; } // id_edo

        ///<summary>
        /// Teléfono del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Tel")]
        public string Tel { get; set; } // tel (length: 30)

        ///<summary>
        /// Celular del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Cel")]
        public string Cel { get; set; } // cel (length: 30)

        ///<summary>
        /// Correo del domicilio del doctor
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Correo")]
        public string Correo { get; set; } // correo (length: 200)

        ///<summary>
        /// Si el curso aplica para la STPS
        ///</summary>
        [Required]
        [Display(Name = "Id rel diag")]
        public int IdRelDiag { get; set; } // id_rel_diag

        public CatEmpMed()
        {
            IdEmpMed = 0;
            IdRelEmpMed = 0;
            Est = 0;
            Peso = 0;
            Imc = 0;
            Tipopeso = "";
            CFuma = 0;
            CBebe = 0;
            CTratAdic = 0;
            CProbVista = 0;
            CProbOido = 0;
            CTratMed = 0;
            IdNotaTratMed = 0;
            CDeporte = 0;
            DesDeporte = "";
            IdRelOpera = 0;
            IdRelEnfer = 0;
            IdUsr = 0;
            CVarPeso = 0;
            KgMas = 0;
            KgMenos = 0;
            CausaPeso = "";
            DiasDeporte = "";
            NoCigars = 0;
            CFumaba = 0;
            AnioIniFum = 0;
            AnioFinFum = 0;
            CausaDejoFum = "";
            AnioBebe = 0;
            CDrogas = 0;
            FrecDrg = 0;
            TipoDrg = "";
            CInstAdic = 0;
            CMidio = 0;
            CPeso = 0;
            FrecCard = 0;
            CRitmo = 0;
            NoExtrasistoles = 0;
            CPresionArt = 0;
            CEnfGlanMam = 0;
            CEnfOva = 0;
            CEnfUte = 0;
            CEmb = 0;
            SemGesta = 0;
            CGesta = 0;
            CPara = 0;
            CAbort = 0;
            CCesar = 0;
            CMasto = 0;
            MotivosMasto = "";
            CPapa = 0;
            ResultPapa = "";
            IdNotaConc = 0;
            IdNotaSalud = 0;
            NomDr = "";
            NoReg = "";
            Calle = "";
            NoExt = "";
            NoInt = "";
            Calles = "";
            Col = "";
            Ciudad = "";
            Deleg = "";
            Cp = "";
            IdPais = 0;
            IdEdo = 0;
            Tel = "";
            Cel = "";
            Correo = "";
            IdRelDiag = 0;
        }
    }

}
// </auto-generated>
