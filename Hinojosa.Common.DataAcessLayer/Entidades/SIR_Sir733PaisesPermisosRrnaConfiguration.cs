// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_733_PAISES_PERMISOS_RRNA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir733PaisesPermisosRrnaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir733PaisesPermisosRrna>
    {
        public SIR_Sir733PaisesPermisosRrnaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir733PaisesPermisosRrnaConfiguration(string schema)
        {
            ToTable("SIR_733_PAISES_PERMISOS_RRNA", schema);
            HasKey(x => new { x.NIdPais01, x.NIdPermisoRrna527, x.NTipoPais });

            Property(x => x.NIdPais01).HasColumnName(@"nIdPais01").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NIdPermisoRrna527).HasColumnName(@"nIdPermisoRRNA527").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NTipoPais).HasColumnName(@"nTipoPais").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.SIR_Sir01Pais).WithMany(b => b.SIR_Sir733PaisesPermisosRrna).HasForeignKey(c => c.NIdPais01).WillCascadeOnDelete(false); // FK_SIR_733_PAISES_PERMISOS_RRNA_SIR_01_PAISES
            HasRequired(a => a.SIR_Sir527PermisosRrna).WithMany(b => b.SIR_Sir733PaisesPermisosRrna).HasForeignKey(c => c.NIdPermisoRrna527).WillCascadeOnDelete(false); // FK_SIR_733_PAISES_PERMISOS_RRNA_SIR_527_PERMISOS_RRNA
        }
    }

}
// </auto-generated>
