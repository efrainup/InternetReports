// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_436_CLIENTES_AGRUPACION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir436ClientesAgrupacion
    {
        [Required]
        [Display(Name = "N ID cliente agrupacion 436")]
        public int NIdClienteAgrupacion436 { get; set; } // nIdClienteAgrupacion436 (Primary key)

        [Required]
        [Display(Name = "N ID cliente")]
        public int NIdCliente { get; set; } // nIdCliente

        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "S criterio agrupacion")]
        public string SCriterioAgrupacion { get; set; } // sCriterioAgrupacion (length: 20)

        [Display(Name = "B activo")]
        public bool? BActivo { get; set; } // bActivo

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S modo union")]
        public string SModoUnion { get; set; } // sModoUnion (length: 10)

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "S limitador desc")]
        public string SLimitadorDesc { get; set; } // sLimitadorDesc (length: 5)

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "S limitador obs")]
        public string SLimitadorObs { get; set; } // sLimitadorObs (length: 5)

        [Display(Name = "B agrupacion uva")]
        public bool? BAgrupacionUva { get; set; } // bAgrupacionUVA

        [Display(Name = "B agrupacion nyce")]
        public bool? BAgrupacionNyce { get; set; } // bAgrupacionNYCE

        [Display(Name = "N cantidad minima agrupacion")]
        public int? NCantidadMinimaAgrupacion { get; set; } // nCantidadMinimaAgrupacion

        [Display(Name = "B partidas agrupadas en pedimento")]
        public bool? BPartidasAgrupadasEnPedimento { get; set; } // bPartidasAgrupadasEnPedimento

        [Display(Name = "B identificadores permisos")]
        public bool? BIdentificadoresPermisos { get; set; } // bIdentificadoresPermisos

        [Display(Name = "B agrupacion medicos")]
        public bool? BAgrupacionMedicos { get; set; } // bAgrupacionMedicos

        [Display(Name = "B nafta")]
        public bool? BNafta { get; set; } // bNafta

        [Display(Name = "B agrupacion tipo uso mercancia")]
        public bool? BAgrupacionTipoUsoMercancia { get; set; } // bAgrupacionTipoUsoMercancia

        // Foreign keys

        /// <summary>
        /// Parent CatCliente pointed by [SIR_436_CLIENTES_AGRUPACION].([NIdCliente]) (FK_SIR_436_CLIENTES_AGRUPACION_cat_clientes)
        /// </summary>
        public virtual CatCliente CatCliente { get; set; } // FK_SIR_436_CLIENTES_AGRUPACION_cat_clientes
    }

}
// </auto-generated>
