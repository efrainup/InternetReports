// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // rel_bco_cta_emp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RelBcoCtaEmp
    {
        [Required]
        [Display(Name = "Id cta")]
        public int IdCta { get; set; } // id_cta (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Emp")]
        public string Emp { get; set; } // emp (length: 15)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Depto")]
        public string Depto { get; set; } // depto (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Puesto")]
        public string Puesto { get; set; } // puesto (length: 100)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Curp")]
        public string Curp { get; set; } // CURP (length: 20)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Nss")]
        public string Nss { get; set; } // NSS (length: 18)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec alta imss")]
        public System.DateTime FecAltaImss { get; set; } // fec_alta_imss

        [Required]
        [Display(Name = "Antig")]
        public int Antig { get; set; } // Antig

        [Required]
        [Display(Name = "Id sin")]
        public int IdSin { get; set; } // id_sin

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tip con")]
        public string TipCon { get; set; } // TipCon (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tip reg")]
        public string TipReg { get; set; } // TipReg (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Per")]
        public string Per { get; set; } // Per (length: 3)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tip riesgo")]
        public string TipRiesgo { get; set; } // TipRiesgo (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tip jor")]
        public string TipJor { get; set; } // TipJor (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Reg pat")]
        public string RegPat { get; set; } // RegPat (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // email (length: 80)

        public RelBcoCtaEmp()
        {
            Emp = "";
            Depto = "";
            Puesto = "";
            Curp = "";
            Nss = "";
            Antig = 0;
            IdSin = 0;
            TipCon = "";
            TipReg = "";
            Per = "";
            TipRiesgo = "";
            TipJor = "";
            RegPat = "";
            Email = "";
        }
    }

}
// </auto-generated>
