// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_20_TIPOS_DOCS_TIPOS_REF
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir20TiposDocsTiposRefConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir20TiposDocsTiposRef>
    {
        public SIR_Sir20TiposDocsTiposRefConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir20TiposDocsTiposRefConfiguration(string schema)
        {
            ToTable("SIR_20_TIPOS_DOCS_TIPOS_REF", schema);
            HasKey(x => x.NIdTipoDocto62);

            Property(x => x.NIdTipoDocto62).HasColumnName(@"nIdTipoDocto62").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NIdTipoRef).HasColumnName(@"nIdTipoRef").HasColumnType("int").IsOptional();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.SisTipRef).WithMany(b => b.SIR_Sir20TiposDocsTiposRef).HasForeignKey(c => c.NIdTipoRef).WillCascadeOnDelete(false); // FK_SIR_20_TIPOS_DOCS_TIPOS_REF_sis_tip_ref
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir20TiposDocsTiposRef).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_20_TIPOS_DOCS_TIPOS_REF_cat_usr_ed
            HasRequired(a => a.SIR_Sir62TiposDocumento).WithOptional(b => b.SIR_Sir20TiposDocsTiposRef).WillCascadeOnDelete(false); // FK_SIR_20_TIPOS_DOCS_TIPOS_REF_SIR_62_TIPOS_DOCUMENTOS
        }
    }

}
// </auto-generated>
