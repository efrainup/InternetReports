// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_52_FACTURAS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir52Factura
    {
        [Required]
        [Display(Name = "N ID factura 52")]
        public int NIdFactura52 { get; set; } // nIdFactura52 (Primary key)

        [Display(Name = "N ID oper fact 49")]
        public int? NIdOperFact49 { get; set; } // nIdOperFact49

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "S numero")]
        public string SNumero { get; set; } // sNumero (length: 40)

        [Display(Name = "D fecha")]
        public System.DateTime? DFecha { get; set; } // dFecha

        [Display(Name = "N ID incoterm 53")]
        public int? NIdIncoterm53 { get; set; } // nIdIncoterm53

        [Required]
        [Display(Name = "N existe vinculacion")]
        public byte NExisteVinculacion { get; set; } // nExisteVinculacion

        [Display(Name = "N ID moneda 03")]
        public int? NIdMoneda03 { get; set; } // nIdMoneda03

        [Display(Name = "N ID pais 01")]
        public int? NIdPais01 { get; set; } // nIdPais01

        [Required]
        [Display(Name = "N valor factura me")]
        public decimal NValorFacturaMe { get; set; } // nValorFacturaME

        [Display(Name = "N ID proveedor 42")]
        public int? NIdProveedor42 { get; set; } // nIdProveedor42

        [Display(Name = "N ID entidad")]
        public int? NIdEntidad { get; set; } // nIdEntidad

        [Required]
        [Display(Name = "N peso")]
        public decimal NPeso { get; set; } // nPeso

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Required]
        [Display(Name = "N valor factura us")]
        public decimal NValorFacturaUs { get; set; } // nValorFacturaUS

        [Display(Name = "N ID histo paridad 13")]
        public int? NIdHistoParidad13 { get; set; } // nIdHistoParidad13

        [Display(Name = "N ID orden cli 146")]
        public int? NIdOrdenCli146 { get; set; } // nIdOrdenCli146

        [Display(Name = "N ID suc pat adu 71")]
        public int? NIdSucPatAdu71 { get; set; } // nIdSucPatAdu71

        [Required]
        [Display(Name = "N valor mercancias")]
        public decimal NValorMercancias { get; set; } // nValorMercancias

        [Required]
        [Display(Name = "B sin partidas")]
        public bool BSinPartidas { get; set; } // bSinPartidas

        [Required]
        [Display(Name = "N valor fact paridad")]
        public decimal NValorFactParidad { get; set; } // nValorFactParidad

        [Display(Name = "N ID pais fac par 01")]
        public int? NIdPaisFacPar01 { get; set; } // nIdPaisFacPar01

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S hc lave pais")]
        public string SHClavePais { get; set; } // sHClavePais (length: 3)

        [MaxLength(72)]
        [StringLength(72)]
        [Display(Name = "S hd escripcion pais")]
        public string SHDescripcionPais { get; set; } // sHDescripcionPais (length: 72)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S hc lave pais fme")]
        public string SHClavePaisFme { get; set; } // sHClavePaisFME (length: 3)

        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "S hc lave prov")]
        public string SHClaveProv { get; set; } // sHClaveProv (length: 6)

        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "S hr azon social")]
        public string SHRazonSocial { get; set; } // sHRazonSocial (length: 120)

        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "S hd ir proveedor")]
        public string SHDirProveedor { get; set; } // sHDirProveedor (length: 80)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S hn um int")]
        public string SHNumInt { get; set; } // sHNumInt (length: 10)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S hn um ext")]
        public string SHNumExt { get; set; } // sHNumExt (length: 10)

        [MaxLength(360)]
        [StringLength(360)]
        [Display(Name = "S hm un ciudad")]
        public string SHMunCiudad { get; set; } // sHMunCiudad (length: 360)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S hcpp rov")]
        public string SHcpProv { get; set; } // sHCPProv (length: 10)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S he ntidad prov")]
        public string SHEntidadProv { get; set; } // sHEntidadProv (length: 100)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S hc lave pais prov")]
        public string SHClavePaisProv { get; set; } // sHClavePaisProv (length: 3)

        [MaxLength(72)]
        [StringLength(72)]
        [Display(Name = "S hd esc pais prov")]
        public string SHDescPaisProv { get; set; } // sHDescPaisProv (length: 72)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S hc ontacto prov")]
        public string SHContactoProv { get; set; } // sHContactoProv (length: 50)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S ht elefono 1")]
        public string SHTelefono1 { get; set; } // sHTelefono1 (length: 10)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S ht elefono 2")]
        public string SHTelefono2 { get; set; } // sHTelefono2 (length: 10)

        [Display(Name = "N ID rem 206")]
        public int? NIdRem206 { get; set; } // nIdRem206

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S hc lave moneda")]
        public string SHClaveMoneda { get; set; } // sHClaveMoneda (length: 3)

        [MaxLength(42)]
        [StringLength(42)]
        [Display(Name = "S hd esc moneda")]
        public string SHDescMoneda { get; set; } // sHDescMoneda (length: 42)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S hi dentificador prov")]
        public string SHIdentificadorProv { get; set; } // sHIdentificadorProv (length: 30)

        [Display(Name = "N cantidad com")]
        public decimal? NCantidadCom { get; set; } // nCantidadCom

        [Display(Name = "N num bultos")]
        public int? NNumBultos { get; set; } // nNumBultos

        [Display(Name = "N val mcia sin parte")]
        public decimal? NValMciaSinParte { get; set; } // nValMciaSinParte

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S numero largo")]
        public string SNumeroLargo { get; set; } // sNumeroLargo (length: 50)

        [Display(Name = "N ID arch fac 299")]
        public int? NIdArchFac299 { get; set; } // nIdArchFac299

        [Display(Name = "N ID ent fed 02")]
        public int? NIdEntFed02 { get; set; } // nIdEntFed02

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S desc mcia factura")]
        public string SDescMciaFactura { get; set; } // sDescMciaFactura (length: 250)

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "S ed ocument")]
        public string SEDocument { get; set; } // sEDocument (length: 40)

        [Display(Name = "B subdivision")]
        public bool? BSubdivision { get; set; } // bSubdivision

        [Display(Name = "N certificado")]
        public byte? NCertificado { get; set; } // nCertificado

        [Display(Name = "S observaciones")]
        public string SObservaciones { get; set; } // sObservaciones

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S exportador")]
        public string SExportador { get; set; } // sExportador (length: 100)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S lugar emision")]
        public string SLugarEmision { get; set; } // sLugarEmision (length: 500)

        [Display(Name = "N consecutivo")]
        public int? NConsecutivo { get; set; } // nConsecutivo

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S shipping advice")]
        public string SShippingAdvice { get; set; } // sShippingAdvice (length: 500)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S packin list")]
        public string SPackinList { get; set; } // sPackinList (length: 500)

        [Display(Name = "N monto euros")]
        public decimal? NMontoEuros { get; set; } // nMontoEuros

        [Display(Name = "N metros cubicos")]
        public decimal? NMetrosCubicos { get; set; } // nMetrosCubicos

        [DataType(DataType.DateTime)]
        [Display(Name = "D due date")]
        public System.DateTime? DDueDate { get; set; } // dDueDate

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S numero factura excel")]
        public string SNumeroFacturaExcel { get; set; } // sNumeroFacturaExcel (length: 500)

        [Display(Name = "N ID destinatario")]
        public string NIdDestinatario { get; set; } // nIdDestinatario

        [DataType(DataType.DateTime)]
        [Display(Name = "D export date")]
        public System.DateTime? DExportDate { get; set; } // dExportDate

        [Display(Name = "S tienda")]
        public string STienda { get; set; } // sTienda

        [Display(Name = "S descripcion factura ingles")]
        public string SDescripcionFacturaIngles { get; set; } // sDescripcionFacturaIngles

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S operacion cove")]
        public string SOperacionCove { get; set; } // sOperacionCOVE (length: 50)

        [Display(Name = "D valor fact paridad cove")]
        public decimal? DValorFactParidadCove { get; set; } // dValorFactParidadCOVE

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "S ed ocument respaldo")]
        public string SEDocumentRespaldo { get; set; } // sEDocumentRespaldo (length: 40)

        [Display(Name = "B con descuento")]
        public bool? BConDescuento { get; set; } // bConDescuento

        [Display(Name = "N factor descuento")]
        public decimal? NFactorDescuento { get; set; } // nFactorDescuento

        [Display(Name = "N valor fact original")]
        public decimal? NValorFactOriginal { get; set; } // nValorFactOriginal

        [Display(Name = "N valor uso riginal")]
        public decimal? NValorUsOriginal { get; set; } // nValorUSOriginal

        [Display(Name = "N valor mercancias original")]
        public decimal? NValorMercanciasOriginal { get; set; } // nValorMercanciasOriginal

        [Display(Name = "N tipo descuento")]
        public byte? NTipoDescuento { get; set; } // nTipoDescuento

        [Display(Name = "N nivel subdivision")]
        public byte? NNivelSubdivision { get; set; } // nNivelSubdivision

        [Display(Name = "N ID factura sub orig 52")]
        public int? NIdFacturaSubOrig52 { get; set; } // nIdFacturaSubOrig52

        [Display(Name = "N ID custom code 805")]
        public int? NIdCustomCode805 { get; set; } // nIdCustomCode805

        [Display(Name = "B es subdivision consolidada")]
        public bool? BEsSubdivisionConsolidada { get; set; } // bEsSubdivisionConsolidada

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S rfce misor")]
        public string SRfcEmisor { get; set; } // sRFCEmisor (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S rfcr eceptor")]
        public string SRfcReceptor { get; set; } // sRFCReceptor (length: 30)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S uuid")]
        public string SUuid { get; set; } // sUUID (length: 50)

        [Display(Name = "B carga cfdi")]
        public bool? BCargaCfdi { get; set; } // bCargaCFDI

        [Display(Name = "B cfdiv alido")]
        public bool? BCfdiValido { get; set; } // bCFDIValido

        [Display(Name = "N ID ref original 60")]
        public int? NIdRefOriginal60 { get; set; } // nIdRefOriginal60

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "S num adenda")]
        public string SNumAdenda { get; set; } // sNumAdenda (length: 40)

        [Display(Name = "B subdivision respaldo")]
        public bool? BSubdivisionRespaldo { get; set; } // bSubdivisionRespaldo

        [Display(Name = "N estatus con rt")]
        public int? NEstatusConRt { get; set; } // nEstatusConRT

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S tracking")]
        public string STracking { get; set; } // sTracking (length: 100)

        [Display(Name = "B coves ubdivision")]
        public bool? BCoveSubdivision { get; set; } // bCOVESubdivision

        [Display(Name = "B covea denda")]
        public bool? BCoveAdenda { get; set; } // bCOVEAdenda

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S prov cert origen")]
        public string SProvCertOrigen { get; set; } // sProvCertOrigen (length: 50)

        [Display(Name = "N ID shipper 346")]
        public int? NIdShipper346 { get; set; } // nIdShipper346

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir11FacturasPartida where [SIR_11_FACTURAS_PARTIDAS].[nIdFactura52] point to this entity (FK_SIR_11_FACTURAS_PARTIDAS_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir11FacturasPartida> SIR_Sir11FacturasPartida { get; set; } // SIR_11_FACTURAS_PARTIDAS.FK_SIR_11_FACTURAS_PARTIDAS_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir128PedidosCliente where [SIR_128_PEDIDOS_CLIENTES].[nIdFactura52] point to this entity (FK_SIR_128_PEDIDOS_CLIENTES_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir128PedidosCliente> SIR_Sir128PedidosCliente { get; set; } // SIR_128_PEDIDOS_CLIENTES.FK_SIR_128_PEDIDOS_CLIENTES_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir202ComplemFraccAgrup where [SIR_202_COMPLEM_FRACC_AGRUP].[nIdFactura52] point to this entity (FK_SIR_202_COMPLEM_FRACC_AGRUP_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir202ComplemFraccAgrup> SIR_Sir202ComplemFraccAgrup { get; set; } // SIR_202_COMPLEM_FRACC_AGRUP.FK_SIR_202_COMPLEM_FRACC_AGRUP_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir274FacturasProfepa where [SIR_274_FACTURAS_PROFEPA].[nIdFactura52] point to this entity (FK_SIR_274_FACTURAS_PROFEPA_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir274FacturasProfepa> SIR_Sir274FacturasProfepa { get; set; } // SIR_274_FACTURAS_PROFEPA.FK_SIR_274_FACTURAS_PROFEPA_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir392FraccionesProveeMv where [SIR_392_FRACCIONES_PROVEE_MV].[nIdFactura52] point to this entity (FK_SIR_392_FRACCIONES_PROVEE_MV_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir392FraccionesProveeMv> SIR_Sir392FraccionesProveeMv { get; set; } // SIR_392_FRACCIONES_PROVEE_MV.FK_SIR_392_FRACCIONES_PROVEE_MV_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir52Factura where [SIR_52_FACTURAS].[nIdFacturaSubOrig52] point to this entity (FK_SIR_52_FACTURAS_SIR_52_FACTURAS_SUBDIVISION)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir52Factura> SIR_Sir52Factura2 { get; set; } // SIR_52_FACTURAS.FK_SIR_52_FACTURAS_SIR_52_FACTURAS_SUBDIVISION
        /// <summary>
        /// Child SIR_Sir55FacturasIncrementable where [SIR_55_FACTURAS_INCREMENTABLES].[nIdFactura52] point to this entity (FK_SIR_55_FACTURAS_INCREMENTABLES_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir55FacturasIncrementable> SIR_Sir55FacturasIncrementable { get; set; } // SIR_55_FACTURAS_INCREMENTABLES.FK_SIR_55_FACTURAS_INCREMENTABLES_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir60Referencia (Many-to-Many) mapped by table [SIR_188_FACTURAS_REFERENCIAS]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir60Referencia> SIR_Sir60Referencia { get; set; } // Many to many mapping
        /// <summary>
        /// Child SIR_Sir63Documento where [SIR_63_DOCUMENTOS].[nIdFactura52] point to this entity (FK_SIR_63_DOCUMENTOS_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir63Documento> SIR_Sir63Documento { get; set; } // SIR_63_DOCUMENTOS.FK_SIR_63_DOCUMENTOS_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir645DetalleEnvioCoveFactura where [SIR_645_DETALLE_ENVIO_COVE_FACTURAS].[nIdFactura52] point to this entity (FK_SIR_645_DETALLE_ENVIO_COVE_FACTURAS_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir645DetalleEnvioCoveFactura> SIR_Sir645DetalleEnvioCoveFactura { get; set; } // SIR_645_DETALLE_ENVIO_COVE_FACTURAS.FK_SIR_645_DETALLE_ENVIO_COVE_FACTURAS_SIR_52_FACTURAS
        /// <summary>
        /// Child SIR_Sir695HistSubdivision (Many-to-Many) mapped by table [SIR_696_HIST_FACT_SUBDIVISION]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir695HistSubdivision> SIR_Sir695HistSubdivision { get; set; } // Many to many mapping
        /// <summary>
        /// Child SIR_Sir74ConocimientosMaritimo (Many-to-Many) mapped by table [SIR_359_GUIAS_FACTURAS]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir74ConocimientosMaritimo> SIR_Sir74ConocimientosMaritimo { get; set; } // Many to many mapping
        /// <summary>
        /// Child SIR_Sir781ConsultaExpedienteCove where [SIR_781_CONSULTA_EXPEDIENTE_COVE].[nIdFactura52] point to this entity (FK_SIR_781_CONSULTA_EXPEDIENTE_COVE_SIR_52_FACTURAS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir781ConsultaExpedienteCove> SIR_Sir781ConsultaExpedienteCove { get; set; } // SIR_781_CONSULTA_EXPEDIENTE_COVE.FK_SIR_781_CONSULTA_EXPEDIENTE_COVE_SIR_52_FACTURAS

        // Foreign keys

        /// <summary>
        /// Parent CatEdo pointed by [SIR_52_FACTURAS].([NIdEntidad]) (FK_SIR_52_FACTURAS_cat_edos)
        /// </summary>
        public virtual CatEdo CatEdo { get; set; } // FK_SIR_52_FACTURAS_cat_edos

        /// <summary>
        /// Parent CatUsr pointed by [SIR_52_FACTURAS].([NIdUsuarioEd]) (FK_SIR_52_FACTURAS_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_52_FACTURAS_cat_usr_ed

        /// <summary>
        /// Parent SIR_Sir01Pais pointed by [SIR_52_FACTURAS].([NIdPais01]) (FK_SIR_52_FACTURAS_SIR_01_PAISES)
        /// </summary>
        public virtual SIR_Sir01Pais SIR_Sir01Pais_NIdPais01 { get; set; } // FK_SIR_52_FACTURAS_SIR_01_PAISES

        /// <summary>
        /// Parent SIR_Sir01Pais pointed by [SIR_52_FACTURAS].([NIdPaisFacPar01]) (FK_SIR_52_FACTURAS_SIR_01_PAISES_PARIDAD)
        /// </summary>
        public virtual SIR_Sir01Pais SIR_Sir01Pais_NIdPaisFacPar01 { get; set; } // FK_SIR_52_FACTURAS_SIR_01_PAISES_PARIDAD

        /// <summary>
        /// Parent SIR_Sir03Moneda pointed by [SIR_52_FACTURAS].([NIdMoneda03]) (FK_SIR_52_FACTURAS_SIR_03_MONEDAS)
        /// </summary>
        public virtual SIR_Sir03Moneda SIR_Sir03Moneda { get; set; } // FK_SIR_52_FACTURAS_SIR_03_MONEDAS

        /// <summary>
        /// Parent SIR_Sir13HistorialParidad pointed by [SIR_52_FACTURAS].([NIdHistoParidad13]) (FK_SIR_52_FACTURAS_SIR_13_HISTORIAL_PARIDAD)
        /// </summary>
        public virtual SIR_Sir13HistorialParidad SIR_Sir13HistorialParidad { get; set; } // FK_SIR_52_FACTURAS_SIR_13_HISTORIAL_PARIDAD

        /// <summary>
        /// Parent SIR_Sir146OrdenesCliente pointed by [SIR_52_FACTURAS].([NIdOrdenCli146]) (FK_SIR_52_FACTURAS_SIR_146_ORDENES_CLIENTES)
        /// </summary>
        public virtual SIR_Sir146OrdenesCliente SIR_Sir146OrdenesCliente { get; set; } // FK_SIR_52_FACTURAS_SIR_146_ORDENES_CLIENTES

        /// <summary>
        /// Parent SIR_Sir206Remesa pointed by [SIR_52_FACTURAS].([NIdRem206]) (FK_SIR_52_FACTURAS_SIR_206_REMESAS)
        /// </summary>
        public virtual SIR_Sir206Remesa SIR_Sir206Remesa { get; set; } // FK_SIR_52_FACTURAS_SIR_206_REMESAS

        /// <summary>
        /// Parent SIR_Sir299ArchivosFactura pointed by [SIR_52_FACTURAS].([NIdArchFac299]) (FK_SIR_52_FACTURAS_SIR_299_ARCHIVOS_FACTURAS)
        /// </summary>
        public virtual SIR_Sir299ArchivosFactura SIR_Sir299ArchivosFactura { get; set; } // FK_SIR_52_FACTURAS_SIR_299_ARCHIVOS_FACTURAS

        /// <summary>
        /// Parent SIR_Sir346SedDocument pointed by [SIR_52_FACTURAS].([NIdShipper346]) (FK_SIR_52_FACTURAS_SIR_346_SED_DOCUMENTS_nIdShipper346)
        /// </summary>
        public virtual SIR_Sir346SedDocument SIR_Sir346SedDocument { get; set; } // FK_SIR_52_FACTURAS_SIR_346_SED_DOCUMENTS_nIdShipper346

        /// <summary>
        /// Parent SIR_Sir42Proveedore pointed by [SIR_52_FACTURAS].([NIdProveedor42]) (FK_SIR_52_FACTURAS_SIR_42_PROVEEDORES)
        /// </summary>
        public virtual SIR_Sir42Proveedore SIR_Sir42Proveedore { get; set; } // FK_SIR_52_FACTURAS_SIR_42_PROVEEDORES

        /// <summary>
        /// Parent SIR_Sir49OperacionesFactura pointed by [SIR_52_FACTURAS].([NIdOperFact49]) (FK_SIR_52_FACTURAS_SIR_49_OPERACIONES_FACTURAS)
        /// </summary>
        public virtual SIR_Sir49OperacionesFactura SIR_Sir49OperacionesFactura { get; set; } // FK_SIR_52_FACTURAS_SIR_49_OPERACIONES_FACTURAS

        /// <summary>
        /// Parent SIR_Sir52Factura pointed by [SIR_52_FACTURAS].([NIdFacturaSubOrig52]) (FK_SIR_52_FACTURAS_SIR_52_FACTURAS_SUBDIVISION)
        /// </summary>
        public virtual SIR_Sir52Factura SIR_Sir52Factura1 { get; set; } // FK_SIR_52_FACTURAS_SIR_52_FACTURAS_SUBDIVISION

        /// <summary>
        /// Parent SIR_Sir53Incoterm pointed by [SIR_52_FACTURAS].([NIdIncoterm53]) (FK_SIR_52_FACTURAS_SIR_53_INCOTERMS)
        /// </summary>
        public virtual SIR_Sir53Incoterm SIR_Sir53Incoterm { get; set; } // FK_SIR_52_FACTURAS_SIR_53_INCOTERMS

        /// <summary>
        /// Parent SIR_Sir71SucursalPatenteAduana pointed by [SIR_52_FACTURAS].([NIdSucPatAdu71]) (FK_SIR_52_FACTURAS_SIR_71_SUCURSAL_PATENTE_ADUANA)
        /// </summary>
        public virtual SIR_Sir71SucursalPatenteAduana SIR_Sir71SucursalPatenteAduana { get; set; } // FK_SIR_52_FACTURAS_SIR_71_SUCURSAL_PATENTE_ADUANA

        public SIR_Sir52Factura()
        {
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            NValorMercancias = 0.0m;
            BSinPartidas = false;
            NValorFactParidad = 0m;
            SIR_Sir11FacturasPartida = new System.Collections.Generic.List<SIR_Sir11FacturasPartida>();
            SIR_Sir128PedidosCliente = new System.Collections.Generic.List<SIR_Sir128PedidosCliente>();
            SIR_Sir202ComplemFraccAgrup = new System.Collections.Generic.List<SIR_Sir202ComplemFraccAgrup>();
            SIR_Sir274FacturasProfepa = new System.Collections.Generic.List<SIR_Sir274FacturasProfepa>();
            SIR_Sir392FraccionesProveeMv = new System.Collections.Generic.List<SIR_Sir392FraccionesProveeMv>();
            SIR_Sir52Factura2 = new System.Collections.Generic.List<SIR_Sir52Factura>();
            SIR_Sir55FacturasIncrementable = new System.Collections.Generic.List<SIR_Sir55FacturasIncrementable>();
            SIR_Sir63Documento = new System.Collections.Generic.List<SIR_Sir63Documento>();
            SIR_Sir645DetalleEnvioCoveFactura = new System.Collections.Generic.List<SIR_Sir645DetalleEnvioCoveFactura>();
            SIR_Sir781ConsultaExpedienteCove = new System.Collections.Generic.List<SIR_Sir781ConsultaExpedienteCove>();
            SIR_Sir60Referencia = new System.Collections.Generic.List<SIR_Sir60Referencia>();
            SIR_Sir74ConocimientosMaritimo = new System.Collections.Generic.List<SIR_Sir74ConocimientosMaritimo>();
            SIR_Sir695HistSubdivision = new System.Collections.Generic.List<SIR_Sir695HistSubdivision>();
        }
    }

}
// </auto-generated>
