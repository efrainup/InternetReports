// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_210_OPERACIONES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir210Operacione
    {
        [Required]
        [Display(Name = "N ID oper 210")]
        public int NIdOper210 { get; set; } // nIdOper210 (Primary key)

        [Display(Name = "S primer valor")]
        public string SPrimerValor { get; set; } // sPrimerValor

        [Display(Name = "N tipo prim valor")]
        public byte? NTipoPrimValor { get; set; } // nTipoPrimValor

        [Display(Name = "N tipo operacion")]
        public byte? NTipoOperacion { get; set; } // nTipoOperacion

        [Display(Name = "S seg valor")]
        public string SSegValor { get; set; } // sSegValor

        [Display(Name = "N tipo seg valor")]
        public byte? NTipoSegValor { get; set; } // nTipoSegValor

        [Display(Name = "N ID prim operacion 210")]
        public int? NIdPrimOperacion210 { get; set; } // nIdPrimOperacion210

        [Display(Name = "N ID seg operacion 210")]
        public int? NIdSegOperacion210 { get; set; } // nIdSegOperacion210

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Display(Name = "N ID concepto")]
        public int? NIdConcepto { get; set; } // nIdConcepto

        [Display(Name = "N ID criterio 212")]
        public int? NIdCriterio212 { get; set; } // nIdCriterio212

        [Display(Name = "N tipo condicion")]
        public byte? NTipoCondicion { get; set; } // nTipoCondicion

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir210Operacione where [SIR_210_OPERACIONES].[nIdPrimOperacion210] point to this entity (FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_PRIMERA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir210Operacione> SIR_Sir210Operacione2 { get; set; } // SIR_210_OPERACIONES.FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_PRIMERA
        /// <summary>
        /// Child SIR_Sir210Operacione where [SIR_210_OPERACIONES].[nIdSegOperacion210] point to this entity (FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_SEGUNDA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir210Operacione> SIR_Sir210Operacione4 { get; set; } // SIR_210_OPERACIONES.FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_SEGUNDA

        // Foreign keys

        /// <summary>
        /// Parent CatPro pointed by [SIR_210_OPERACIONES].([NIdConcepto]) (FK_SIR_210_OPERACIONES_cat_pro)
        /// </summary>
        public virtual CatPro CatPro { get; set; } // FK_SIR_210_OPERACIONES_cat_pro

        /// <summary>
        /// Parent CatUsr pointed by [SIR_210_OPERACIONES].([NIdUsuarioEd]) (FK_SIR_210_OPERACIONES_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_210_OPERACIONES_cat_usr

        /// <summary>
        /// Parent SIR_Sir210Operacione pointed by [SIR_210_OPERACIONES].([NIdPrimOperacion210]) (FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_PRIMERA)
        /// </summary>
        public virtual SIR_Sir210Operacione SIR_Sir210Operacione1 { get; set; } // FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_PRIMERA

        /// <summary>
        /// Parent SIR_Sir210Operacione pointed by [SIR_210_OPERACIONES].([NIdSegOperacion210]) (FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_SEGUNDA)
        /// </summary>
        public virtual SIR_Sir210Operacione SIR_Sir210Operacione3 { get; set; } // FK_SIR_210_OPERACIONES_SIR_210_OPERACIONES_SEGUNDA

        /// <summary>
        /// Parent SIR_Sir212CriteriosCobro pointed by [SIR_210_OPERACIONES].([NIdCriterio212]) (FK_SIR_210_OPERACIONES_SIR_212_CRITERIOS_COBRO)
        /// </summary>
        public virtual SIR_Sir212CriteriosCobro SIR_Sir212CriteriosCobro { get; set; } // FK_SIR_210_OPERACIONES_SIR_212_CRITERIOS_COBRO

        public SIR_Sir210Operacione()
        {
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            SIR_Sir210Operacione2 = new System.Collections.Generic.List<SIR_Sir210Operacione>();
            SIR_Sir210Operacione4 = new System.Collections.Generic.List<SIR_Sir210Operacione>();
        }
    }

}
// </auto-generated>
