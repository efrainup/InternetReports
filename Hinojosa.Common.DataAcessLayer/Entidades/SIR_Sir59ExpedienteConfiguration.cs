// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_59_EXPEDIENTES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir59ExpedienteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir59Expediente>
    {
        public SIR_Sir59ExpedienteConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir59ExpedienteConfiguration(string schema)
        {
            ToTable("SIR_59_EXPEDIENTES", schema);
            HasKey(x => x.NIdExpediente59);

            Property(x => x.NIdExpediente59).HasColumnName(@"nIdExpediente59").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SExpediente).HasColumnName(@"sExpediente").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DFechaApertura).HasColumnName(@"dFechaApertura").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsOptional();
            Property(x => x.DFechaOperacion).HasColumnName(@"dFechaOperacion").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NStatusVig).HasColumnName(@"nStatusVig").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsOptional();
            Property(x => x.NIdCliente07).HasColumnName(@"nIdCliente07").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Admin_Adminc07Cliente).WithMany(b => b.SIR_Sir59Expediente).HasForeignKey(c => c.NIdCliente07).WillCascadeOnDelete(false); // FK_SIR_59_EXPEDIENTES_ADMINC_07_CLIENTES
            HasOptional(a => a.CatCliente).WithMany(b => b.SIR_Sir59Expediente).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_59_EXPEDIENTES_cat_clientes
            HasOptional(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir59Expediente).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_59_EXPEDIENTES_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
