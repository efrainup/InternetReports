// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // bco_transferencias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BcoTransferenciaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BcoTransferencia>
    {
        public BcoTransferenciaConfiguration()
            : this("dbo")
        {
        }

        public BcoTransferenciaConfiguration(string schema)
        {
            ToTable("bco_transferencias", schema);
            HasKey(x => x.IdBcoTrn);

            Property(x => x.IdBcoTrn).HasColumnName(@"id_bco_trn").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUsr).HasColumnName(@"id_usr").HasColumnType("int").IsRequired();
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.IdCpt).HasColumnName(@"id_cpt").HasColumnType("int").IsRequired();
            Property(x => x.IdCtaCar).HasColumnName(@"id_cta_car").HasColumnType("int").IsRequired();
            Property(x => x.IdCtaAbo).HasColumnName(@"id_cta_abo").HasColumnType("int").IsRequired();
            Property(x => x.IdBcoAuxCar).HasColumnName(@"id_bco_aux_car").HasColumnType("int").IsRequired();
            Property(x => x.IdBcoAuxAbo).HasColumnName(@"id_bco_aux_abo").HasColumnType("int").IsRequired();
            Property(x => x.IdTipDoc).HasColumnName(@"id_tip_doc").HasColumnType("int").IsRequired();
            Property(x => x.NumDoc).HasColumnName(@"num_doc").HasColumnType("int").IsRequired();
            Property(x => x.FecReg).HasColumnName(@"fec_reg").HasColumnType("datetime").IsRequired();
            Property(x => x.FecDoc).HasColumnName(@"fec_doc").HasColumnType("datetime").IsRequired();
            Property(x => x.NumDocCli).HasColumnName(@"num_doc_cli").HasColumnType("int").IsRequired();
            Property(x => x.@Ref).HasColumnName(@"ref").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdMdaCar).HasColumnName(@"id_mda_car").HasColumnType("int").IsRequired();
            Property(x => x.IdMdaAbo).HasColumnName(@"id_mda_abo").HasColumnType("int").IsRequired();
            Property(x => x.Tc).HasColumnName(@"tc").HasColumnType("float").IsRequired();
            Property(x => x.Oper).HasColumnName(@"oper").HasColumnType("tinyint").IsRequired();
            Property(x => x.Monto).HasColumnName(@"monto").HasColumnType("float").IsRequired();
            Property(x => x.Status).HasColumnName(@"status").HasColumnType("tinyint").IsRequired();
            Property(x => x.Tc2).HasColumnName(@"tc2").HasColumnType("float").IsRequired();
            Property(x => x.Oper2).HasColumnName(@"oper2").HasColumnType("tinyint").IsRequired();
            Property(x => x.Monto2).HasColumnName(@"monto2").HasColumnType("float").IsRequired();
            Property(x => x.IdPol).HasColumnName(@"id_pol").HasColumnType("int").IsRequired();
            Property(x => x.IdTipTrn).HasColumnName(@"id_tip_trn").HasColumnType("int").IsRequired();
            Property(x => x.NumChq).HasColumnName(@"num_chq").HasColumnType("int").IsRequired();
            Property(x => x.CChq).HasColumnName(@"c_chq").HasColumnType("tinyint").IsRequired();
            Property(x => x.CAboCta).HasColumnName(@"c_abo_cta").HasColumnType("tinyint").IsRequired();
            Property(x => x.Saldo).HasColumnName(@"saldo").HasColumnType("float").IsRequired();
            Property(x => x.IdSuc).HasColumnName(@"id_suc").HasColumnType("int").IsRequired();
            Property(x => x.MtoCom).HasColumnName(@"mto_com").HasColumnType("float").IsRequired();
            Property(x => x.IdMdaCom).HasColumnName(@"id_mda_com").HasColumnType("int").IsRequired();
            Property(x => x.OperCom).HasColumnName(@"oper_com").HasColumnType("tinyint").IsRequired();
            Property(x => x.TcCom).HasColumnName(@"tc_com").HasColumnType("float").IsRequired();
            Property(x => x.MtoComBse).HasColumnName(@"mto_com_bse").HasColumnType("float").IsRequired();
            Property(x => x.IdInt).HasColumnName(@"id_int").HasColumnType("int").IsRequired();
            Property(x => x.IdBcoDoc).HasColumnName(@"id_bco_doc").HasColumnType("bigint").IsRequired();
            Property(x => x.IdEnt).HasColumnName(@"id_ent").HasColumnType("bigint").IsRequired();
            Property(x => x.IdRef).HasColumnName(@"id_ref").HasColumnType("int").IsOptional();
            Property(x => x.IdCtaDdcCar).HasColumnName(@"id_cta_ddc_car").HasColumnType("int").IsRequired();
            Property(x => x.IdCtaDdcAbo).HasColumnName(@"id_cta_ddc_abo").HasColumnType("int").IsRequired();
            Property(x => x.TipSat).HasColumnName(@"tip_sat").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(3);

            // Foreign keys
            HasRequired(a => a.BcoCuenta_IdCtaAbo).WithMany(b => b.BcoTransferencias_IdCtaAbo).HasForeignKey(c => c.IdCtaAbo).WillCascadeOnDelete(false); // FK_bco_transferencias_bco_cuentas1
            HasRequired(a => a.BcoCuenta_IdCtaCar).WithMany(b => b.BcoTransferencias_IdCtaCar).HasForeignKey(c => c.IdCtaCar).WillCascadeOnDelete(false); // FK_bco_transferencias_bco_cuentas
            HasRequired(a => a.CatDocto).WithMany(b => b.BcoTransferencias).HasForeignKey(c => c.IdTipDoc).WillCascadeOnDelete(false); // FK_bco_transferencias_cat_doctos
            HasRequired(a => a.MonMoneda_IdMdaAbo).WithMany(b => b.BcoTransferencias_IdMdaAbo).HasForeignKey(c => c.IdMdaAbo).WillCascadeOnDelete(false); // FK_bco_transferencias_mon_monedas1
            HasRequired(a => a.MonMoneda_IdMdaCar).WithMany(b => b.BcoTransferencias_IdMdaCar).HasForeignKey(c => c.IdMdaCar).WillCascadeOnDelete(false); // FK_bco_transferencias_mon_monedas
            HasRequired(a => a.SisNota).WithMany(b => b.BcoTransferencias).HasForeignKey(c => c.IdNota).WillCascadeOnDelete(false); // FK_bco_transferencias_sis_notas
        }
    }

}
// </auto-generated>
