// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_40_CONFIG_VERSIONADOR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira40ConfigVersionadorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIRAdmin_Sira40ConfigVersionador>
    {
        public SIRAdmin_Sira40ConfigVersionadorConfiguration()
            : this("SIRAdmin")
        {
        }

        public SIRAdmin_Sira40ConfigVersionadorConfiguration(string schema)
        {
            ToTable("SIRA_40_CONFIG_VERSIONADOR", schema);
            HasKey(x => x.NIdConfigVer40);

            Property(x => x.NIdConfigVer40).HasColumnName(@"nIdConfigVer40").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SClienteSvn).HasColumnName(@"sClienteSvn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.VPasswordSvn).HasColumnName(@"vPasswordSvn").HasColumnType("varbinary").IsRequired().HasMaxLength(50);
            Property(x => x.SRepositorioLocal).HasColumnName(@"sRepositorioLocal").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SUrlRepositorio).HasColumnName(@"sUrlRepositorio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsRequired();
            Property(x => x.BCleanUp).HasColumnName(@"bCleanUp").HasColumnType("bit").IsRequired();
            Property(x => x.BRespaldarVersion).HasColumnName(@"bRespaldarVersion").HasColumnType("bit").IsRequired();
            Property(x => x.BBloqueada).HasColumnName(@"bBloqueada").HasColumnType("bit").IsRequired();
            Property(x => x.NNumVersionLog).HasColumnName(@"nNumVersionLog").HasColumnType("int").IsRequired();
        }
    }

}
// </auto-generated>
