// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // sis_xml_pasivos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisXmlPasivo
    {
        [Required]
        [Display(Name = "Id sis xml pasivos")]
        public int IdSisXmlPasivos { get; set; } // id_sis_xml_pasivos (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(36)]
        [StringLength(36)]
        [Display(Name = "Uuid")]
        public string Uuid { get; set; } // UUID (length: 36)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Arch")]
        public string Arch { get; set; } // arch (length: 50)

        [Required]
        [Display(Name = "Status pas")]
        public int StatusPas { get; set; } // status_pas

        [Required]
        [Display(Name = "Status sat")]
        public int StatusSat { get; set; } // status_sat

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ult val")]
        public System.DateTime FecUltVal { get; set; } // fec_ult_val

        [Required]
        [Display(Name = "Status xml")]
        public int StatusXml { get; set; } // status_xml

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec xml")]
        public System.DateTime FecXml { get; set; } // fec_xml

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec afe")]
        public System.DateTime FecAfe { get; set; } // fec_afe

        [Required]
        [Display(Name = "Id usr afe")]
        public int IdUsrAfe { get; set; } // id_usr_afe

        [Display(Name = "Tipo prov")]
        public int? TipoProv { get; set; } // tipo_prov

        [Required(AllowEmptyStrings = true)]
        [MaxLength(16)]
        [StringLength(16)]
        [Display(Name = "Rfc emisor")]
        public string RfcEmisor { get; set; } // rfc_emisor (length: 16)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Nombre emisor")]
        public string NombreEmisor { get; set; } // nombre_emisor (length: 60)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(16)]
        [StringLength(16)]
        [Display(Name = "Rfc receptor")]
        public string RfcReceptor { get; set; } // rfc_receptor (length: 16)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Nombre receptor")]
        public string NombreReceptor { get; set; } // nombre_receptor (length: 60)

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc

        [Display(Name = "Id doc det")]
        public int? IdDocDet { get; set; } // id_doc_det

        [Display(Name = "Sub total")]
        public double? SubTotal { get; set; } // sub_total

        [Required]
        [Display(Name = "Imptos")]
        public double Imptos { get; set; } // imptos

        [Required]
        [Display(Name = "Total")]
        public double Total { get; set; } // total

        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Detalle")]
        public string Detalle { get; set; } // detalle (length: 400)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(300)]
        [StringLength(300)]
        [Display(Name = "Descripcion")]
        public string Descripcion { get; set; } // descripcion (length: 300)

        [Required]
        [Display(Name = "Es crp")]
        public int EsCrp { get; set; } // es_crp

        public SisXmlPasivo()
        {
            StatusPas = 0;
            IdTipDoc = 0;
            IdDoc = 0;
            IdDocDet = 0;
            Descripcion = "";
            EsCrp = 0;
        }
    }

}
// </auto-generated>
