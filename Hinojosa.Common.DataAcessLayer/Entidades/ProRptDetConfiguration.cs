// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // pro_rpt_det
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProRptDetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProRptDet>
    {
        public ProRptDetConfiguration()
            : this("dbo")
        {
        }

        public ProRptDetConfiguration(string schema)
        {
            ToTable("pro_rpt_det", schema);
            HasKey(x => x.IdRptProDet);

            Property(x => x.IdRptProDet).HasColumnName(@"id_rpt_pro_det").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdRptPro).HasColumnName(@"id_rpt_pro").HasColumnType("int").IsRequired();
            Property(x => x.TipMov).HasColumnName(@"tip_mov").HasColumnType("tinyint").IsRequired();
            Property(x => x.NumRpt).HasColumnName(@"num_rpt").HasColumnType("int").IsRequired();
            Property(x => x.Sec).HasColumnName(@"sec").HasColumnType("int").IsRequired();
            Property(x => x.IdProDet).HasColumnName(@"id_pro_det").HasColumnType("int").IsRequired();
            Property(x => x.IdAlmac).HasColumnName(@"id_almac").HasColumnType("int").IsRequired();
            Property(x => x.Cant).HasColumnName(@"cant").HasColumnType("real").IsRequired();
            Property(x => x.CantReal).HasColumnName(@"cant_real").HasColumnType("real").IsRequired();
            Property(x => x.CantDesecho).HasColumnName(@"cant_desecho").HasColumnType("real").IsRequired();
            Property(x => x.CantDesechoReal).HasColumnName(@"cant_desecho_real").HasColumnType("real").IsRequired();
            Property(x => x.FactMerma).HasColumnName(@"fact_merma").HasColumnType("real").IsRequired();
            Property(x => x.CantMerma).HasColumnName(@"cant_merma").HasColumnType("real").IsRequired();
            Property(x => x.IdTipCto).HasColumnName(@"id_tip_cto").HasColumnType("int").IsRequired();
            Property(x => x.Des).HasColumnName(@"des").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Tasa).HasColumnName(@"tasa").HasColumnType("real").IsRequired();
            Property(x => x.TasaReal).HasColumnName(@"tasa_real").HasColumnType("real").IsRequired();
            Property(x => x.Costo).HasColumnName(@"costo").HasColumnType("real").IsRequired();
            Property(x => x.Status).HasColumnName(@"status").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdComSerLot).HasColumnName(@"id_com_ser_lot").HasColumnType("int").IsRequired();
            Property(x => x.IdKardex).HasColumnName(@"id_kardex").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.CatAlmac).WithMany(b => b.ProRptDets).HasForeignKey(c => c.IdAlmac).WillCascadeOnDelete(false); // FK_pro_rpt_det_cat_almac
            HasRequired(a => a.ProRptEnc).WithMany(b => b.ProRptDets).HasForeignKey(c => c.IdRptPro).WillCascadeOnDelete(false); // FK_pro_rpt_det_pro_rpt_enc
        }
    }

}
// </auto-generated>
