// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_379_FACTURAS_PENDIENTES_HONDA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir379FacturasPendientesHonda
    {
        [Required]
        [Display(Name = "N ID factura pendiente 379")]
        public int NIdFacturaPendiente379 { get; set; } // nIdFacturaPendiente379 (Primary key)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S contador")]
        public string SContador { get; set; } // sContador (length: 3)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S oper")]
        public string SOper { get; set; } // sOper (length: 3)

        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "S clave ped")]
        public string SClavePed { get; set; } // sClavePed (length: 2)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S factura")]
        public string SFactura { get; set; } // sFactura (length: 30)

        [DataType(DataType.DateTime)]
        [Display(Name = "S fecha")]
        public System.DateTime? SFecha { get; set; } // sFecha

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S cve moneda")]
        public string SCveMoneda { get; set; } // sCveMoneda (length: 3)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S cve incoterm")]
        public string SCveIncoterm { get; set; } // sCveIncoterm (length: 3)

        [Display(Name = "N peso bruto")]
        public decimal? NPesoBruto { get; set; } // nPesoBruto

        [Display(Name = "S cajas")]
        public int? SCajas { get; set; } // sCajas

        [Display(Name = "N piezas")]
        public decimal? NPiezas { get; set; } // nPiezas

        [Display(Name = "N pallets")]
        public int? NPallets { get; set; } // nPallets

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S cve destino")]
        public string SCveDestino { get; set; } // sCveDestino (length: 3)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S modo transp")]
        public string SModoTransp { get; set; } // sModoTransp (length: 3)

        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "S linea transp")]
        public string SLineaTransp { get; set; } // sLineaTransp (length: 20)

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha eta")]
        public System.DateTime? DFechaEta { get; set; } // dFechaETA

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S bl")]
        public string SBl { get; set; } // sBL (length: 15)

        [Display(Name = "N flete")]
        public decimal? NFlete { get; set; } // nFlete

        [Display(Name = "N gastos")]
        public decimal? NGastos { get; set; } // nGastos

        [Display(Name = "N seguros")]
        public decimal? NSeguros { get; set; } // nSeguros

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S cod vendedor")]
        public string SCodVendedor { get; set; } // sCodVendedor (length: 3)

        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "S nombre vendedor")]
        public string SNombreVendedor { get; set; } // sNombreVendedor (length: 35)

        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "S rfcv endedor")]
        public string SRfcVendedor { get; set; } // sRFCVendedor (length: 35)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S curpv endedor")]
        public string SCurpVendedor { get; set; } // sCURPVendedor (length: 30)

        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "S direcc vendedor")]
        public string SDireccVendedor { get; set; } // sDireccVendedor (length: 35)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S ciudad vendedor")]
        public string SCiudadVendedor { get; set; } // sCiudadVendedor (length: 30)

        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "S estado vendedor")]
        public string SEstadoVendedor { get; set; } // sEstadoVendedor (length: 25)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S cpv endedor")]
        public string SCpVendedor { get; set; } // sCPVendedor (length: 15)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S pais vendedor")]
        public string SPaisVendedor { get; set; } // sPaisVendedor (length: 3)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S tel vendedor")]
        public string STelVendedor { get; set; } // sTelVendedor (length: 15)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S fax vendedor")]
        public string SFaxVendedor { get; set; } // sFaxVendedor (length: 15)

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S cod comprador")]
        public string SCodComprador { get; set; } // sCodComprador (length: 12)

        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "S nombre comprador")]
        public string SNombreComprador { get; set; } // sNombreComprador (length: 35)

        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "S rfcc omprador")]
        public string SRfcComprador { get; set; } // sRFCComprador (length: 35)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S curpc omprador")]
        public string SCurpComprador { get; set; } // sCURPComprador (length: 30)

        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "S direcc comprador")]
        public string SDireccComprador { get; set; } // sDireccComprador (length: 35)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S ciudad comprador")]
        public string SCiudadComprador { get; set; } // sCiudadComprador (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S estado comprador")]
        public string SEstadoComprador { get; set; } // sEstadoComprador (length: 30)

        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "S cpc omprador")]
        public string SCpComprador { get; set; } // sCPComprador (length: 25)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S pais comprador")]
        public string SPaisComprador { get; set; } // sPaisComprador (length: 3)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S tel comprador")]
        public string STelComprador { get; set; } // sTelComprador (length: 15)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S fax comprador")]
        public string SFaxComprador { get; set; } // sFaxComprador (length: 15)

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha embarque")]
        public System.DateTime? DFechaEmbarque { get; set; } // dFechaEmbarque

        [Display(Name = "N valor dolares")]
        public decimal? NValorDolares { get; set; } // nValorDolares

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S num contenedor")]
        public string SNumContenedor { get; set; } // sNumContenedor (length: 15)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S referencia agente")]
        public string SReferenciaAgente { get; set; } // sReferenciaAgente (length: 10)

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "S consecutivo ref")]
        public string SConsecutivoRef { get; set; } // sConsecutivoRef (length: 5)

        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "S version ficha")]
        public string SVersionFicha { get; set; } // sVersionFicha (length: 3)

        [Display(Name = "N tipo pedimento")]
        public byte? NTipoPedimento { get; set; } // nTipoPedimento
    }

}
// </auto-generated>
