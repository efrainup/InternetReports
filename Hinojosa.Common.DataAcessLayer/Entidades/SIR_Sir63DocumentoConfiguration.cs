// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_63_DOCUMENTOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir63DocumentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir63Documento>
    {
        public SIR_Sir63DocumentoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir63DocumentoConfiguration(string schema)
        {
            ToTable("SIR_63_DOCUMENTOS", schema);
            HasKey(x => x.NIdDocumento63);

            Property(x => x.NIdDocumento63).HasColumnName(@"nIdDocumento63").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SNombre).HasColumnName(@"sNombre").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(60);
            Property(x => x.NIdTipoDocto62).HasColumnName(@"nIdTipoDocto62").HasColumnType("int").IsRequired();
            Property(x => x.SDescripcion).HasColumnName(@"sDescripcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsOptional();
            Property(x => x.DFechaRecepcion).HasColumnName(@"dFechaRecepcion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaAlta).HasColumnName(@"dFechaAlta").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdUsuario).HasColumnName(@"nIdUsuario").HasColumnType("int").IsOptional();
            Property(x => x.DFechaSolicitado).HasColumnName(@"dFechaSolicitado").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaEnvio).HasColumnName(@"dFechaEnvio").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NTipoVersion).HasColumnName(@"nTipoVersion").HasColumnType("int").IsRequired();
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsOptional();
            Property(x => x.DFechaIniCaducidad).HasColumnName(@"dFechaIniCaducidad").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaFinCaducidad).HasColumnName(@"dFechaFinCaducidad").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NCaducidad).HasColumnName(@"nCaducidad").HasColumnType("int").IsOptional();
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsOptional();
            Property(x => x.NIdUsu01).HasColumnName(@"nIdUsu01").HasColumnType("int").IsOptional();
            Property(x => x.SEDocument).HasColumnName(@"sEDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.SOperacion).HasColumnName(@"sOperacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.BCancelado).HasColumnName(@"bCancelado").HasColumnType("bit").IsOptional();
            Property(x => x.NIdCles305).HasColumnName(@"nIdCles305").HasColumnType("int").IsOptional();
            Property(x => x.DEnvioNotificacion).HasColumnName(@"dEnvioNotificacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdBoveda599).HasColumnName(@"nIdBoveda599").HasColumnType("int").IsOptional();
            Property(x => x.SRutaArchivos).HasColumnName(@"sRutaArchivos").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.NIdIndiceValor750).HasColumnName(@"nIdIndiceValor750").HasColumnType("int").IsOptional();
            Property(x => x.SSelloDigital).HasColumnName(@"sSelloDigital").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.DFechaRegistroDocto).HasColumnName(@"dFechaRegistroDocto").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SRutaXmlOperacion).HasColumnName(@"sRutaXMLOperacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.SRutaXmleDocument).HasColumnName(@"sRutaXMLEDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.NIdEntrada156).HasColumnName(@"nIdEntrada156").HasColumnType("int").IsOptional();
            Property(x => x.NIdRemesa206).HasColumnName(@"nIdRemesa206").HasColumnType("int").IsOptional();
            Property(x => x.NIdFactura52).HasColumnName(@"nIdFactura52").HasColumnType("int").IsOptional();
            Property(x => x.NIdEncargo455).HasColumnName(@"nIdEncargo455").HasColumnType("int").IsOptional();
            Property(x => x.NIdClienteCove397).HasColumnName(@"nIdClienteCOVE397").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Admin_Admina01Usuario).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdUsu01).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_ADMINA_01_USUARIOS
            HasOptional(a => a.Admin_Adminc07Cliente).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdClie07).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_ADMINC_07_CLIENTES
            HasOptional(a => a.CatCliente).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_cat_clientes
            HasOptional(a => a.CatUsr).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdUsuario).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_cat_usr
            HasOptional(a => a.SIR_Sir156EntradasBodega).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdEntrada156).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_SIR_156_ENTRADAS_BODEGAS
            HasOptional(a => a.SIR_Sir305Corresponsale).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdCles305).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_SIR_305_CORRESPONSALES
            HasOptional(a => a.SIR_Sir52Factura).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdFactura52).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_SIR_52_FACTURAS
            HasOptional(a => a.SIR_Sir60Referencia).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdReferencia60); // FK_SIR_63_DOCUMENTOS_SIR_60_REFERENCIAS
            HasRequired(a => a.SIR_Sir62TiposDocumento).WithMany(b => b.SIR_Sir63Documento).HasForeignKey(c => c.NIdTipoDocto62).WillCascadeOnDelete(false); // FK_SIR_63_DOCUMENTOS_SIR_62_TIPOS_DOCUMENTOS
        }
    }

}
// </auto-generated>
