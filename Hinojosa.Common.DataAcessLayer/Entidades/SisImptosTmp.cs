// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // sis_imptos_tmp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisImptosTmp
    {
        [Required]
        [Display(Name = "Id sis imptos tmp")]
        public int IdSisImptosTmp { get; set; } // id_sis_imptos_tmp (Primary key)

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        [Required]
        [Display(Name = "Num doc")]
        public int NumDoc { get; set; } // num_doc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Serie")]
        public string Serie { get; set; } // serie (length: 20)

        [Required]
        [Display(Name = "Num part")]
        public int NumPart { get; set; } // num_part

        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc

        [Required]
        [Display(Name = "Id doc det")]
        public int IdDocDet { get; set; } // id_doc_det

        [Required]
        [Display(Name = "Id impto")]
        public int IdImpto { get; set; } // id_impto

        [Required]
        [Display(Name = "Id impto det")]
        public int IdImptoDet { get; set; } // id_impto_det

        [Required]
        [Display(Name = "Id cod imp")]
        public int IdCodImp { get; set; } // id_cod_imp

        [Required]
        [Display(Name = "Tasa")]
        public double Tasa { get; set; } // tasa

        [Required]
        [Display(Name = "Id sesion")]
        public int IdSesion { get; set; } // id_sesion

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Mto imp")]
        public double MtoImp { get; set; } // mto_imp

        [Required]
        [Display(Name = "Id tip")]
        public int IdTip { get; set; } // id_tip

        [Required]
        [Display(Name = "Imp c tip")]
        public byte ImpCTip { get; set; } // impC_tip

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Imp c des")]
        public string ImpCDes { get; set; } // impC_des (length: 25)

        [Required]
        [Display(Name = "Imp c tasa")]
        public double ImpCTasa { get; set; } // impC_tasa

        [Required]
        [Display(Name = "Imp c ftr")]
        public double ImpCFtr { get; set; } // impC_ftr

        [Required]
        [Display(Name = "Imp c cant")]
        public double ImpCCant { get; set; } // impC_cant

        [Required]
        [Display(Name = "Imp c udc")]
        public double ImpCUdc { get; set; } // impC_UDC

        [Required]
        [Display(Name = "Imp c mto")]
        public double ImpCMto { get; set; } // impC_mto

        public SisImptosTmp()
        {
            IdSisImptosTmp = 0;
            IdTipDoc = 0;
            NumDoc = 0;
            Serie = "";
            NumPart = 0;
            IdDoc = 0;
            IdDocDet = 0;
            IdImpto = 0;
            IdImptoDet = 0;
            IdCodImp = 0;
            Tasa = 0.0;
            IdSesion = 0;
            Status = 1;
            MtoImp = 0;
            IdTip = 0;
            ImpCTip = 0;
            ImpCDes = "";
            ImpCTasa = 0;
            ImpCFtr = 0;
            ImpCCant = 0;
            ImpCUdc = 0;
            ImpCMto = 0;
        }
    }

}
// </auto-generated>
