// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_316_ARCHIVOS_KEY_AA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir316ArchivosKeyAa
    {
        [Required]
        [Display(Name = "N ID empleado")]
        public int NIdEmpleado { get; set; } // nIdEmpleado (Primary key)

        [Required]
        [Display(Name = "N ID patente 70")]
        public int NIdPatente70 { get; set; } // nIdPatente70 (Primary key)

        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "S ruta key")]
        public string SRutaKey { get; set; } // sRutaKey (length: 120)

        [Display(Name = "V clave secreta")]
        public byte[] VClaveSecreta { get; set; } // vClaveSecreta

        [Required]
        [Display(Name = "B clave aa")]
        public bool BClaveAa { get; set; } // bClaveAA

        [Required]
        [Display(Name = "B clave mandatario")]
        public bool BClaveMandatario { get; set; } // bClaveMandatario

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S usuario cove")]
        public string SUsuarioCove { get; set; } // sUsuarioCOVE (length: 100)

        [Display(Name = "V password cove")]
        public byte[] VPasswordCove { get; set; } // vPasswordCOVE

        [Display(Name = "B pide palabra secreta")]
        public bool? BPidePalabraSecreta { get; set; } // bPidePalabraSecreta

        [Display(Name = "N tipo key fiel")]
        public byte? NTipoKeyFiel { get; set; } // nTipoKeyFIEL

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S usuario doda")]
        public string SUsuarioDoda { get; set; } // sUsuarioDODA (length: 100)

        [Display(Name = "V password doda")]
        public byte[] VPasswordDoda { get; set; } // vPasswordDODA

        // Foreign keys

        /// <summary>
        /// Parent CatEmp pointed by [SIR_316_ARCHIVOS_KEY_AA].([NIdEmpleado]) (FK_SIR_316_ARCHIVOS_KEY_AA_cat_emp)
        /// </summary>
        public virtual CatEmp CatEmp { get; set; } // FK_SIR_316_ARCHIVOS_KEY_AA_cat_emp

        /// <summary>
        /// Parent SIR_Sir70Patente pointed by [SIR_316_ARCHIVOS_KEY_AA].([NIdPatente70]) (FK_SIR_316_ARCHIVOS_KEY_AA_SIR_70_PATENTES)
        /// </summary>
        public virtual SIR_Sir70Patente SIR_Sir70Patente { get; set; } // FK_SIR_316_ARCHIVOS_KEY_AA_SIR_70_PATENTES

        public SIR_Sir316ArchivosKeyAa()
        {
            BPidePalabraSecreta = false;
        }
    }

}
// </auto-generated>
