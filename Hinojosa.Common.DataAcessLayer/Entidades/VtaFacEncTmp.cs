// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // vta_fac_enc_tmp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VtaFacEncTmp
    {
        [Required]
        [Display(Name = "Id fac")]
        public int IdFac { get; set; } // id_fac (Primary key)

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [Display(Name = "Id cli")]
        public int IdCli { get; set; } // id_cli

        [Required]
        [Display(Name = "Id tipo doc")]
        public int IdTipoDoc { get; set; } // id_tipo_doc

        [Required]
        [Display(Name = "Numero")]
        public int Numero { get; set; } // numero

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha")]
        public System.DateTime Fecha { get; set; } // fecha

        [Required]
        [Display(Name = "Sub")]
        public double Sub { get; set; } // sub

        [Required]
        [Display(Name = "Iva")]
        public double Iva { get; set; } // iva

        [Required]
        [Display(Name = "Total")]
        public double Total { get; set; } // total

        [Required]
        [Display(Name = "Saldo")]
        public double Saldo { get; set; } // saldo

        [Required]
        [Display(Name = "Dcto")]
        public double Dcto { get; set; } // dcto

        [Required]
        [Display(Name = "Dcto mto")]
        public double DctoMto { get; set; } // dcto_mto

        [Required]
        [Display(Name = "Id suc")]
        public int IdSuc { get; set; } // id_suc

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Dias")]
        public byte Dias { get; set; } // dias

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha venc")]
        public System.DateTime FechaVenc { get; set; } // fecha_venc

        [Required]
        [Display(Name = "Id nota")]
        public int IdNota { get; set; } // id_nota

        [Required]
        [Display(Name = "Carg misc")]
        public double CargMisc { get; set; } // carg_misc

        [Required]
        [Display(Name = "Flete")]
        public double Flete { get; set; } // flete

        [Required]
        [Display(Name = "Iva flete")]
        public double IvaFlete { get; set; } // iva_flete

        [Required]
        [Display(Name = "Ret flete")]
        public double RetFlete { get; set; } // ret_flete

        [Required]
        [Display(Name = "Ret fle ptg")]
        public double RetFlePtg { get; set; } // ret_fle_ptg

        [Required]
        [Display(Name = "Ret isr")]
        public double RetIsr { get; set; } // ret_isr

        [Required]
        [Display(Name = "Ret isr ptg")]
        public double RetIsrPtg { get; set; } // ret_isr_ptg

        [Required]
        [Display(Name = "C dcto carg")]
        public byte CDctoCarg { get; set; } // c_dcto_carg

        [Required]
        [Display(Name = "C dcto flete")]
        public byte CDctoFlete { get; set; } // c_dcto_flete

        [Required]
        [Display(Name = "Id proy")]
        public int IdProy { get; set; } // id_proy

        [Required]
        [Display(Name = "Id ent")]
        public int IdEnt { get; set; } // id_ent

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Ref")]
        public string @Ref { get; set; } // ref (length: 25)

        [Required]
        [Display(Name = "Id vend")]
        public int IdVend { get; set; } // id_vend

        [Required]
        [Display(Name = "Ptg com")]
        public double PtgCom { get; set; } // ptg_com

        [Required]
        [Display(Name = "Com monto")]
        public double ComMonto { get; set; } // com_monto

        [Required]
        [Display(Name = "Com pag mto")]
        public double ComPagMto { get; set; } // com_pag_mto

        [Required]
        [Display(Name = "Tipo com")]
        public byte TipoCom { get; set; } // tipo_com

        [Required]
        [Display(Name = "Tipo fac")]
        public byte TipoFac { get; set; } // tipo_fac

        [Required]
        [Display(Name = "Cant vta")]
        public double CantVta { get; set; } // cant_vta

        [Required]
        [Display(Name = "Cant dev")]
        public double CantDev { get; set; } // cant_dev

        [Required]
        [Display(Name = "Importe dev")]
        public double ImporteDev { get; set; } // importe_dev

        [Required]
        [Display(Name = "Id mda")]
        public int IdMda { get; set; } // id_mda

        [Required]
        [Display(Name = "Tip cam")]
        public double TipCam { get; set; } // tip_cam

        [Required]
        [Display(Name = "Oper")]
        public byte Oper { get; set; } // oper

        [Required]
        [Display(Name = "Carg misc bse")]
        public double CargMiscBse { get; set; } // carg_misc_bse

        [Required]
        [Display(Name = "Flete bse")]
        public double FleteBse { get; set; } // flete_bse

        [Required]
        [Display(Name = "Iva flete bse")]
        public double IvaFleteBse { get; set; } // iva_flete_bse

        [Required]
        [Display(Name = "Ret flete bse")]
        public double RetFleteBse { get; set; } // ret_flete_bse

        [Required]
        [Display(Name = "Ret isr bse")]
        public double RetIsrBse { get; set; } // ret_isr_bse

        [Required]
        [Display(Name = "Sub bse")]
        public double SubBse { get; set; } // sub_bse

        [Required]
        [Display(Name = "Iva bse")]
        public double IvaBse { get; set; } // iva_bse

        [Required]
        [Display(Name = "Total bse")]
        public double TotalBse { get; set; } // total_bse

        [Required]
        [Display(Name = "Saldo bse")]
        public double SaldoBse { get; set; } // saldo_bse

        [Required]
        [Display(Name = "Dcto mto bse")]
        public double DctoMtoBse { get; set; } // dcto_mto_bse

        [Required]
        [Display(Name = "Id cod svr")]
        public int IdCodSvr { get; set; } // id_cod_svr

        [Required]
        [Display(Name = "Id lab")]
        public int IdLab { get; set; } // id_lab

        [Required]
        [Display(Name = "Id med env 1")]
        public int IdMedEnv1 { get; set; } // id_med_env1

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "No guia 1")]
        public string NoGuia1 { get; set; } // no_guia1 (length: 25)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec guia 1")]
        public System.DateTime FecGuia1 { get; set; } // fec_guia1

        [Required]
        [Display(Name = "Id med env 2")]
        public int IdMedEnv2 { get; set; } // id_med_env2

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "No guia 2")]
        public string NoGuia2 { get; set; } // no_guia2 (length: 25)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec guia 2")]
        public System.DateTime FecGuia2 { get; set; } // fec_guia2

        [Required]
        [Display(Name = "Id ped")]
        public int IdPed { get; set; } // id_ped

        [Required]
        [Display(Name = "Id cot")]
        public int IdCot { get; set; } // id_cot

        [Required]
        [Display(Name = "Num ped")]
        public int NumPed { get; set; } // num_ped

        [Required]
        [Display(Name = "Num cot")]
        public int NumCot { get; set; } // num_cot

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ent")]
        public System.DateTime FecEnt { get; set; } // fec_ent

        [Required]
        [Display(Name = "Id emp realizo")]
        public int IdEmpRealizo { get; set; } // id_emp_realizo

        [Required]
        [Display(Name = "Id emp aut")]
        public int IdEmpAut { get; set; } // id_emp_aut

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "No req cli")]
        public string NoReqCli { get; set; } // no_req_cli (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "No ped cli")]
        public string NoPedCli { get; set; } // no_ped_cli (length: 25)

        [Required]
        [Display(Name = "C surt")]
        public byte CSurt { get; set; } // c_surt

        [Required]
        [Display(Name = "Prioridad")]
        public byte Prioridad { get; set; } // prioridad

        [Required]
        [Display(Name = "Id sis edo act")]
        public int IdSisEdoAct { get; set; } // id_sis_edo_act

        [MaxLength(512)]
        [StringLength(512)]
        [Display(Name = "Falla")]
        public string Falla { get; set; } // falla (length: 512)

        [Required]
        [Display(Name = "Id cpt")]
        public int IdCpt { get; set; } // id_cpt

        // Reverse navigation

        /// <summary>
        /// Child VtaFacDetTmps where [vta_fac_det_tmp].[id_fac] point to this entity (FK_vta_fac_det_tmp_vta_fac_enc_tmp)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaFacDetTmp> VtaFacDetTmps { get; set; } // vta_fac_det_tmp.FK_vta_fac_det_tmp_vta_fac_enc_tmp

        // Foreign keys

        /// <summary>
        /// Parent CatCliente pointed by [vta_fac_enc_tmp].([IdCli]) (FK_vta_fac_enc_tmp_cat_clientes)
        /// </summary>
        public virtual CatCliente CatCliente { get; set; } // FK_vta_fac_enc_tmp_cat_clientes

        /// <summary>
        /// Parent CatUsr pointed by [vta_fac_enc_tmp].([IdUsr]) (FK_vta_fac_enc_tmp_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_vta_fac_enc_tmp_cat_usr

        public VtaFacEncTmp()
        {
            IdFac = 0;
            IdUsr = 0;
            IdCli = 0;
            IdTipoDoc = 0;
            Numero = 0;
            Sub = 0;
            Iva = 0;
            Total = 0;
            Saldo = 0;
            Dcto = 0;
            DctoMto = 0;
            IdSuc = 0;
            Status = 1;
            Dias = 0;
            IdNota = 0;
            CargMisc = 0;
            Flete = 0;
            IvaFlete = 0;
            RetFlete = 0;
            RetFlePtg = 0;
            RetIsr = 0;
            RetIsrPtg = 0;
            CDctoCarg = 0;
            CDctoFlete = 0;
            IdProy = 0;
            IdEnt = 0;
            @Ref = "";
            IdVend = 0;
            PtgCom = 0;
            ComMonto = 0;
            ComPagMto = 0;
            TipoCom = 1;
            TipoFac = 1;
            CantVta = 0;
            CantDev = 0;
            ImporteDev = 0;
            IdMda = 0;
            TipCam = 0;
            Oper = 0;
            CargMiscBse = 0;
            FleteBse = 0;
            IvaFleteBse = 0;
            RetFleteBse = 0;
            RetIsrBse = 0;
            SubBse = 0;
            IvaBse = 0;
            TotalBse = 0;
            SaldoBse = 0;
            DctoMtoBse = 0;
            IdCodSvr = 0;
            IdLab = 0;
            IdMedEnv1 = 0;
            NoGuia1 = "";
            IdMedEnv2 = 0;
            NoGuia2 = "";
            IdPed = 0;
            IdCot = 0;
            NumPed = 0;
            NumCot = 0;
            IdEmpRealizo = 0;
            IdEmpAut = 0;
            NoReqCli = "";
            NoPedCli = "";
            CSurt = 0;
            Prioridad = 0;
            IdSisEdoAct = 0;
            Falla = "";
            IdCpt = 0;
            VtaFacDetTmps = new System.Collections.Generic.List<VtaFacDetTmp>();
        }
    }

}
// </auto-generated>
