// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_136_TARIFA_MUELL_CALCULO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir136TarifaMuellCalculoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir136TarifaMuellCalculo>
    {
        public SIR_Sir136TarifaMuellCalculoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir136TarifaMuellCalculoConfiguration(string schema)
        {
            ToTable("SIR_136_TARIFA_MUELL_CALCULO", schema);
            HasKey(x => x.NIdTarMueCal136);

            Property(x => x.NIdTarMueCal136).HasColumnName(@"nIdTarMueCal136").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DFechaEntrada).HasColumnName(@"dFechaEntrada").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DFechaPago).HasColumnName(@"dFechaPago").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NPeso).HasColumnName(@"nPeso").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NIdReferencia60).HasColumnName(@"nIdReferencia60").HasColumnType("int").IsRequired();
            Property(x => x.NIdTerminal).HasColumnName(@"nIdTerminal").HasColumnType("int").IsRequired();
            Property(x => x.NRecargos).HasColumnName(@"nRecargos").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NIva).HasColumnName(@"nIVA").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NSubtotal).HasColumnName(@"nSubtotal").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.NTotal).HasColumnName(@"nTotal").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.NDiasLibres).HasColumnName(@"nDiasLibres").HasColumnType("smallint").IsOptional();
            Property(x => x.NDiasLibresRecargo).HasColumnName(@"nDiasLibresRecargo").HasColumnType("smallint").IsOptional();
            Property(x => x.NDiasTranscurridos).HasColumnName(@"nDiasTranscurridos").HasColumnType("smallint").IsOptional();
            Property(x => x.NDiasRecargos).HasColumnName(@"nDiasRecargos").HasColumnType("smallint").IsOptional();
            Property(x => x.BAplicaMuellaje).HasColumnName(@"bAplicaMuellaje").HasColumnType("bit").IsRequired();
            Property(x => x.NUnidadCobro).HasColumnName(@"nUnidadCobro").HasColumnType("int").IsOptional();
            Property(x => x.NTipoTarifa).HasColumnName(@"nTipoTarifa").HasColumnType("tinyint").IsRequired();
            Property(x => x.BAplicaCargaSuelta).HasColumnName(@"bAplicaCargaSuelta").HasColumnType("bit").IsRequired();
            Property(x => x.NTarifaTotalRecargos).HasColumnName(@"nTarifaTotalRecargos").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NRecargoDiario).HasColumnName(@"nRecargoDiario").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.NIdTipoMerc80).HasColumnName(@"nIdTipoMerc80").HasColumnType("int").IsOptional();
            Property(x => x.NIdSolicitud120).HasColumnName(@"nIdSolicitud120").HasColumnType("int").IsOptional();
            Property(x => x.NDescuento).HasColumnName(@"nDescuento").HasColumnType("decimal").IsOptional().HasPrecision(12,2);

            // Foreign keys
            HasOptional(a => a.SIR_Sir120SolicitudCheque).WithMany(b => b.SIR_Sir136TarifaMuellCalculo).HasForeignKey(c => c.NIdSolicitud120).WillCascadeOnDelete(false); // FK_SIR_136_TARIFA_MUELL_CALCULO_SIR_120_SOLICITUD_CHEQUES
            HasOptional(a => a.SIR_Sir80TiposMercancia).WithMany(b => b.SIR_Sir136TarifaMuellCalculo).HasForeignKey(c => c.NIdTipoMerc80).WillCascadeOnDelete(false); // FK_SIR_136_TARIFA_MUELL_CALCULO_SIR_80_TIPOS_MERCANCIA
            HasRequired(a => a.CatProv).WithMany(b => b.SIR_Sir136TarifaMuellCalculo).HasForeignKey(c => c.NIdTerminal).WillCascadeOnDelete(false); // FK_SIR_136_TARIFA_MUELL_CALCULO_cat_prov
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir136TarifaMuellCalculo).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_136_TARIFA_MUELL_CALCULO_cat_usr_ed
            HasRequired(a => a.SIR_Sir60Referencia).WithMany(b => b.SIR_Sir136TarifaMuellCalculo).HasForeignKey(c => c.NIdReferencia60).WillCascadeOnDelete(false); // FK_SIR_136_TARIFA_MUELL_CALCULO_SIR_60_REFERENCIAS
        }
    }

}
// </auto-generated>
