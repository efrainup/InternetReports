// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // MT_Procesos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MtProceso
    {
        [Required]
        [Display(Name = "N ID proceso m 2 b")]
        public int NIdProcesoM2B { get; set; } // nIdProcesoM2B (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S referencia")]
        public string SReferencia { get; set; } // sReferencia (length: 15)

        [Required]
        [Display(Name = "N tipo operacion")]
        public int NTipoOperacion { get; set; } // nTipoOperacion

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S cod proceso")]
        public string SCodProceso { get; set; } // sCodProceso (length: 15)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "S num referencia")]
        public string SNumReferencia { get; set; } // sNumReferencia (length: 15)

        [Required]
        [Display(Name = "B activo")]
        public bool BActivo { get; set; } // bActivo

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha alta")]
        public System.DateTime DFechaAlta { get; set; } // dFechaAlta

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha baja")]
        public System.DateTime? DFechaBaja { get; set; } // dFechaBaja

        [Display(Name = "B cargado cove ped")]
        public bool? BCargadoCovePed { get; set; } // bCargadoCOVE_PED

        public MtProceso()
        {
            BActivo = true;
            DFechaAlta = System.DateTime.Now;
            BCargadoCovePed = false;
        }
    }

}
// </auto-generated>
