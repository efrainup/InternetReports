// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // pro_rpt_lot_tmp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProRptLotTmp
    {
        [Required]
        [Display(Name = "Id orden")]
        public int IdOrden { get; set; } // id_orden (Primary key)

        [Required]
        [Display(Name = "Id pro")]
        public int IdPro { get; set; } // id_pro (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num lot")]
        public string NumLot { get; set; } // num_lot (Primary key) (length: 64)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser")]
        public string NumSer { get; set; } // num_ser (Primary key) (length: 64)

        [Required]
        [Display(Name = "Cant")]
        public float Cant { get; set; } // cant (Primary key)

        [Required]
        [Display(Name = "Id almac")]
        public int IdAlmac { get; set; } // id_almac (Primary key)

        ///<summary>
        /// 1=serie 2=lote 3=lote y serie
        ///</summary>
        [Required]
        [Display(Name = "Tipo")]
        public byte Tipo { get; set; } // tipo (Primary key)

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr (Primary key)

        ///<summary>
        /// Indica si ya se afecto en inventarios este movimiento 0=no 1=si
        ///</summary>
        [Required]
        [Display(Name = "C afect")]
        public byte CAfect { get; set; } // c_afect (Primary key)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec elab")]
        public System.DateTime FecElab { get; set; } // fec_elab (Primary key)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec cad")]
        public System.DateTime FecCad { get; set; } // fec_cad (Primary key)

        [Required]
        [Display(Name = "Cons")]
        public int Cons { get; set; } // cons (Primary key)

        public ProRptLotTmp()
        {
            IdOrden = 0;
            NumSer = "";
            IdAlmac = 0;
            Tipo = 0;
            IdUsr = 0;
            CAfect = 0;
            Cons = 0;
        }
    }

}
// </auto-generated>
