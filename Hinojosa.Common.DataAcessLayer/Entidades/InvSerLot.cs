// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // inv_ser_lot
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InvSerLot
    {
        [Required]
        [Display(Name = "Id ser lot")]
        public int IdSerLot { get; set; } // id_ser_lot (Primary key)

        [Required]
        [Display(Name = "Id pro")]
        public int IdPro { get; set; } // id_pro

        [Required]
        [Display(Name = "Id almac")]
        public int IdAlmac { get; set; } // id_almac

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num lot")]
        public string NumLot { get; set; } // num_lot (length: 64)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser")]
        public string NumSer { get; set; } // num_ser (length: 64)

        [Required]
        [Display(Name = "Existencia")]
        public double Existencia { get; set; } // existencia

        ///<summary>
        /// 1=Serie  2=Lote 3=Lote y Serie
        ///</summary>
        [Required]
        [Display(Name = "Tipo")]
        public byte Tipo { get; set; } // tipo

        ///<summary>
        /// Fecha de elaboraci√≥n del Lote
        ///</summary>
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec elab")]
        public System.DateTime FecElab { get; set; } // fec_elab

        ///<summary>
        /// Fecha de Caducidad
        ///</summary>
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec cad")]
        public System.DateTime FecCad { get; set; } // fec_cad

        [Required]
        [Display(Name = "Id cert")]
        public int IdCert { get; set; } // id_cert

        ///<summary>
        /// 1=tiene pedimento 0=No tiene Pedimiento
        ///</summary>
        [Required]
        [Display(Name = "C ped")]
        public byte CPed { get; set; } // c_ped

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Num ped")]
        public string NumPed { get; set; } // num_ped (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Aduana")]
        public string Aduana { get; set; } // aduana (length: 50)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha ped")]
        public System.DateTime FechaPed { get; set; } // fecha_ped

        ///<summary>
        /// 1=Disponible 2=Salida Mov. Inventario 3=Cancelado
        ///</summary>
        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Apartado")]
        public double Apartado { get; set; } // apartado

        [Required]
        [Display(Name = "Disponible")]
        public double Disponible { get; set; } // disponible

        [Required]
        [Display(Name = "Id mto ser lot")]
        public int IdMtoSerLot { get; set; } // id_mto_ser_lot

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser fin")]
        public string NumSerFin { get; set; } // num_ser_fin (length: 64)

        [Required]
        [Display(Name = "Id ped")]
        public int IdPed { get; set; } // id_ped

        [Required]
        [Display(Name = "C imp")]
        public byte CImp { get; set; } // c_imp

        [Required]
        [Display(Name = "Nlargo")]
        public double Nlargo { get; set; } // nlargo

        [Required]
        [Display(Name = "Nancho")]
        public double Nancho { get; set; } // nancho

        [Required]
        [Display(Name = "Nespesor")]
        public double Nespesor { get; set; } // nespesor

        [Required]
        [Display(Name = "Nvolumen")]
        public double Nvolumen { get; set; } // nvolumen

        [Required]
        [Display(Name = "Narea")]
        public double Narea { get; set; } // narea

        [Required]
        [Display(Name = "Npeso")]
        public double Npeso { get; set; } // npeso

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "S marca")]
        public string SMarca { get; set; } // sMarca (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S serie prov")]
        public string SSerieProv { get; set; } // sSerieProv (length: 100)

        [Required]
        [Display(Name = "Tipo ped")]
        public byte TipoPed { get; set; } // tipo_ped

        [Required]
        [Display(Name = "Costo lote")]
        public double CostoLote { get; set; } // costo_lote

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S etiqueta")]
        public string SEtiqueta { get; set; } // sEtiqueta (length: 250)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S etiqueta 2")]
        public string SEtiqueta2 { get; set; } // sEtiqueta2 (length: 250)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S etiqueta 3")]
        public string SEtiqueta3 { get; set; } // sEtiqueta3 (length: 250)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S etiqueta 4")]
        public string SEtiqueta4 { get; set; } // sEtiqueta4 (length: 250)

        // Reverse navigation

        /// <summary>
        /// Child InvMovSerLots where [inv_mov_ser_lot].[id_ser_lot] point to this entity (FK_inv_mov_ser_lot_inv_ser_lot)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InvMovSerLot> InvMovSerLots { get; set; } // inv_mov_ser_lot.FK_inv_mov_ser_lot_inv_ser_lot
        /// <summary>
        /// Child InvMovSerLotTmpDocs where [inv_mov_ser_lot_tmp_doc].[id_ser_lot] point to this entity (FK_inv_mov_ser_lot_inv_ser_lot_tmp_doc)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InvMovSerLotTmpDoc> InvMovSerLotTmpDocs { get; set; } // inv_mov_ser_lot_tmp_doc.FK_inv_mov_ser_lot_inv_ser_lot_tmp_doc

        // Foreign keys

        /// <summary>
        /// Parent CatAlmac pointed by [inv_ser_lot].([IdAlmac]) (FK_inv_ser_lot_cat_almac)
        /// </summary>
        public virtual CatAlmac CatAlmac { get; set; } // FK_inv_ser_lot_cat_almac

        /// <summary>
        /// Parent CatPro pointed by [inv_ser_lot].([IdPro]) (FK_inv_ser_lot_cat_pro)
        /// </summary>
        public virtual CatPro CatPro { get; set; } // FK_inv_ser_lot_cat_pro

        public InvSerLot()
        {
            IdAlmac = 0;
            NumSer = "";
            Existencia = 0;
            Tipo = 1;
            IdCert = 0;
            CPed = 0;
            NumPed = "";
            Aduana = "";
            Status = 1;
            Apartado = 0;
            Disponible = 0;
            IdMtoSerLot = 0;
            NumSerFin = "";
            IdPed = 0;
            CImp = 0;
            Nlargo = 0;
            Nancho = 0;
            Nespesor = 0;
            Nvolumen = 0;
            Narea = 0;
            Npeso = 0;
            SMarca = "";
            SSerieProv = "";
            TipoPed = 0;
            CostoLote = 0;
            SEtiqueta = "";
            SEtiqueta2 = "";
            SEtiqueta3 = "";
            SEtiqueta4 = "";
            InvMovSerLots = new System.Collections.Generic.List<InvMovSerLot>();
            InvMovSerLotTmpDocs = new System.Collections.Generic.List<InvMovSerLotTmpDoc>();
        }
    }

}
// </auto-generated>
