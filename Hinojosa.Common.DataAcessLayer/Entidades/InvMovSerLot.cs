// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // inv_mov_ser_lot
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InvMovSerLot
    {
        [Required]
        [Display(Name = "Id mov ser lot")]
        public int IdMovSerLot { get; set; } // id_mov_ser_lot (Primary key)

        [Required]
        [Display(Name = "Id ser lot")]
        public int IdSerLot { get; set; } // id_ser_lot

        [Required]
        [Display(Name = "Id almac")]
        public int IdAlmac { get; set; } // id_almac

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc

        [Required]
        [Display(Name = "Num doc")]
        public int NumDoc { get; set; } // num_doc

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha")]
        public System.DateTime Fecha { get; set; } // fecha

        [Required]
        [Display(Name = "Cant")]
        public double Cant { get; set; } // cant

        ///<summary>
        /// 1=Serie 2=Lote
        ///</summary>
        [Required]
        [Display(Name = "Tipo")]
        public byte Tipo { get; set; } // tipo

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec elab")]
        public System.DateTime FecElab { get; set; } // fec_elab

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec cad")]
        public System.DateTime FecCad { get; set; } // fec_cad

        [Required]
        [Display(Name = "Id sis cnl")]
        public int IdSisCnl { get; set; } // id_sis_cnl

        [Required]
        [Display(Name = "Id udm")]
        public int IdUdm { get; set; } // id_udm

        ///<summary>
        /// Factor respecto a la unidad de Inventario
        ///</summary>
        [Required]
        [Display(Name = "Ftr")]
        public double Ftr { get; set; } // ftr

        ///<summary>
        /// Cantidad en la unidad de inventario
        ///</summary>
        [Required]
        [Display(Name = "Cant inv")]
        public double CantInv { get; set; } // cant_inv

        [Required]
        [Display(Name = "Id ref")]
        public int IdRef { get; set; } // id_ref

        [Required]
        [Display(Name = "Id cen cto")]
        public int IdCenCto { get; set; } // id_cen_cto

        [Required]
        [Display(Name = "Id cod srv")]
        public int IdCodSrv { get; set; } // id_cod_srv

        [Required]
        [Display(Name = "Id cli")]
        public int IdCli { get; set; } // id_cli

        [Required]
        [Display(Name = "Id prov")]
        public int IdProv { get; set; } // id_prov

        [Required]
        [Display(Name = "Id cli fa da")]
        public int IdCliFaDa { get; set; } // id_cli_fa_da

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Serie")]
        public string Serie { get; set; } // serie (length: 10)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required]
        [Display(Name = "Id ver")]
        public int IdVer { get; set; } // id_ver

        [Required]
        [Display(Name = "C afe ser lot")]
        public int CAfeSerLot { get; set; } // c_afe_ser_lot

        [Required]
        [Display(Name = "Costo")]
        public double Costo { get; set; } // costo

        [Required]
        [Display(Name = "Costo total")]
        public double CostoTotal { get; set; } // costo_total

        [Required]
        [Display(Name = "Precio")]
        public double Precio { get; set; } // precio

        [Required]
        [Display(Name = "Importe")]
        public double Importe { get; set; } // importe

        [Required]
        [Display(Name = "Id mda")]
        public int IdMda { get; set; } // id_mda

        [Required]
        [Display(Name = "Oper")]
        public byte Oper { get; set; } // oper

        [Required]
        [Display(Name = "Tc")]
        public double Tc { get; set; } // tc

        [Required]
        [Display(Name = "Precio bse")]
        public double PrecioBse { get; set; } // precio_bse

        [Required]
        [Display(Name = "Importe bse")]
        public double ImporteBse { get; set; } // importe_bse

        [Required]
        [Display(Name = "C imp")]
        public byte CImp { get; set; } // c_imp

        [Required]
        [Display(Name = "Id ped")]
        public int IdPed { get; set; } // id_ped

        [Required]
        [Display(Name = "Cant surt")]
        public double CantSurt { get; set; } // cant_surt

        [Required]
        [Display(Name = "Cant surt aut")]
        public double CantSurtAut { get; set; } // cant_surt_aut

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser")]
        public string NumSer { get; set; } // num_ser (length: 64)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Num ser fin")]
        public string NumSerFin { get; set; } // num_ser_fin (length: 64)

        [Required]
        [Display(Name = "Nlargo")]
        public double Nlargo { get; set; } // nlargo

        [Required]
        [Display(Name = "Nancho")]
        public double Nancho { get; set; } // nancho

        [Required]
        [Display(Name = "Nespesor")]
        public double Nespesor { get; set; } // nespesor

        [Required]
        [Display(Name = "Nvolumen")]
        public double Nvolumen { get; set; } // nvolumen

        [Required]
        [Display(Name = "Narea")]
        public double Narea { get; set; } // narea

        [Required]
        [Display(Name = "Npeso")]
        public double Npeso { get; set; } // npeso

        [Required]
        [Display(Name = "Costo bse")]
        public double CostoBse { get; set; } // costo_bse

        [Required]
        [Display(Name = "Costo total bse")]
        public double CostoTotalBse { get; set; } // costo_total_bse

        [Required]
        [Display(Name = "Costo ind")]
        public double CostoInd { get; set; } // costo_ind

        [Required]
        [Display(Name = "Id mda ind")]
        public int IdMdaInd { get; set; } // id_mda_ind

        [Required]
        [Display(Name = "Oper ind")]
        public byte OperInd { get; set; } // oper_ind

        [Required]
        [Display(Name = "Tc ind")]
        public double TcInd { get; set; } // tc_ind

        [Required]
        [Display(Name = "Costo ind bse")]
        public double CostoIndBse { get; set; } // costo_ind_bse

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "S marca")]
        public string SMarca { get; set; } // sMarca (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S serie prov")]
        public string SSerieProv { get; set; } // sSerieProv (length: 100)

        [Required]
        [Display(Name = "Tipo mov")]
        public byte TipoMov { get; set; } // tipo_mov

        // Foreign keys

        /// <summary>
        /// Parent CatAlmac pointed by [inv_mov_ser_lot].([IdAlmac]) (FK_inv_mov_ser_lot_cat_almac)
        /// </summary>
        public virtual CatAlmac CatAlmac { get; set; } // FK_inv_mov_ser_lot_cat_almac

        /// <summary>
        /// Parent CatDocto pointed by [inv_mov_ser_lot].([IdTipDoc]) (FK_inv_mov_ser_lot_cat_doctos)
        /// </summary>
        public virtual CatDocto CatDocto { get; set; } // FK_inv_mov_ser_lot_cat_doctos

        /// <summary>
        /// Parent CatUsr pointed by [inv_mov_ser_lot].([IdUsr]) (FK_inv_mov_ser_lot_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_inv_mov_ser_lot_cat_usr

        /// <summary>
        /// Parent InvSerLot pointed by [inv_mov_ser_lot].([IdSerLot]) (FK_inv_mov_ser_lot_inv_ser_lot)
        /// </summary>
        public virtual InvSerLot InvSerLot { get; set; } // FK_inv_mov_ser_lot_inv_ser_lot

        public InvMovSerLot()
        {
            NumDoc = 0;
            Cant = 0;
            Tipo = 1;
            IdSisCnl = 0;
            IdUdm = 0;
            Ftr = 1;
            CantInv = 0;
            IdRef = 0;
            IdCenCto = 0;
            IdCodSrv = 0;
            IdCli = 0;
            IdProv = 0;
            IdCliFaDa = 0;
            Serie = "";
            IdVer = 0;
            CAfeSerLot = 1;
            Costo = 0;
            CostoTotal = 0;
            Precio = 0;
            Importe = 0;
            IdMda = 0;
            Oper = 0;
            Tc = 0;
            PrecioBse = 0;
            ImporteBse = 0;
            CImp = 0;
            IdPed = 0;
            CantSurt = 0;
            CantSurtAut = 0;
            NumSer = "";
            NumSerFin = "";
            Nlargo = 0;
            Nancho = 0;
            Nespesor = 0;
            Nvolumen = 0;
            Narea = 0;
            Npeso = 0;
            CostoBse = 0;
            CostoTotalBse = 0;
            CostoInd = 0;
            IdMdaInd = 0;
            OperInd = 0;
            TcInd = 0;
            CostoIndBse = 0;
            SMarca = "";
            SSerieProv = "";
            TipoMov = 0;
        }
    }

}
// </auto-generated>
