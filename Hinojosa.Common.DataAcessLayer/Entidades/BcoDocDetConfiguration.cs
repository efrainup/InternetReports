// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // bco_doc_det
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BcoDocDetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BcoDocDet>
    {
        public BcoDocDetConfiguration()
            : this("dbo")
        {
        }

        public BcoDocDetConfiguration(string schema)
        {
            ToTable("bco_doc_det", schema);
            HasKey(x => x.IdBcoDocDet);

            Property(x => x.IdBcoDocDet).HasColumnName(@"id_bco_doc_det").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdBcoDoc).HasColumnName(@"id_bco_doc").HasColumnType("int").IsRequired();
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.IdEnt).HasColumnName(@"id_ent").HasColumnType("int").IsRequired();
            Property(x => x.@Ref).HasColumnName(@"ref").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Importe).HasColumnName(@"importe").HasColumnType("float").IsRequired();
            Property(x => x.MontoSimpto).HasColumnName(@"monto_simpto").HasColumnType("float").IsRequired();
            Property(x => x.Imptos).HasColumnName(@"imptos").HasColumnType("float").IsRequired();
            Property(x => x.Total).HasColumnName(@"total").HasColumnType("float").IsRequired();
            Property(x => x.IdMda).HasColumnName(@"id_mda").HasColumnType("int").IsRequired();
            Property(x => x.Tc).HasColumnName(@"tc").HasColumnType("float").IsRequired();
            Property(x => x.Oper).HasColumnName(@"oper").HasColumnType("tinyint").IsRequired();
            Property(x => x.ImporteBse).HasColumnName(@"importe_bse").HasColumnType("float").IsRequired();
            Property(x => x.MontoSimptoBse).HasColumnName(@"monto_simpto_bse").HasColumnType("float").IsRequired();
            Property(x => x.ImptosBse).HasColumnName(@"imptos_bse").HasColumnType("float").IsRequired();
            Property(x => x.TotalBse).HasColumnName(@"total_bse").HasColumnType("float").IsRequired();
            Property(x => x.IdImpto).HasColumnName(@"id_impto").HasColumnType("int").IsRequired();
            Property(x => x.IdCenCto).HasColumnName(@"id_cen_cto").HasColumnType("int").IsRequired();
            Property(x => x.IdCodSrv).HasColumnName(@"id_cod_srv").HasColumnType("int").IsRequired();
            Property(x => x.IdRef).HasColumnName(@"id_ref").HasColumnType("int").IsRequired();
            Property(x => x.IdRelImp).HasColumnName(@"id_rel_imp").HasColumnType("int").IsRequired();
            Property(x => x.IdTipDocRef).HasColumnName(@"id_tip_doc_ref").HasColumnType("int").IsRequired();
            Property(x => x.IdCliProv).HasColumnName(@"id_cli_prov").HasColumnType("int").IsRequired();
            Property(x => x.NumDocRef).HasColumnName(@"num_doc_ref").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType("datetime").IsRequired();
            Property(x => x.Viaje).HasColumnName(@"viaje").HasColumnType("int").IsRequired();
            Property(x => x.TipCliProvRef).HasColumnName(@"tip_cli_prov_ref").HasColumnType("int").IsRequired();
            Property(x => x.IdCliCtaDe).HasColumnName(@"id_cli_cta_de").HasColumnType("int").IsRequired();
            Property(x => x.IdCliCxc).HasColumnName(@"id_cli_cxc").HasColumnType("int").IsRequired();
            Property(x => x.IdCliFa).HasColumnName(@"id_cli_fa").HasColumnType("int").IsRequired();
            Property(x => x.CModImpto).HasColumnName(@"c_mod_impto").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdCliACtaDe).HasColumnName(@"Id_Cli_A_Cta_De").HasColumnType("int").IsRequired();
            Property(x => x.Cant).HasColumnName(@"cant").HasColumnType("float").IsRequired();
            Property(x => x.IdPro).HasColumnName(@"id_pro").HasColumnType("int").IsRequired();
            Property(x => x.PreCto).HasColumnName(@"pre_cto").HasColumnType("float").IsRequired();
            Property(x => x.IdUdm).HasColumnName(@"id_udm").HasColumnType("int").IsRequired();
            Property(x => x.IdAlm).HasColumnName(@"id_alm").HasColumnType("int").IsRequired();
            Property(x => x.IdRefDet).HasColumnName(@"id_ref_det").HasColumnType("int").IsRequired();
            Property(x => x.IdInt).HasColumnName(@"id_int").HasColumnType("int").IsRequired();
            Property(x => x.IdFisRel).HasColumnName(@"id_fis_rel").HasColumnType("int").IsRequired();
            Property(x => x.RefExt).HasColumnName(@"ref_ext").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IdSisImpPag).HasColumnName(@"id_sis_imp_pag").HasColumnType("int").IsRequired();
            Property(x => x.IdRefDetDocApl).HasColumnName(@"id_ref_det_doc_apl").HasColumnType("int").IsRequired();
            Property(x => x.IdBcoTrnDet).HasColumnName(@"id_bco_trn_det").HasColumnType("int").IsRequired();
            Property(x => x.IdProv).HasColumnName(@"id_prov").HasColumnType("int").IsRequired();
            Property(x => x.IdCli).HasColumnName(@"id_cli").HasColumnType("int").IsRequired();
            Property(x => x.CImpto).HasColumnName(@"c_impto").HasColumnType("tinyint").IsRequired();
            Property(x => x.Porfac).HasColumnName(@"porfac").HasColumnType("float").IsRequired();
            Property(x => x.IdCliAso).HasColumnName(@"id_cli_aso").HasColumnType("int").IsRequired();
            Property(x => x.IdTipPas).HasColumnName(@"id_tip_pas").HasColumnType("int").IsRequired();
            Property(x => x.CValXml).HasColumnName(@"c_val_xml").HasColumnType("tinyint").IsRequired();
            Property(x => x.FecValXml).HasColumnName(@"fec_val_xml").HasColumnType("datetime").IsRequired();
            Property(x => x.IdUsrVal).HasColumnName(@"id_usr_val").HasColumnType("int").IsRequired();
            Property(x => x.IdCatViaje).HasColumnName(@"id_cat_viaje").HasColumnType("int").IsRequired();
            Property(x => x.CDesdeCfd).HasColumnName(@"c_desde_cfd").HasColumnType("tinyint").IsRequired();
            Property(x => x.ArchivoXml).HasColumnName(@"archivo_xml").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.DesctoXml).HasColumnName(@"descto_xml").HasColumnType("float").IsRequired();
            Property(x => x.SubtotalXml).HasColumnName(@"subtotal_xml").HasColumnType("float").IsRequired();
            Property(x => x.ImptosXml).HasColumnName(@"imptos_xml").HasColumnType("float").IsRequired();
            Property(x => x.TotalXml).HasColumnName(@"total_xml").HasColumnType("float").IsRequired();
            Property(x => x.Uuid).HasColumnName(@"uuid").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(36);
            Property(x => x.DctoPtg).HasColumnName(@"dcto_ptg").HasColumnType("float").IsRequired();
            Property(x => x.MontoDescto).HasColumnName(@"monto_descto").HasColumnType("float").IsRequired();
            Property(x => x.ImporteSDcto).HasColumnName(@"importe_s_dcto").HasColumnType("float").IsRequired();
            Property(x => x.CImptoLocal).HasColumnName(@"c_impto_local").HasColumnType("tinyint").IsRequired();
            Property(x => x.ImptoLocRet).HasColumnName(@"impto_loc_ret").HasColumnType("float").IsRequired();
            Property(x => x.ImptoLocTras).HasColumnName(@"impto_loc_tras").HasColumnType("float").IsRequired();
            Property(x => x.StatusSat).HasColumnName(@"statusSAT").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);

            // Foreign keys
            HasRequired(a => a.BcoDoc).WithMany(b => b.BcoDocDets).HasForeignKey(c => c.IdBcoDoc).WillCascadeOnDelete(false); // FK_bco_doc_det_bco_doc
            HasRequired(a => a.MonMoneda).WithMany(b => b.BcoDocDets).HasForeignKey(c => c.IdMda).WillCascadeOnDelete(false); // FK_bco_doc_det_mon_monedas
            HasRequired(a => a.SisNota).WithMany(b => b.BcoDocDets).HasForeignKey(c => c.IdNota).WillCascadeOnDelete(false); // FK_bco_doc_det_sis_notas
        }
    }

}
// </auto-generated>
