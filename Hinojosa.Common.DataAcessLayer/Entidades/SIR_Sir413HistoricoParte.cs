// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_413_HISTORICO_PARTE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir413HistoricoParte
    {
        [Required]
        [Display(Name = "N ID historico parte 413")]
        public int NIdHistoricoParte413 { get; set; } // nIdHistoricoParte413 (Primary key)

        [Display(Name = "N ID parte 99")]
        public int? NIdParte99 { get; set; } // nIdParte99

        [Required(AllowEmptyStrings = true)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "S parte")]
        public string SParte { get; set; } // sParte (length: 60)

        [Required]
        [Display(Name = "N tipo operacion")]
        public byte NTipoOperacion { get; set; } // nTipoOperacion

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S fraccion")]
        public string SFraccion { get; set; } // sFraccion (length: 12)

        [Display(Name = "S descripcion tigie")]
        public string SDescripcionTigie { get; set; } // sDescripcionTIGIE

        [Display(Name = "S descripcion factura")]
        public string SDescripcionFactura { get; set; } // sDescripcionFactura

        [Display(Name = "S descripcion aa")]
        public string SDescripcionAa { get; set; } // sDescripcionAA

        [Display(Name = "N ID umc 10")]
        public int? NIdUmc10 { get; set; } // nIdUMC10

        [Display(Name = "N ID umt 10")]
        public int? NIdUmt10 { get; set; } // nIdUMT10

        [Display(Name = "N ID pais ori dest 01")]
        public int? NIdPaisOriDest01 { get; set; } // nIdPaisOriDest01

        [Display(Name = "N ID pais comp vend 01")]
        public int? NIdPaisCompVend01 { get; set; } // nIdPaisCompVend01

        [Display(Name = "N ID proveedor 42")]
        public int? NIdProveedor42 { get; set; } // nIdProveedor42

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "S codigo barras")]
        public string SCodigoBarras { get; set; } // sCodigoBarras (length: 40)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S control interno")]
        public string SControlInterno { get; set; } // sControlInterno (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S familia producto")]
        public string SFamiliaProducto { get; set; } // sFamiliaProducto (length: 30)

        [Display(Name = "B activa")]
        public bool? BActiva { get; set; } // bActiva

        [Required]
        [Display(Name = "N esta vinculado")]
        public int NEstaVinculado { get; set; } // nEstaVinculado

        [Display(Name = "N cp referencial")]
        public decimal? NCPreferencial { get; set; } // nCPreferencial

        [Required]
        [Display(Name = "N ID metodo val 101")]
        public int NIdMetodoVal101 { get; set; } // nIdMetodoVal101

        [Required]
        [Display(Name = "B aplica tlc")]
        public bool BAplicaTlc { get; set; } // bAplicaTLC

        [Required]
        [Display(Name = "B aplica aladi")]
        public bool BAplicaAladi { get; set; } // bAplicaALADI

        [Display(Name = "N monto desgravacion")]
        public decimal? NMontoDesgravacion { get; set; } // nMontoDesgravacion

        [Required]
        [Display(Name = "N tipo arancel")]
        public byte NTipoArancel { get; set; } // nTipoArancel

        [Required]
        [Display(Name = "N tasa arancel")]
        public decimal NTasaArancel { get; set; } // nTasaArancel

        [Required]
        [Display(Name = "N tasa max adv")]
        public decimal NTasaMaxAdv { get; set; } // nTasaMaxAdv

        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "S um")]
        public string SUm { get; set; } // sUM (length: 2)

        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "S es")]
        public string SEs { get; set; } // sES (length: 1)

        [Display(Name = "D fecha alta")]
        public System.DateTime? DFechaAlta { get; set; } // dFechaAlta

        [Display(Name = "D consulta tarifa")]
        public System.DateTime? DConsultaTarifa { get; set; } // dConsultaTarifa

        [Display(Name = "N peso")]
        public decimal? NPeso { get; set; } // nPeso

        [Display(Name = "N mt")]
        public decimal? NMt { get; set; } // nMT

        [Display(Name = "N valor minimo")]
        public decimal? NValorMinimo { get; set; } // nValorMinimo

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime? DFechaEdicion { get; set; } // dFechaEdicion

        [Display(Name = "N ID usuario ed")]
        public int? NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S observaciones")]
        public string SObservaciones { get; set; } // sObservaciones (length: 500)

        [Display(Name = "N tipo registro")]
        public byte? NTipoRegistro { get; set; } // nTipoRegistro

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S registro")]
        public string SRegistro { get; set; } // sRegistro (length: 100)

        [Display(Name = "B certificado origen")]
        public bool? BCertificadoOrigen { get; set; } // bCertificadoOrigen

        [Display(Name = "D emision")]
        public System.DateTime? DEmision { get; set; } // dEmision

        [Display(Name = "D vencimiento")]
        public System.DateTime? DVencimiento { get; set; } // dVencimiento

        [Display(Name = "B sub modelo")]
        public bool? BSubModelo { get; set; } // bSubModelo

        [Display(Name = "B exotico")]
        public bool? BExotico { get; set; } // bExotico

        [Display(Name = "N ID motivos partes 412")]
        public int? NIdMotivosPartes412 { get; set; } // nIdMotivosPartes412

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S motivos partes libre")]
        public string SMotivosPartesLibre { get; set; } // sMotivosPartesLibre (length: 500)

        [Display(Name = "N ID umcove 410")]
        public int? NIdUmcove410 { get; set; } // nIdUMCOVE410

        [Display(Name = "S descripcion certificado")]
        public string SDescripcionCertificado { get; set; } // sDescripcionCertificado

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "S archivo carga")]
        public string SArchivoCarga { get; set; } // sArchivoCarga (length: 500)

        [Display(Name = "N puede requerir pgr")]
        public byte? NPuedeRequerirPgr { get; set; } // nPuedeRequerirPGR

        // Reverse navigation

        /// <summary>
        /// Child CatClientes (Many-to-Many) mapped by table [SIR_414_RELAC_CLIENTE_HISTORICO_PARTE]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CatCliente> CatClientes { get; set; } // Many to many mapping
        /// <summary>
        /// Child SIR_Sir426PartesIdentificadoresHistorico where [SIR_426_PARTES_IDENTIFICADORES_HISTORICO].[nIdHistoricoParte413] point to this entity (FK_SIR_426_PARTES_IDENTIFICADORES_HISTORICO_SIR_413_HISTORICO_PARTE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir426PartesIdentificadoresHistorico> SIR_Sir426PartesIdentificadoresHistorico { get; set; } // SIR_426_PARTES_IDENTIFICADORES_HISTORICO.FK_SIR_426_PARTES_IDENTIFICADORES_HISTORICO_SIR_413_HISTORICO_PARTE

        // Foreign keys

        /// <summary>
        /// Parent SIR_Sir01Pais pointed by [SIR_413_HISTORICO_PARTE].([NIdPaisCompVend01]) (FK_SIR_413_HISTORICO_PARTE_SIR_01_PAISES1)
        /// </summary>
        public virtual SIR_Sir01Pais SIR_Sir01Pais_NIdPaisCompVend01 { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_01_PAISES1

        /// <summary>
        /// Parent SIR_Sir01Pais pointed by [SIR_413_HISTORICO_PARTE].([NIdPaisOriDest01]) (FK_SIR_413_HISTORICO_PARTE_SIR_01_PAISES)
        /// </summary>
        public virtual SIR_Sir01Pais SIR_Sir01Pais_NIdPaisOriDest01 { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_01_PAISES

        /// <summary>
        /// Parent SIR_Sir101MetodosValoracion pointed by [SIR_413_HISTORICO_PARTE].([NIdMetodoVal101]) (FK_SIR_413_HISTORICO_PARTE_SIR_101_METODOS_VALORACION)
        /// </summary>
        public virtual SIR_Sir101MetodosValoracion SIR_Sir101MetodosValoracion { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_101_METODOS_VALORACION

        /// <summary>
        /// Parent SIR_Sir10UnidadesMedida pointed by [SIR_413_HISTORICO_PARTE].([NIdUmc10]) (FK_SIR_413_HISTORICO_PARTE_SIR_10_UNIDADES_MEDIDA)
        /// </summary>
        public virtual SIR_Sir10UnidadesMedida SIR_Sir10UnidadesMedida_NIdUmc10 { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_10_UNIDADES_MEDIDA

        /// <summary>
        /// Parent SIR_Sir10UnidadesMedida pointed by [SIR_413_HISTORICO_PARTE].([NIdUmt10]) (FK_SIR_413_HISTORICO_PARTE_SIR_10_UNIDADES_MEDIDA1)
        /// </summary>
        public virtual SIR_Sir10UnidadesMedida SIR_Sir10UnidadesMedida_NIdUmt10 { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_10_UNIDADES_MEDIDA1

        /// <summary>
        /// Parent SIR_Sir410UnidadesMedidaCove pointed by [SIR_413_HISTORICO_PARTE].([NIdUmcove410]) (FK_SIR_413_HISTORICO_PARTE_SIR_410_UNIDADES_MEDIDA_COVE)
        /// </summary>
        public virtual SIR_Sir410UnidadesMedidaCove SIR_Sir410UnidadesMedidaCove { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_410_UNIDADES_MEDIDA_COVE

        /// <summary>
        /// Parent SIR_Sir412MotivosModificacionParte pointed by [SIR_413_HISTORICO_PARTE].([NIdMotivosPartes412]) (FK_SIR_413_HISTORICO_PARTE_SIR_412_MOTIVOS_MODIFICACION_PARTES)
        /// </summary>
        public virtual SIR_Sir412MotivosModificacionParte SIR_Sir412MotivosModificacionParte { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_412_MOTIVOS_MODIFICACION_PARTES

        /// <summary>
        /// Parent SIR_Sir42Proveedore pointed by [SIR_413_HISTORICO_PARTE].([NIdProveedor42]) (FK_SIR_413_HISTORICO_PARTE_SIR_42_PROVEEDORES)
        /// </summary>
        public virtual SIR_Sir42Proveedore SIR_Sir42Proveedore { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_42_PROVEEDORES

        /// <summary>
        /// Parent SIR_Sir99Parte pointed by [SIR_413_HISTORICO_PARTE].([NIdParte99]) (FK_SIR_413_HISTORICO_PARTE_SIR_99_PARTES)
        /// </summary>
        public virtual SIR_Sir99Parte SIR_Sir99Parte { get; set; } // FK_SIR_413_HISTORICO_PARTE_SIR_99_PARTES

        public SIR_Sir413HistoricoParte()
        {
            BAplicaTlc = false;
            BAplicaAladi = false;
            NTipoArancel = 1;
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            BCertificadoOrigen = false;
            SIR_Sir426PartesIdentificadoresHistorico = new System.Collections.Generic.List<SIR_Sir426PartesIdentificadoresHistorico>();
            CatClientes = new System.Collections.Generic.List<CatCliente>();
        }
    }

}
// </auto-generated>
