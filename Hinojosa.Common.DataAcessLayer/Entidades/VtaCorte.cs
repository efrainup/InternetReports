// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // vta_cortes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VtaCorte
    {
        [Required]
        [Display(Name = "Id corte")]
        public int IdCorte { get; set; } // id_corte (Primary key)

        [Required]
        [Display(Name = "Id caja")]
        public int IdCaja { get; set; } // id_caja (Primary key)

        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha ini")]
        public System.DateTime? FechaIni { get; set; } // fecha_ini

        [DataType(DataType.DateTime)]
        [Display(Name = "Fec hr ini")]
        public System.DateTime? FecHrIni { get; set; } // fec_hr_ini

        [DataType(DataType.DateTime)]
        [Display(Name = "Fecha fin")]
        public System.DateTime? FechaFin { get; set; } // fecha_fin

        [DataType(DataType.DateTime)]
        [Display(Name = "Fec hr fin")]
        public System.DateTime? FecHrFin { get; set; } // fec_hr_fin

        [Display(Name = "De vta")]
        public int? DeVta { get; set; } // de_vta

        [Display(Name = "A vta")]
        public int? AVta { get; set; } // a_vta

        [Display(Name = "Mto vta")]
        public double? MtoVta { get; set; } // mto_vta

        [Display(Name = "Mto dev")]
        public double? MtoDev { get; set; } // mto_dev

        [Display(Name = "Mto canc")]
        public double? MtoCanc { get; set; } // mto_canc

        [Display(Name = "Mto pend")]
        public double? MtoPend { get; set; } // mto_pend

        [Display(Name = "Mto abie")]
        public double? MtoAbie { get; set; } // mto_abie

        [Display(Name = "De cob")]
        public int? DeCob { get; set; } // de_cob

        [Display(Name = "A cob")]
        public int? ACob { get; set; } // a_cob

        [Display(Name = "Cob mto")]
        public double? CobMto { get; set; } // cob_mto

        [Display(Name = "Cob efec")]
        public double? CobEfec { get; set; } // cob_efec

        [Display(Name = "Cob docs")]
        public double? CobDocs { get; set; } // cob_docs

        [Display(Name = "Id usr ini")]
        public int? IdUsrIni { get; set; } // id_usr_ini

        [Display(Name = "Id usr fin")]
        public int? IdUsrFin { get; set; } // id_usr_fin

        [Display(Name = "Id cajero")]
        public int? IdCajero { get; set; } // id_cajero

        [Display(Name = "Si")]
        public double? Si { get; set; } // si

        [Display(Name = "Car")]
        public double? Car { get; set; } // car

        [Display(Name = "Abo")]
        public double? Abo { get; set; } // abo

        [Display(Name = "Sf")]
        public double? Sf { get; set; } // sf

        [Display(Name = "Mto caja")]
        public double? MtoCaja { get; set; } // mto_caja

        [Display(Name = "Faltante")]
        public double? Faltante { get; set; } // faltante

        [Required]
        [Display(Name = "Id suc")]
        public int IdSuc { get; set; } // id_suc

        ///<summary>
        /// 1=Se Hizo entrega de Valores 0=No se hizo entrega de Valores
        ///</summary>
        [Required]
        [Display(Name = "C entrega")]
        public byte CEntrega { get; set; } // c_entrega

        ///<summary>
        /// Monto del Efectivo
        ///</summary>
        [Required]
        [Display(Name = "Mto efect")]
        public double MtoEfect { get; set; } // mto_efect

        ///<summary>
        /// Monto de Documentos
        ///</summary>
        [Required]
        [Display(Name = "Mto docs")]
        public double MtoDocs { get; set; } // mto_docs

        ///<summary>
        /// monto de la entrega de valores
        ///</summary>
        [Required]
        [Display(Name = "Mto valores")]
        public double MtoValores { get; set; } // mto_valores

        [Required]
        [Display(Name = "Id cierre")]
        public int IdCierre { get; set; } // id_cierre

        // Reverse navigation

        /// <summary>
        /// Child VtaCobroes where [vta_cobros].([id_caja], [id_corte]) point to this entity (FK_vta_cobros_vta_cortes)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaCobro> VtaCobroes { get; set; } // vta_cobros.FK_vta_cobros_vta_cortes
        /// <summary>
        /// Child VtaCortesDets where [vta_cortes_det].([id_caja], [id_corte]) point to this entity (FK_vta_cortes_det_vta_cortes)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaCortesDet> VtaCortesDets { get; set; } // vta_cortes_det.FK_vta_cortes_det_vta_cortes
        /// <summary>
        /// Child VtaMovDocs where [vta_mov_doc].([id_caja], [id_corte]) point to this entity (FK_vta_mov_doc_vta_cortes)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaMovDoc> VtaMovDocs { get; set; } // vta_mov_doc.FK_vta_mov_doc_vta_cortes

        // Foreign keys

        /// <summary>
        /// Parent CatCaja pointed by [vta_cortes].([IdCaja]) (FK_vta_cortes_cat_cajas)
        /// </summary>
        public virtual CatCaja CatCaja { get; set; } // FK_vta_cortes_cat_cajas

        /// <summary>
        /// Parent CatUsr pointed by [vta_cortes].([IdUsrFin]) (FK_vta_cortes_cat_usr1)
        /// </summary>
        public virtual CatUsr CatUsr_IdUsrFin { get; set; } // FK_vta_cortes_cat_usr1

        /// <summary>
        /// Parent CatUsr pointed by [vta_cortes].([IdUsrIni]) (FK_vta_cortes_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr_IdUsrIni { get; set; } // FK_vta_cortes_cat_usr

        /// <summary>
        /// Parent SisCierre pointed by [vta_cortes].([IdCierre]) (FK_vta_cortes_sis_cierres)
        /// </summary>
        public virtual SisCierre SisCierre { get; set; } // FK_vta_cortes_sis_cierres

        public VtaCorte()
        {
            CEntrega = 0;
            MtoEfect = 0;
            MtoDocs = 0;
            MtoValores = 0;
            IdCierre = 0;
            VtaCobroes = new System.Collections.Generic.List<VtaCobro>();
            VtaCortesDets = new System.Collections.Generic.List<VtaCortesDet>();
            VtaMovDocs = new System.Collections.Generic.List<VtaMovDoc>();
        }
    }

}
// </auto-generated>
