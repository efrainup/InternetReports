// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_cli_fa_cta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatCliFaCta
    {
        [Required]
        [Display(Name = "Id cli fa cta")]
        public int IdCliFaCta { get; set; } // id_cli_fa_cta (Primary key)

        [Required]
        [Display(Name = "Id cli fa da")]
        public int IdCliFaDa { get; set; } // id_cli_fa_da

        [Required]
        [Display(Name = "Id bco")]
        public int IdBco { get; set; } // id_bco

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Cta")]
        public string Cta { get; set; } // cta (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Clabe")]
        public string Clabe { get; set; } // clabe (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Titular")]
        public string Titular { get; set; } // titular (length: 60)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Suc")]
        public string Suc { get; set; } // suc (length: 10)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Ref bco 1")]
        public string RefBco1 { get; set; } // ref_bco1 (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Ref bco 2")]
        public string RefBco2 { get; set; } // ref_bco2 (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Ref bco 3")]
        public string RefBco3 { get; set; } // ref_bco3 (length: 25)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(19)]
        [StringLength(19)]
        [Display(Name = "Num tar")]
        public string NumTar { get; set; } // num_tar (length: 19)

        [Required]
        [Display(Name = "C utl")]
        public byte CUtl { get; set; } // c_utl

        [Required]
        [Display(Name = "C def")]
        public byte CDef { get; set; } // c_def

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Id tip pago")]
        public int IdTipPago { get; set; } // id_tip_pago

        public CatCliFaCta()
        {
            IdCliFaCta = 0;
            IdCliFaDa = 0;
            IdBco = 0;
            Cta = "";
            Clabe = "";
            Titular = "";
            Suc = "";
            RefBco1 = "";
            RefBco2 = "";
            RefBco3 = "";
            NumTar = "";
            CUtl = 0;
            CDef = 0;
            IdUsr = 0;
            Status = 1;
            IdTipPago = 0;
        }
    }

}
// </auto-generated>
