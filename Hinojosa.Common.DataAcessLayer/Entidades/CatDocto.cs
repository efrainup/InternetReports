// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_doctos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatDocto
    {
        [Required]
        [Display(Name = "Id doc")]
        public int IdDoc { get; set; } // id_doc (Primary key)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Descripcion")]
        public string Descripcion { get; set; } // descripcion (length: 30)

        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Modulo")]
        public string Modulo { get; set; } // modulo (length: 2)

        [Display(Name = "Num doc")]
        public int? NumDoc { get; set; } // num_doc

        [Display(Name = "C mov inv")]
        public byte? CMovInv { get; set; } // c_mov_inv

        ///<summary>
        /// 0=Entradas 1=Salidas 2=entrada/salida
        ///</summary>
        [Display(Name = "Tipo")]
        public byte? Tipo { get; set; } // tipo

        ///<summary>
        /// 1=El docto puede saldarse 0=No lleva saldo
        ///</summary>
        [Required]
        [Display(Name = "C saldo")]
        public byte CSaldo { get; set; } // c_saldo

        [Required]
        [Display(Name = "Id doc pad")]
        public int IdDocPad { get; set; } // id_doc_pad

        [Required]
        [Display(Name = "Id mod")]
        public int IdMod { get; set; } // id_mod

        ///<summary>
        /// Prioridad para el proceso de recosteo
        ///</summary>
        [Required]
        [Display(Name = "Prd rcst")]
        public int PrdRcst { get; set; } // prd_rcst

        ///<summary>
        /// 1=Contabiliza 0 = No contabiliza
        ///</summary>
        [Required]
        [Display(Name = "C cont")]
        public byte CCont { get; set; } // c_cont

        ///<summary>
        /// id del la plantilla de asientos
        ///</summary>
        [Required]
        [Display(Name = "Id asi")]
        public int IdAsi { get; set; } // id_asi

        [Required(AllowEmptyStrings = true)]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "Codigo")]
        public string Codigo { get; set; } // codigo (length: 8)

        ///<summary>
        /// Determina si el tipo de documento se puede usar en p√≥lizas
        ///</summary>
        [Required]
        [Display(Name = "C uso pol")]
        public byte CUsoPol { get; set; } // c_uso_pol

        [Required]
        [Display(Name = "C uso cli")]
        public byte CUsoCli { get; set; } // c_uso_cli

        [Required]
        [Display(Name = "C uso prov")]
        public byte CUsoProv { get; set; } // c_uso_prov

        [Required]
        [Display(Name = "C uso pro")]
        public byte CUsoPro { get; set; } // c_uso_pro

        [Required]
        [Display(Name = "Id tip pol")]
        public int IdTipPol { get; set; } // id_tip_pol

        [Required]
        [Display(Name = "Id rec")]
        public int IdRec { get; set; } // id_rec

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Frm")]
        public string Frm { get; set; } // frm (length: 50)

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Id cpt")]
        public int IdCpt { get; set; } // id_cpt

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Tag")]
        public string Tag { get; set; } // tag (length: 25)

        [Required]
        [Display(Name = "Tip sdo")]
        public double TipSdo { get; set; } // tip_sdo

        [Required]
        [Display(Name = "C venc")]
        public byte CVenc { get; set; } // c_venc

        [Required]
        [Display(Name = "Id tbl")]
        public int IdTbl { get; set; } // id_tbl

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ley 1")]
        public string Ley1 { get; set; } // ley1 (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ley 2")]
        public string Ley2 { get; set; } // ley2 (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ley 3")]
        public string Ley3 { get; set; } // ley3 (length: 50)

        [Required]
        [Display(Name = "C kdx")]
        public byte CKdx { get; set; } // c_kdx

        [Required]
        [Display(Name = "Id vt cd")]
        public int IdVtCd { get; set; } // id_vt_cd

        [Required]
        [Display(Name = "Tip doc cga")]
        public byte TipDocCga { get; set; } // tip_doc_cga

        [Required]
        [Display(Name = "C env")]
        public byte CEnv { get; set; } // c_env

        [Required]
        [Display(Name = "C cdo")]
        public byte CCdo { get; set; } // c_cdo

        [Required]
        [Display(Name = "C tim msv")]
        public bool CTimMsv { get; set; } // c_tim_msv

        // Reverse navigation

        /// <summary>
        /// Child BcoConcs where [bco_conc].[id_tip_doc] point to this entity (FK_bco_conc_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BcoConc> BcoConcs { get; set; } // bco_conc.FK_bco_conc_cat_doctos
        /// <summary>
        /// Child BcoTransferencias where [bco_transferencias].[id_tip_doc] point to this entity (FK_bco_transferencias_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BcoTransferencia> BcoTransferencias { get; set; } // bco_transferencias.FK_bco_transferencias_cat_doctos
        /// <summary>
        /// Child CxcAuxes where [cxc_aux].[id_a_tip_doc] point to this entity (FK_cxc_aux_cat_doctos1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CxcAux> CxcAuxes_IdATipDoc { get; set; } // cxc_aux.FK_cxc_aux_cat_doctos1
        /// <summary>
        /// Child CxcAuxes where [cxc_aux].[id_tip_doc] point to this entity (FK_cxc_aux_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CxcAux> CxcAuxes_IdTipDoc { get; set; } // cxc_aux.FK_cxc_aux_cat_doctos
        /// <summary>
        /// Child CxcNcs where [cxc_nc].[id_tip_doc] point to this entity (FK_cxc_nc_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CxcNc> CxcNcs_IdTipDoc { get; set; } // cxc_nc.FK_cxc_nc_cat_doctos
        /// <summary>
        /// Child CxcNcs where [cxc_nc].[id_tip_doc_orig] point to this entity (FK_cxc_nc_cat_doctos1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CxcNc> CxcNcs_IdTipDocOrig { get; set; } // cxc_nc.FK_cxc_nc_cat_doctos1
        /// <summary>
        /// Child CxpDocs where [cxp_doc].[id_tip_doc] point to this entity (FK_cxp_doc_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CxpDoc> CxpDocs { get; set; } // cxp_doc.FK_cxp_doc_cat_doctos
        /// <summary>
        /// Child InvKardexes where [inv_kardex].[id_tipo_doc] point to this entity (FK_inv_kardex_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InvKardex> InvKardexes { get; set; } // inv_kardex.FK_inv_kardex_cat_doctos
        /// <summary>
        /// Child InvMovSerLots where [inv_mov_ser_lot].[id_tip_doc] point to this entity (FK_inv_mov_ser_lot_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InvMovSerLot> InvMovSerLots { get; set; } // inv_mov_ser_lot.FK_inv_mov_ser_lot_cat_doctos
        /// <summary>
        /// Child InvMovSerLotTmpDocs where [inv_mov_ser_lot_tmp_doc].[id_tip_doc] point to this entity (FK_inv_mov_ser_lot_cat_doctos_tmp_doc)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InvMovSerLotTmpDoc> InvMovSerLotTmpDocs { get; set; } // inv_mov_ser_lot_tmp_doc.FK_inv_mov_ser_lot_cat_doctos_tmp_doc
        /// <summary>
        /// Child ProRptEncs where [pro_rpt_enc].[id_tip_doc] point to this entity (FK_pro_rpt_enc_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProRptEnc> ProRptEncs { get; set; } // pro_rpt_enc.FK_pro_rpt_enc_cat_doctos
        /// <summary>
        /// Child SisFmtoes where [sis_fmto].[id_tip_doc] point to this entity (FK_sis_fmto_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SisFmto> SisFmtoes { get; set; } // sis_fmto.FK_sis_fmto_cat_doctos
        /// <summary>
        /// Child VtaAuxes where [vta_aux].[id_a_tip_doc] point to this entity (FK_vta_aux_cat_doctos1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaAux> VtaAuxes_IdATipDoc { get; set; } // vta_aux.FK_vta_aux_cat_doctos1
        /// <summary>
        /// Child VtaAuxes where [vta_aux].[id_tip_doc] point to this entity (FK_vta_aux_cat_doctos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VtaAux> VtaAuxes_IdTipDoc { get; set; } // vta_aux.FK_vta_aux_cat_doctos

        public CatDocto()
        {
            NumDoc = 0;
            CSaldo = 0;
            IdDocPad = 0;
            IdMod = 0;
            PrdRcst = 0;
            CCont = 0;
            IdAsi = 0;
            Codigo = "";
            CUsoPol = 0;
            CUsoCli = 0;
            CUsoProv = 0;
            CUsoPro = 0;
            IdTipPol = 0;
            IdRec = 0;
            Frm = "";
            Status = 1;
            IdCpt = 0;
            Tag = "";
            TipSdo = 0;
            CVenc = 0;
            IdTbl = 0;
            Ley1 = "";
            Ley2 = "";
            Ley3 = "";
            CKdx = 0;
            IdVtCd = 0;
            TipDocCga = 0;
            CEnv = 0;
            CCdo = 0;
            CTimMsv = false;
            BcoConcs = new System.Collections.Generic.List<BcoConc>();
            BcoTransferencias = new System.Collections.Generic.List<BcoTransferencia>();
            CxcAuxes_IdATipDoc = new System.Collections.Generic.List<CxcAux>();
            CxcAuxes_IdTipDoc = new System.Collections.Generic.List<CxcAux>();
            CxcNcs_IdTipDoc = new System.Collections.Generic.List<CxcNc>();
            CxcNcs_IdTipDocOrig = new System.Collections.Generic.List<CxcNc>();
            CxpDocs = new System.Collections.Generic.List<CxpDoc>();
            InvKardexes = new System.Collections.Generic.List<InvKardex>();
            InvMovSerLots = new System.Collections.Generic.List<InvMovSerLot>();
            InvMovSerLotTmpDocs = new System.Collections.Generic.List<InvMovSerLotTmpDoc>();
            ProRptEncs = new System.Collections.Generic.List<ProRptEnc>();
            SisFmtoes = new System.Collections.Generic.List<SisFmto>();
            VtaAuxes_IdATipDoc = new System.Collections.Generic.List<VtaAux>();
            VtaAuxes_IdTipDoc = new System.Collections.Generic.List<VtaAux>();
        }
    }

}
// </auto-generated>
