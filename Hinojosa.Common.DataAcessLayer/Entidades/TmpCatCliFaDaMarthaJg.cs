// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // TMP_CAT_CLI_FA_DA_MARTHA_JG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TmpCatCliFaDaMarthaJg
    {
        [Required]
        [Display(Name = "Id cli fa da")]
        public int IdCliFaDa { get; set; } // id_cli_fa_da (Primary key)

        [Required]
        [Display(Name = "Id cli")]
        public int IdCli { get; set; } // id_cli (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Nom 1")]
        public string Nom1 { get; set; } // nom1 (Primary key) (length: 128)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Nom 2")]
        public string Nom2 { get; set; } // nom2 (Primary key) (length: 128)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Dir 1")]
        public string Dir1 { get; set; } // dir1 (Primary key) (length: 255)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Ciu")]
        public string Ciu { get; set; } // ciu (Primary key) (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Est")]
        public string Est { get; set; } // est (Primary key) (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Cp")]
        public string Cp { get; set; } // cp (Primary key) (length: 10)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Rfc")]
        public string Rfc { get; set; } // rfc (Primary key) (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Tel 1")]
        public string Tel1 { get; set; } // tel1 (Primary key) (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Tel 2")]
        public string Tel2 { get; set; } // tel2 (Primary key) (length: 30)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // email (Primary key) (length: 200)

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status (Primary key)

        [Required]
        [Display(Name = "Tip cli")]
        public byte TipCli { get; set; } // tip_cli (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Ap pat")]
        public string ApPat { get; set; } // ap_pat (Primary key) (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Ap mat")]
        public string ApMat { get; set; } // ap_mat (Primary key) (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(48)]
        [StringLength(48)]
        [Display(Name = "Nombre")]
        public string Nombre { get; set; } // nombre (Primary key) (length: 48)

        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Calle")]
        public string Calle { get; set; } // calle (length: 80)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(13)]
        [StringLength(13)]
        [Display(Name = "Num int")]
        public string NumInt { get; set; } // num_int (Primary key) (length: 13)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Num ext")]
        public string NumExt { get; set; } // num_ext (Primary key) (length: 10)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Col")]
        public string Col { get; set; } // col (Primary key) (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Deleg")]
        public string Deleg { get; set; } // deleg (Primary key) (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Curp")]
        public string Curp { get; set; } // curp (Primary key) (length: 40)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Calles")]
        public string Calles { get; set; } // calles (Primary key) (length: 40)

        [Required]
        [Display(Name = "Tipo")]
        public byte Tipo { get; set; } // tipo (Primary key)

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr (Primary key)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Clave")]
        public string Clave { get; set; } // clave (Primary key) (length: 12)

        [Required]
        [Display(Name = "Id med env")]
        public int IdMedEnv { get; set; } // id_med_env (Primary key)

        [Required]
        [Display(Name = "Tipcliprov")]
        public byte Tipcliprov { get; set; } // tipcliprov (Primary key)

        [Required]
        [Display(Name = "Id pais")]
        public int IdPais { get; set; } // id_pais (Primary key)

        [Required]
        [Display(Name = "Id edo")]
        public int IdEdo { get; set; } // id_edo (Primary key)

        [Required]
        [Display(Name = "Id giro")]
        public int IdGiro { get; set; } // id_giro (Primary key)

        [Required]
        [Display(Name = "Id tip ter")]
        public int IdTipTer { get; set; } // id_tip_ter (Primary key)

        [Required]
        [Display(Name = "Id tip ope")]
        public int IdTipOpe { get; set; } // id_tip_ope (Primary key)

        [Required]
        [Display(Name = "Id tip inst")]
        public int IdTipInst { get; set; } // id_tip_inst (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Id otr sis")]
        public string IdOtrSis { get; set; } // id_otr_sis (Primary key) (length: 25)

        [Required]
        [Display(Name = "Id tip soc mer")]
        public int IdTipSocMer { get; set; } // id_tip_soc_mer (Primary key)

        [Required]
        [Display(Name = "Tip dir")]
        public int TipDir { get; set; } // tip_dir (Primary key)

        [Required]
        [Display(Name = "Num grp")]
        public int NumGrp { get; set; } // num_grp (Primary key)

        [Required]
        [Display(Name = "Id rel add")]
        public int IdRelAdd { get; set; } // id_rel_add (Primary key)

        [Required]
        [Display(Name = "C par rel")]
        public byte CParRel { get; set; } // c_par_rel (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pwd")]
        public string Pwd { get; set; } // pwd (Primary key) (length: 10)
    }

}
// </auto-generated>
