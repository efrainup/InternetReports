// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_571_CALCULO_ALMACENAJE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir571CalculoAlmacenaje
    {
        [Required]
        [Display(Name = "N ID calculo almacenaje 571")]
        public int NIdCalculoAlmacenaje571 { get; set; } // nIdCalculoAlmacenaje571 (Primary key)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S folio")]
        public string SFolio { get; set; } // sFolio (length: 30)

        [Required]
        [Display(Name = "N ID referencia 60")]
        public int NIdReferencia60 { get; set; } // nIdReferencia60

        [Required]
        [Display(Name = "N ID terminal")]
        public int NIdTerminal { get; set; } // nIdTerminal

        [Display(Name = "N peso contenedor")]
        public decimal? NPesoContenedor { get; set; } // nPesoContenedor

        [Display(Name = "N tara")]
        public decimal? NTara { get; set; } // nTara

        [Display(Name = "N peso total")]
        public decimal? NPesoTotal { get; set; } // nPesoTotal

        [Display(Name = "D entrada")]
        public System.DateTime? DEntrada { get; set; } // dEntrada

        [Display(Name = "D pago")]
        public System.DateTime? DPago { get; set; } // dPago

        [MaxLength(3000)]
        [StringLength(3000)]
        [Display(Name = "S marcas")]
        public string SMarcas { get; set; } // sMarcas (length: 3000)

        [Display(Name = "N tipo de carga")]
        public byte? NTipoDeCarga { get; set; } // nTipoDeCarga

        [Display(Name = "N volumen")]
        public byte? NVolumen { get; set; } // nVolumen

        [Display(Name = "N ubicacion")]
        public byte? NUbicacion { get; set; } // nUbicacion

        [Display(Name = "N mercancia")]
        public byte? NMercancia { get; set; } // nMercancia

        [Display(Name = "B rejas especiales")]
        public bool? BRejasEspeciales { get; set; } // bRejasEspeciales

        [Display(Name = "B pago adicional alfolio")]
        public bool? BPagoAdicionalAlfolio { get; set; } // bPagoAdicionalAlfolio

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S pago adicional al folio")]
        public string SPagoAdicionalAlFolio { get; set; } // sPagoAdicionalAlFolio (length: 30)

        [Display(Name = "D pago adicional al folio")]
        public System.DateTime? DPagoAdicionalAlFolio { get; set; } // dPagoAdicionalAlFolio

        [Display(Name = "N subtotal")]
        public decimal? NSubtotal { get; set; } // nSubtotal

        [Display(Name = "N iva")]
        public decimal? NIva { get; set; } // nIva

        [Display(Name = "N total")]
        public decimal? NTotal { get; set; } // nTotal

        [Display(Name = "N peso sobre kilogramo")]
        public decimal? NPesoSobreKilogramo { get; set; } // nPesoSobreKilogramo

        [Display(Name = "N plazo")]
        public byte? NPlazo { get; set; } // nPlazo

        [Display(Name = "N dias libres")]
        public short? NDiasLibres { get; set; } // nDiasLibres

        [Display(Name = "D temino dias libres")]
        public System.DateTime? DTeminoDiasLibres { get; set; } // dTeminoDiasLibres

        [Display(Name = "B datos de la agencia")]
        public bool? BDatosDeLaAgencia { get; set; } // bDatosDeLaAgencia

        [Display(Name = "B datos del imex")]
        public bool? BDatosDelImex { get; set; } // bDatosDelImex

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir572DetalleCalculoAlmacenaje where [SIR_572_DETALLE_CALCULO_ALMACENAJE].[nIdCalculoAlmacenaje571] point to this entity (FK_SIR_572_DETALLE_CALCULO_ALMACENAJE_SIR_571_CALCULO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir572DetalleCalculoAlmacenaje> SIR_Sir572DetalleCalculoAlmacenaje { get; set; } // SIR_572_DETALLE_CALCULO_ALMACENAJE.FK_SIR_572_DETALLE_CALCULO_ALMACENAJE_SIR_571_CALCULO
        /// <summary>
        /// Child SIR_Sir76Contenedore (Many-to-Many) mapped by table [SIR_573_CALCULO_ALMACENAJE_CONTENEDORES]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir76Contenedore> SIR_Sir76Contenedore { get; set; } // Many to many mapping

        // Foreign keys

        /// <summary>
        /// Parent CatProv pointed by [SIR_571_CALCULO_ALMACENAJE].([NIdTerminal]) (FK_SIR_571_CALCULO_ALMACENAJE_cat_prov)
        /// </summary>
        public virtual CatProv CatProv { get; set; } // FK_SIR_571_CALCULO_ALMACENAJE_cat_prov

        /// <summary>
        /// Parent SIR_Sir60Referencia pointed by [SIR_571_CALCULO_ALMACENAJE].([NIdReferencia60]) (FK_SIR_571_CALCULO_ALMACENAJE_SIR_60_REFERENCIAS)
        /// </summary>
        public virtual SIR_Sir60Referencia SIR_Sir60Referencia { get; set; } // FK_SIR_571_CALCULO_ALMACENAJE_SIR_60_REFERENCIAS

        public SIR_Sir571CalculoAlmacenaje()
        {
            SIR_Sir572DetalleCalculoAlmacenaje = new System.Collections.Generic.List<SIR_Sir572DetalleCalculoAlmacenaje>();
            SIR_Sir76Contenedore = new System.Collections.Generic.List<SIR_Sir76Contenedore>();
        }
    }

}
// </auto-generated>
