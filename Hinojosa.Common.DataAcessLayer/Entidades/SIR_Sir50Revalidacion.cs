// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_50_REVALIDACION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir50Revalidacion
    {
        [Required]
        [Display(Name = "N ID revalidacion 50")]
        public int NIdRevalidacion50 { get; set; } // nIdRevalidacion50 (Primary key)

        [Display(Name = "N ID referencia 60")]
        public int? NIdReferencia60 { get; set; } // nIdReferencia60

        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "S referencia")]
        public string SReferencia { get; set; } // sReferencia (length: 64)

        [Display(Name = "N ID suc pat adu 71")]
        public int? NIdSucPatAdu71 { get; set; } // nIdSucPatAdu71

        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "S patente")]
        public string SPatente { get; set; } // sPatente (length: 4)

        [Required]
        [Display(Name = "N clave aduana")]
        public byte NClaveAduana { get; set; } // nClaveAduana

        [Required]
        [Display(Name = "N clave seccion")]
        public byte NClaveSeccion { get; set; } // nClaveSeccion

        [Required]
        [Display(Name = "D fecha captura")]
        public System.DateTime DFechaCaptura { get; set; } // dFechaCaptura

        [Display(Name = "N ID naviera")]
        public int? NIdNaviera { get; set; } // nIdNaviera

        [Required]
        [Display(Name = "N clave naviera")]
        public int NClaveNaviera { get; set; } // nClaveNaviera

        [Display(Name = "D fecha envio nav")]
        public System.DateTime? DFechaEnvioNav { get; set; } // dFechaEnvioNav

        [Display(Name = "D fecha revalidacion")]
        public System.DateTime? DFechaRevalidacion { get; set; } // dFechaRevalidacion

        [Required]
        [Display(Name = "N ID garantia")]
        public int NIdGarantia { get; set; } // nIdGarantia

        [Required]
        [Display(Name = "N importe")]
        public decimal NImporte { get; set; } // nImporte

        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "S afavor de")]
        public string SAfavorDe { get; set; } // sAfavorDe (length: 1)

        [Display(Name = "N ID cliente af avor de")]
        public int? NIdClienteAFavorDe { get; set; } // nIdClienteAFavorDe

        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "S observaciones")]
        public string SObservaciones { get; set; } // sObservaciones (length: 200)

        [Display(Name = "D fecha modificacion")]
        public System.DateTime? DFechaModificacion { get; set; } // dFechaModificacion

        [Display(Name = "N ID usuario")]
        public int? NIdUsuario { get; set; } // nIdUsuario

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S usuario")]
        public string SUsuario { get; set; } // sUsuario (length: 100)

        [Display(Name = "N ID reporte 93")]
        public int? NIdReporte93 { get; set; } // nIdReporte93

        [Display(Name = "N ID moneda")]
        public int? NIdMoneda { get; set; } // nIdMoneda

        [Display(Name = "N folio solicitud")]
        public int? NFolioSolicitud { get; set; } // nFolioSolicitud

        [Display(Name = "N tipo pago")]
        public byte? NTipoPago { get; set; } // nTipoPago

        [Required]
        [Display(Name = "N pendiente")]
        public byte NPendiente { get; set; } // nPendiente

        [Display(Name = "N ID producto")]
        public int? NIdProducto { get; set; } // nIdProducto

        [Required]
        [Display(Name = "N tipo recuperacion")]
        public byte NTipoRecuperacion { get; set; } // nTipoRecuperacion

        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "S factura")]
        public string SFactura { get; set; } // sFactura (length: 20)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Display(Name = "N forma recup")]
        public byte? NFormaRecup { get; set; } // nFormaRecup

        [Display(Name = "N ID banco")]
        public int? NIdBanco { get; set; } // nIdBanco

        [Display(Name = "N ID cta banco")]
        public int? NIdCtaBanco { get; set; } // nIdCtaBanco

        [Required]
        [Display(Name = "N status vig")]
        public byte NStatusVig { get; set; } // nStatusVig

        [Display(Name = "D fecha devolucion")]
        public System.DateTime? DFechaDevolucion { get; set; } // dFechaDevolucion

        [Display(Name = "N ID moneda devol")]
        public int? NIdMonedaDevol { get; set; } // nIdMonedaDevol

        [Display(Name = "N devolucion")]
        public decimal? NDevolucion { get; set; } // nDevolucion

        [Display(Name = "N ID linea naviera 42")]
        public int? NIdLineaNaviera42 { get; set; } // nIdLineaNaviera42

        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "S clave naviera")]
        public string SClaveNaviera { get; set; } // sClaveNaviera (length: 12)

        [Display(Name = "N ID concep 28")]
        public int? NIdConcep28 { get; set; } // nIdConcep28

        [Display(Name = "N ID moneda 03")]
        public int? NIdMoneda03 { get; set; } // nIdMoneda03

        [Display(Name = "N ID bancos 22")]
        public int? NIdBancos22 { get; set; } // nIdBancos22

        [Display(Name = "N ID cat cheques 23")]
        public int? NIdCatCheques23 { get; set; } // nIdCatCheques23

        [Display(Name = "N ID moneda devol 03")]
        public int? NIdMonedaDevol03 { get; set; } // nIdMonedaDevol03

        [Display(Name = "N ID cliente af avor de 42")]
        public int? NIdClienteAFavorDe42 { get; set; } // nIdClienteAFavorDe42

        [Display(Name = "N ID usu 01")]
        public int? NIdUsu01 { get; set; } // nIdUsu01

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir122SolCheqConcepto where [SIR_122_SOL_CHEQ_CONCEPTOS].[nIdRevalidacion50] point to this entity (FK_SIR_122_SOL_CHEQ_CONCEPTOS_SIR_50_REVALIDACION)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir122SolCheqConcepto> SIR_Sir122SolCheqConcepto { get; set; } // SIR_122_SOL_CHEQ_CONCEPTOS.FK_SIR_122_SOL_CHEQ_CONCEPTOS_SIR_50_REVALIDACION
        /// <summary>
        /// Child SIR_Sir95ObservRevalidacione where [SIR_95_OBSERV_REVALIDACIONES].[nIdRevalidacion50] point to this entity (FK_SIR_95_OBSERV_REVALIDACIONES_SIR_50_REVALIDACION)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir95ObservRevalidacione> SIR_Sir95ObservRevalidacione { get; set; } // SIR_95_OBSERV_REVALIDACIONES.FK_SIR_95_OBSERV_REVALIDACIONES_SIR_50_REVALIDACION

        // Foreign keys

        /// <summary>
        /// Parent CatPro pointed by [SIR_50_REVALIDACION].([NIdGarantia]) (FK_SIR_50_REVALIDACION_cat_pro)
        /// </summary>
        public virtual CatPro CatPro_NIdGarantia { get; set; } // FK_SIR_50_REVALIDACION_cat_pro

        /// <summary>
        /// Parent CatPro pointed by [SIR_50_REVALIDACION].([NIdProducto]) (FK_SIR_50_REVALIDACION_cat_pro1)
        /// </summary>
        public virtual CatPro CatPro_NIdProducto { get; set; } // FK_SIR_50_REVALIDACION_cat_pro1

        /// <summary>
        /// Parent CatProv pointed by [SIR_50_REVALIDACION].([NIdClienteAFavorDe]) (FK_SIR_50_REVALIDACION_cat_clientes)
        /// </summary>
        public virtual CatProv CatProv_NIdClienteAFavorDe { get; set; } // FK_SIR_50_REVALIDACION_cat_clientes

        /// <summary>
        /// Parent CatProv pointed by [SIR_50_REVALIDACION].([NIdNaviera]) (FK_SIR_50_REVALIDACION_cat_prov)
        /// </summary>
        public virtual CatProv CatProv_NIdNaviera { get; set; } // FK_SIR_50_REVALIDACION_cat_prov

        /// <summary>
        /// Parent MonMoneda pointed by [SIR_50_REVALIDACION].([NIdMoneda]) (FK_SIR_50_REVALIDACION_mon_monedas)
        /// </summary>
        public virtual MonMoneda MonMoneda_NIdMoneda { get; set; } // FK_SIR_50_REVALIDACION_mon_monedas

        /// <summary>
        /// Parent MonMoneda pointed by [SIR_50_REVALIDACION].([NIdMonedaDevol]) (FK_SIR_50_REVALIDACION_mon_monedas_devol)
        /// </summary>
        public virtual MonMoneda MonMoneda_NIdMonedaDevol { get; set; } // FK_SIR_50_REVALIDACION_mon_monedas_devol

        public SIR_Sir50Revalidacion()
        {
            NPendiente = 1;
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            NStatusVig = 1;
            SIR_Sir122SolCheqConcepto = new System.Collections.Generic.List<SIR_Sir122SolCheqConcepto>();
            SIR_Sir95ObservRevalidacione = new System.Collections.Generic.List<SIR_Sir95ObservRevalidacione>();
        }
    }

}
// </auto-generated>
