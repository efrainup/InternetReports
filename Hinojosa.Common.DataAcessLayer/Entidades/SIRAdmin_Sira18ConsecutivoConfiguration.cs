// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIRA_18_CONSECUTIVOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIRAdmin_Sira18ConsecutivoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIRAdmin_Sira18Consecutivo>
    {
        public SIRAdmin_Sira18ConsecutivoConfiguration()
            : this("SIRAdmin")
        {
        }

        public SIRAdmin_Sira18ConsecutivoConfiguration(string schema)
        {
            ToTable("SIRA_18_CONSECUTIVOS", schema);
            HasKey(x => new { x.NTipo, x.NValor, x.BActivo, x.BResetAuto, x.NTipoReset, x.DConsecutivo });

            Property(x => x.NTipo).HasColumnName(@"nTipo").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NValor).HasColumnName(@"nValor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.BActivo).HasColumnName(@"bActivo").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsOptional();
            Property(x => x.NIdPatente70).HasColumnName(@"nIdPatente70").HasColumnType("int").IsOptional();
            Property(x => x.NIdAduana06).HasColumnName(@"nIdAduana06").HasColumnType("int").IsOptional();
            Property(x => x.NIdSucursal).HasColumnName(@"nIdSucursal").HasColumnType("int").IsOptional();
            Property(x => x.BResetAuto).HasColumnName(@"bResetAuto").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NTipoReset).HasColumnName(@"nTipoReset").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DConsecutivo).HasColumnName(@"dConsecutivo").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NIdAlmacen).HasColumnName(@"nIdAlmacen").HasColumnType("int").IsOptional();
            Property(x => x.NIdSuc12).HasColumnName(@"nIdSuc12").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Admin_Admina12Sucursale).WithMany(b => b.SIRAdmin_Sira18Consecutivo).HasForeignKey(c => c.NIdSuc12).WillCascadeOnDelete(false); // FK_SIRA_18_CONSECUTIVOS_ADMINA_12_SUCURSALES
            HasOptional(a => a.CatAlmac).WithMany(b => b.SIRAdmin_Sira18Consecutivo).HasForeignKey(c => c.NIdAlmacen).WillCascadeOnDelete(false); // FK_SIRA_18_CONSECUTIVOS_cat_almac
            HasOptional(a => a.McpSuc).WithMany(b => b.SIRAdmin_Sira18Consecutivo).HasForeignKey(c => c.NIdSucursal).WillCascadeOnDelete(false); // FK_SIRA_18_CONSECUTIVOS_mcp_suc
            HasOptional(a => a.SIR_Sir06AduanaSec).WithMany(b => b.SIRAdmin_Sira18Consecutivo).HasForeignKey(c => c.NIdAduana06).WillCascadeOnDelete(false); // FK_SIRA_18_CONSECUTIVOS_SIR_06_ADUANA_SEC
            HasOptional(a => a.SIR_Sir70Patente).WithMany(b => b.SIRAdmin_Sira18Consecutivo).HasForeignKey(c => c.NIdPatente70).WillCascadeOnDelete(false); // FK_SIRA_18_CONSECUTIVOS_SIR_70_PATENTES
            HasOptional(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIRAdmin_Sira18Consecutivo).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIRA_18_CONSECUTIVOS_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
