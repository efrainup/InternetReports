// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // bit_hos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BitHoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BitHo>
    {
        public BitHoConfiguration()
            : this("dbo")
        {
        }

        public BitHoConfiguration(string schema)
        {
            ToTable("bit_hos", schema);
            HasKey(x => x.IdBit);

            Property(x => x.IdBit).HasColumnName(@"id_bit").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired();
            Property(x => x.Tabla).HasColumnName(@"tabla").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.FecReg).HasColumnName(@"fec_reg").HasColumnType("datetime").IsRequired();
            Property(x => x.ErrorMessage).HasColumnName(@"ErrorMessage").HasColumnType("nvarchar").IsRequired().HasMaxLength(4000);
            Property(x => x.ErrorNumber).HasColumnName(@"ErrorNumber").HasColumnType("int").IsRequired();
            Property(x => x.ErrorSeverity).HasColumnName(@"ErrorSeverity").HasColumnType("int").IsRequired();
            Property(x => x.ErrorProcedure).HasColumnName(@"ErrorProcedure").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.ErrorLine).HasColumnName(@"ErrorLine").HasColumnType("int").IsRequired();
            Property(x => x.ErrorState).HasColumnName(@"ErrorState").HasColumnType("int").IsRequired();
        }
    }

}
// </auto-generated>
