// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // sis_ped
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisPed
    {
        [Required]
        [Display(Name = "Id ped")]
        public int IdPed { get; set; } // id_ped (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(14)]
        [StringLength(14)]
        [Display(Name = "Clave")]
        public string Clave { get; set; } // clave (length: 14)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Num ped")]
        public string NumPed { get; set; } // num_ped (length: 10)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Nom imp exp")]
        public string NomImpExp { get; set; } // nom_imp_exp (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Rfc")]
        public string Rfc { get; set; } // rfc (length: 40)

        [Display(Name = "Cmt")]
        public string Cmt { get; set; } // cmt

        [Required]
        [Display(Name = "Id pat")]
        public int IdPat { get; set; } // id_pat

        [Required]
        [Display(Name = "Tip ope")]
        public byte TipOpe { get; set; } // tip_ope

        [Required]
        [Display(Name = "Tc")]
        public double Tc { get; set; } // tc

        [Required]
        [Display(Name = "Id adu")]
        public int IdAdu { get; set; } // id_adu

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Clave doc")]
        public string ClaveDoc { get; set; } // clave_doc (length: 120)

        [Required]
        [Display(Name = "Fletes")]
        public double Fletes { get; set; } // fletes

        [Required]
        [Display(Name = "Peso bruto")]
        public double PesoBruto { get; set; } // peso_bruto

        [Required]
        [Display(Name = "Seguros")]
        public double Seguros { get; set; } // seguros

        [Required]
        [Display(Name = "Embalajes")]
        public double Embalajes { get; set; } // embalajes

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ent")]
        public System.DateTime FecEnt { get; set; } // fec_ent

        [Required]
        [Display(Name = "Otros inc")]
        public double OtrosInc { get; set; } // otros_inc

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec pag")]
        public System.DateTime FecPag { get; set; } // fec_pag

        [Required(AllowEmptyStrings = true)]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Trans sal")]
        public string TransSal { get; set; } // trans_sal (length: 120)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Clave prev")]
        public string ClavePrev { get; set; } // clave_prev (length: 15)

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Display(Name = "Aduana")]
        public int? Aduana { get; set; } // aduana

        [Display(Name = "Patente")]
        public int? Patente { get; set; } // patente

        [Display(Name = "Idpedimentoproc")]
        public int? Idpedimentoproc { get; set; } // idpedimentoproc

        [Display(Name = "Valoraduanacomercial")]
        public double? Valoraduanacomercial { get; set; } // valoraduanacomercial

        [Required]
        [Display(Name = "C virtual")]
        public int CVirtual { get; set; } // c_virtual

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "C vigencia")]
        public System.DateTime CVigencia { get; set; } // c_vigencia

        [Required(AllowEmptyStrings = true)]
        [Display(Name = "Nom arch")]
        public string NomArch { get; set; } // nom_arch

        public SisPed()
        {
            Clave = "";
            NumPed = "";
            NomImpExp = "";
            Rfc = "";
            IdPat = 0;
            TipOpe = 0;
            Tc = 0;
            ClaveDoc = "";
            Fletes = 0;
            PesoBruto = 0;
            Seguros = 0;
            Embalajes = 0;
            OtrosInc = 0;
            TransSal = "";
            ClavePrev = "";
            Status = 0;
            IdUsr = 0;
            Valoraduanacomercial = 0;
            CVirtual = 0;
            CVigencia = System.DateTime.Now;
            NomArch = "";
        }
    }

}
// </auto-generated>
