// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_215_FRACCIONES_TLC_EXPO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir215FraccionesTlcExpoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir215FraccionesTlcExpo>
    {
        public SIR_Sir215FraccionesTlcExpoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir215FraccionesTlcExpoConfiguration(string schema)
        {
            ToTable("SIR_215_FRACCIONES_TLC_EXPO", schema);
            HasKey(x => x.NIdFraccComp215);

            Property(x => x.NIdFraccComp215).HasColumnName(@"nIdFraccComp215").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdDestino01).HasColumnName(@"nIdDestino01").HasColumnType("int").IsRequired();
            Property(x => x.NIdTlcExp211).HasColumnName(@"nIdTLCExp211").HasColumnType("int").IsRequired();
            Property(x => x.NOrden).HasColumnName(@"nOrden").HasColumnType("tinyint").IsRequired();
            Property(x => x.SFraccionComp).HasColumnName(@"sFraccionComp").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.NFactorAct).HasColumnName(@"nFactorAct").HasColumnType("int").IsOptional();
            Property(x => x.NRecargos).HasColumnName(@"nRecargos").HasColumnType("int").IsOptional();
            Property(x => x.NValorMerNoOrigi).HasColumnName(@"nValorMerNoOrigi").HasColumnType("int").IsOptional();
            Property(x => x.NPorcentaje).HasColumnName(@"nPorcentaje").HasColumnType("int").IsOptional();
            Property(x => x.NMontoIgi).HasColumnName(@"nMontoIGI").HasColumnType("decimal").IsOptional().HasPrecision(12,0);
            Property(x => x.NIdMoneda03).HasColumnName(@"nIdMoneda03").HasColumnType("int").IsOptional();
            Property(x => x.NTotalArancelario).HasColumnName(@"nTotalArancelario").HasColumnType("int").IsOptional();
            Property(x => x.NMontoExento).HasColumnName(@"nMontoExento").HasColumnType("int").IsOptional();
            Property(x => x.BExistePruebaSufi).HasColumnName(@"bExistePruebaSufi").HasColumnType("bit").IsRequired();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();
            Property(x => x.SMoneda).HasColumnName(@"sMoneda").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.SDescMoneda).HasColumnName(@"sDescMoneda").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(72);

            // Foreign keys
            HasOptional(a => a.SIR_Sir03Moneda).WithMany(b => b.SIR_Sir215FraccionesTlcExpo).HasForeignKey(c => c.NIdMoneda03).WillCascadeOnDelete(false); // FK_SIR_215_FRACCIONES_TLC_EXPO_SIR_03_MONEDAS
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir215FraccionesTlcExpo).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_215_FRACCIONES_TLC_EXPO_cat_usr_ed
            HasRequired(a => a.SIR_Sir01Pais).WithMany(b => b.SIR_Sir215FraccionesTlcExpo).HasForeignKey(c => c.NIdDestino01).WillCascadeOnDelete(false); // FK_SIR_215_FRACCIONES_TLC_EXPO_SIR_01_PAISES
            HasRequired(a => a.SIR_Sir211TlcExportacione).WithMany(b => b.SIR_Sir215FraccionesTlcExpo).HasForeignKey(c => c.NIdTlcExp211).WillCascadeOnDelete(false); // FK_SIR_215_FRACCIONES_TLC_EXPO_SIR_211_TLC_EXPORTACIONES
        }
    }

}
// </auto-generated>
