// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_397_CLIENTES_COVE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir397ClientesCoveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir397ClientesCove>
    {
        public SIR_Sir397ClientesCoveConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir397ClientesCoveConfiguration(string schema)
        {
            ToTable("SIR_397_CLIENTES_COVE", schema);
            HasKey(x => x.NIdClienteCove397);

            Property(x => x.NIdClienteCove397).HasColumnName(@"nIdClienteCOVE397").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsOptional();
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsOptional();
            Property(x => x.SRutaArchivoXmlCove).HasColumnName(@"sRutaArchivoXmlCOVE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SUsuarioCove).HasColumnName(@"sUsuarioCOVE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SPasswordCove).HasColumnName(@"sPasswordCOVE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.SArchivoKeyCove).HasColumnName(@"sArchivoKeyCOVE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SPalabraSecretaKeyCove).HasColumnName(@"sPalabraSecretaKeyCOVE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.SArchivoKeyVucem).HasColumnName(@"sArchivoKeyVUCEM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SPalabraSecretaKeyVucem).HasColumnName(@"sPalabraSecretaKeyVUCEM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsOptional();
            Property(x => x.NTipoIdentificador).HasColumnName(@"nTipoIdentificador").HasColumnType("tinyint").IsOptional();
            Property(x => x.NTipoKeyFiel).HasColumnName(@"nTipoKeyFIEL").HasColumnType("tinyint").IsOptional();

            // Foreign keys
            HasOptional(a => a.CatCliente).WithMany(b => b.SIR_Sir397ClientesCove).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_397_CLIENTES_COVE_cat_clientes
            HasOptional(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir397ClientesCove).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_397_CLIENTES_COVE_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
