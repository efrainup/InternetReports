// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // sis_fmto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SisFmto
    {
        [Required]
        [Display(Name = "Id fmto")]
        public int IdFmto { get; set; } // id_fmto (Primary key)

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        ///<summary>
        /// Descripci√≥n de Formato
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Fmto")]
        public string Fmto { get; set; } // fmto (length: 50)

        ///<summary>
        /// Nombre del Archivo RPT
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Rpt")]
        public string Rpt { get; set; } // rpt (length: 40)

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        ///<summary>
        /// 1=Formato por Default
        ///</summary>
        [Required]
        [Display(Name = "Default")]
        public byte @Default { get; set; } // default

        [Required]
        [Display(Name = "Copias")]
        public byte Copias { get; set; } // copias

        [Required(AllowEmptyStrings = true)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Modulo")]
        public string Modulo { get; set; } // modulo (length: 2)

        ///<summary>
        /// 1=Es un Cheque
        ///</summary>
        [Required]
        [Display(Name = "C check")]
        public byte CCheck { get; set; } // c_check

        ///<summary>
        /// 1=Impresora 0=Pantalla 2=Archivo
        ///</summary>
        [Required]
        [Display(Name = "Def sal")]
        public byte DefSal { get; set; } // def_sal

        [Required]
        [Display(Name = "C ID tip doc")]
        public int CIdTipDoc { get; set; } // c_id_tip_doc

        ///<summary>
        /// 1=Es un formato que sale de las tablas de Temporal
        ///</summary>
        [Required]
        [Display(Name = "C tmp")]
        public byte CTmp { get; set; } // c_tmp

        ///<summary>
        /// 1=Vertical 2=Horizontal
        ///</summary>
        [Required]
        [Display(Name = "Tip hoj")]
        public byte TipHoj { get; set; } // tip_hoj

        ///<summary>
        /// 1=formato para cuenta de gastos 0 = normal
        ///</summary>
        [Required]
        [Display(Name = "C cga")]
        public byte CCga { get; set; } // c_cga

        [Required]
        [Display(Name = "C exp xls")]
        public byte CExpXls { get; set; } // c_exp_xls

        [Required]
        [Display(Name = "C exp html")]
        public byte CExpHtml { get; set; } // c_exp_html

        [Required]
        [Display(Name = "C exp pdf")]
        public byte CExpPdf { get; set; } // c_exp_pdf

        [Required]
        [Display(Name = "C cfd")]
        public byte CCfd { get; set; } // c_cfd

        [Required]
        [Display(Name = "C cfd pre")]
        public byte CCfdPre { get; set; } // c_cfd_pre

        [Required]
        [Display(Name = "C cbb")]
        public byte CCbb { get; set; } // c_cbb

        [Required]
        [Display(Name = "C cfdi")]
        public byte CCfdi { get; set; } // c_cfdi

        [Required]
        [Display(Name = "C dev")]
        public bool CDev { get; set; } // c_dev

        // Foreign keys

        /// <summary>
        /// Parent CatDocto pointed by [sis_fmto].([IdTipDoc]) (FK_sis_fmto_cat_doctos)
        /// </summary>
        public virtual CatDocto CatDocto { get; set; } // FK_sis_fmto_cat_doctos

        public SisFmto()
        {
            IdFmto = 0;
            IdTipDoc = 0;
            Fmto = "";
            Rpt = "";
            Status = 1;
            @Default = 0;
            Copias = 1;
            Modulo = "";
            CCheck = 0;
            DefSal = 0;
            CIdTipDoc = 0;
            CTmp = 0;
            TipHoj = 1;
            CCga = 0;
            CExpXls = 3;
            CExpHtml = 3;
            CExpPdf = 3;
            CCfd = 0;
            CCfdPre = 0;
            CCbb = 0;
            CCfdi = 0;
            CDev = false;
        }
    }

}
// </auto-generated>
