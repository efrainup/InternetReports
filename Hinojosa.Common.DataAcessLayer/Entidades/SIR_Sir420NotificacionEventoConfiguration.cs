// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_420_NOTIFICACION_EVENTOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir420NotificacionEventoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir420NotificacionEvento>
    {
        public SIR_Sir420NotificacionEventoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir420NotificacionEventoConfiguration(string schema)
        {
            ToTable("SIR_420_NOTIFICACION_EVENTOS", schema);
            HasKey(x => x.NIdNotificacionEvento420);

            Property(x => x.NIdNotificacionEvento420).HasColumnName(@"nIdNotificacionEvento420").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdNotificacion416).HasColumnName(@"nIdNotificacion416").HasColumnType("int").IsRequired();
            Property(x => x.NIdEvento419).HasColumnName(@"nIdEvento419").HasColumnType("int").IsRequired();
            Property(x => x.BPreguntarEnvio).HasColumnName(@"bPreguntarEnvio").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasRequired(a => a.SIR_Sir416Notificacione).WithMany(b => b.SIR_Sir420NotificacionEvento).HasForeignKey(c => c.NIdNotificacion416).WillCascadeOnDelete(false); // FK_SIR_420_NOTIFICACION_EVENTOS_SIR_416_NOTIFICACIONES
            HasRequired(a => a.SIR_Sir419CatalogoEvento).WithMany(b => b.SIR_Sir420NotificacionEvento).HasForeignKey(c => c.NIdEvento419).WillCascadeOnDelete(false); // FK_SIR_420_NOTIFICACION_EVENTOS_SIR_419_CATALOGO_EVENTOS
        }
    }

}
// </auto-generated>
