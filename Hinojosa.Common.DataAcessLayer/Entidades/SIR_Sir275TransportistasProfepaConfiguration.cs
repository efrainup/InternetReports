// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_275_TRANSPORTISTAS_PROFEPA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir275TransportistasProfepaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir275TransportistasProfepa>
    {
        public SIR_Sir275TransportistasProfepaConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir275TransportistasProfepaConfiguration(string schema)
        {
            ToTable("SIR_275_TRANSPORTISTAS_PROFEPA", schema);
            HasKey(x => x.NIdTransProf275);

            Property(x => x.NIdTransProf275).HasColumnName(@"nIdTransProf275").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdProfepa273).HasColumnName(@"nIdProfepa273").HasColumnType("int").IsOptional();
            Property(x => x.NIdTransportista).HasColumnName(@"nIdTransportista").HasColumnType("int").IsOptional();
            Property(x => x.NFianza).HasColumnName(@"nFianza").HasColumnType("decimal").IsOptional().HasPrecision(13,3);
            Property(x => x.NSeguro).HasColumnName(@"nSeguro").HasColumnType("decimal").IsOptional().HasPrecision(13,3);
            Property(x => x.SRuta).HasColumnName(@"sRuta").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.SAutorizacion).HasColumnName(@"sAutorizacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(70);
            Property(x => x.SManifiestoEr).HasColumnName(@"sManifiestoER").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.SPlacasTc).HasColumnName(@"sPlacasTC").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SNumSerie).HasColumnName(@"sNumSerie").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.SAutUnidadCarga).HasColumnName(@"sAutUnidadCarga").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.SPlacasUc).HasColumnName(@"sPlacasUC").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SSeguroUnidad).HasColumnName(@"sSeguroUnidad").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.SNumSeguroDanos).HasColumnName(@"sNumSeguroDanos").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.NIdAseg278).HasColumnName(@"nIdAseg278").HasColumnType("int").IsOptional();
            Property(x => x.SNombreOperador).HasColumnName(@"sNombreOperador").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(80);
            Property(x => x.DVigSeguro).HasColumnName(@"dVigSeguro").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DVigAutorizacion).HasColumnName(@"dVigAutorizacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DVigFianza).HasColumnName(@"dVigFianza").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.CatProv).WithMany(b => b.SIR_Sir275TransportistasProfepa).HasForeignKey(c => c.NIdTransportista).WillCascadeOnDelete(false); // FK_SIR_275_TRANSPORTISTAS_PROFEPA_cat_prov
            HasOptional(a => a.SIR_Sir273Profepa).WithMany(b => b.SIR_Sir275TransportistasProfepa).HasForeignKey(c => c.NIdProfepa273).WillCascadeOnDelete(false); // FK_SIR_275_TRANSPORTISTAS_PROFEPA_SIR_273_PROFEPA
            HasOptional(a => a.SIR_Sir278Aseguradora).WithMany(b => b.SIR_Sir275TransportistasProfepa).HasForeignKey(c => c.NIdAseg278).WillCascadeOnDelete(false); // FK_SIR_275_TRANSPORTISTAS_PROFEPA_SIR_278_ASEGURADORAS
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir275TransportistasProfepa).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_275_TRANSPORTISTAS_PROFEPA_cat_usr_ed
        }
    }

}
// </auto-generated>
