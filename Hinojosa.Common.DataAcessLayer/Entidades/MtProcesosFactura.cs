// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // MT_ProcesosFacturas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MtProcesosFactura
    {
        [Required]
        [Display(Name = "N ID factura")]
        public int NIdFactura { get; set; } // nIdFactura (Primary key)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S proceso")]
        public string SProceso { get; set; } // sProceso (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S numero")]
        public string SNumero { get; set; } // sNumero (length: 100)

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha")]
        public System.DateTime DFecha { get; set; } // dFecha

        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "S consecutivo")]
        public string SConsecutivo { get; set; } // sConsecutivo (length: 6)

        [Display(Name = "N tipo")]
        public int? NTipo { get; set; } // nTipo

        [MaxLength(36)]
        [StringLength(36)]
        [Display(Name = "S folio fiscal")]
        public string SFolioFiscal { get; set; } // sFolioFiscal (length: 36)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S factura completa")]
        public string SFacturaCompleta { get; set; } // sFacturaCompleta (length: 100)

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "S incoterm")]
        public string SIncoterm { get; set; } // sIncoterm (length: 5)

        [Display(Name = "N valor factura")]
        public decimal? NValorFactura { get; set; } // nValorFactura

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "S moneda")]
        public string SMoneda { get; set; } // sMoneda (length: 5)

        [MaxLength(350)]
        [StringLength(350)]
        [Display(Name = "S proveedor")]
        public string SProveedor { get; set; } // sProveedor (length: 350)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S tax ID proveedor")]
        public string STaxIdProveedor { get; set; } // sTaxIdProveedor (length: 50)

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S direccion proveedor")]
        public string SDireccionProveedor { get; set; } // sDireccionProveedor (length: 250)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S ciudad proveedor")]
        public string SCiudadProveedor { get; set; } // sCiudadProveedor (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S region proveedor")]
        public string SRegionProveedor { get; set; } // sRegionProveedor (length: 100)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S codigo postal proveedor")]
        public string SCodigoPostalProveedor { get; set; } // sCodigoPostalProveedor (length: 10)

        [MaxLength(350)]
        [StringLength(350)]
        [Display(Name = "S cliente")]
        public string SCliente { get; set; } // sCliente (length: 350)

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "S direccion cliente")]
        public string SDireccionCliente { get; set; } // sDireccionCliente (length: 250)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S ciudad cliente")]
        public string SCiudadCliente { get; set; } // sCiudadCliente (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S region cliente")]
        public string SRegionCliente { get; set; } // sRegionCliente (length: 100)

        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "S pais cliente")]
        public string SPaisCliente { get; set; } // sPaisCliente (length: 100)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S codigo postal cliente")]
        public string SCodigoPostalCliente { get; set; } // sCodigoPostalCliente (length: 10)

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S truck number")]
        public string STruckNumber { get; set; } // sTruckNumber (length: 50)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "S pais proveedor")]
        public string SPaisProveedor { get; set; } // sPaisProveedor (length: 10)
    }

}
// </auto-generated>
