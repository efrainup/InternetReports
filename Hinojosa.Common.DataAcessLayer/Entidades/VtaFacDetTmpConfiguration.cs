// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // vta_fac_det_tmp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VtaFacDetTmpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VtaFacDetTmp>
    {
        public VtaFacDetTmpConfiguration()
            : this("dbo")
        {
        }

        public VtaFacDetTmpConfiguration(string schema)
        {
            ToTable("vta_fac_det_tmp", schema);
            HasKey(x => x.IdFacDet);

            Property(x => x.IdFacDet).HasColumnName(@"id_fac_det").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdFac).HasColumnName(@"id_fac").HasColumnType("int").IsRequired();
            Property(x => x.IdDocVta).HasColumnName(@"id_doc_vta").HasColumnType("int").IsRequired();
            Property(x => x.Sub).HasColumnName(@"sub").HasColumnType("float").IsRequired();
            Property(x => x.Iva).HasColumnName(@"iva").HasColumnType("float").IsRequired();
            Property(x => x.Total).HasColumnName(@"total").HasColumnType("float").IsRequired();
            Property(x => x.IdSuc).HasColumnName(@"id_suc").HasColumnType("int").IsRequired();
            Property(x => x.NoPart).HasColumnName(@"no_part").HasColumnType("int").IsRequired();
            Property(x => x.IdPro).HasColumnName(@"id_pro").HasColumnType("int").IsRequired();
            Property(x => x.Udm).HasColumnName(@"udm").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Cant).HasColumnName(@"cant").HasColumnType("float").IsRequired();
            Property(x => x.PrecioOrig).HasColumnName(@"precio_orig").HasColumnType("float").IsRequired();
            Property(x => x.Promoc).HasColumnName(@"promoc").HasColumnType("float").IsRequired();
            Property(x => x.PrecioPub).HasColumnName(@"precio_pub").HasColumnType("float").IsRequired();
            Property(x => x.DctoPtg).HasColumnName(@"dcto_ptg").HasColumnType("float").IsRequired();
            Property(x => x.PrecioCiva).HasColumnName(@"precio_civa").HasColumnType("float").IsRequired();
            Property(x => x.ImporteCiva).HasColumnName(@"importe_civa").HasColumnType("float").IsRequired();
            Property(x => x.PrecioPubSiva).HasColumnName(@"precio_pub_siva").HasColumnType("float").IsRequired();
            Property(x => x.PrecioSiva).HasColumnName(@"precio_siva").HasColumnType("float").IsRequired();
            Property(x => x.ImporteSiva).HasColumnName(@"importe_siva").HasColumnType("float").IsRequired();
            Property(x => x.MontoIva).HasColumnName(@"monto_iva").HasColumnType("float").IsRequired();
            Property(x => x.Tasa).HasColumnName(@"tasa").HasColumnType("float").IsRequired();
            Property(x => x.IdImpto).HasColumnName(@"id_impto").HasColumnType("int").IsRequired();
            Property(x => x.CCambioPrec).HasColumnName(@"c_cambio_prec").HasColumnType("tinyint").IsRequired();
            Property(x => x.Costo).HasColumnName(@"costo").HasColumnType("float").IsRequired();
            Property(x => x.MontoDescto).HasColumnName(@"monto_descto").HasColumnType("float").IsRequired();
            Property(x => x.CostoTotal).HasColumnName(@"costo_total").HasColumnType("float").IsRequired();
            Property(x => x.IdAlmac).HasColumnName(@"id_almac").HasColumnType("int").IsRequired();
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.Tipo).HasColumnName(@"tipo").HasColumnType("tinyint").IsRequired();
            Property(x => x.TipoPro).HasColumnName(@"tipo_pro").HasColumnType("tinyint").IsRequired();
            Property(x => x.EsSub).HasColumnName(@"es_sub").HasColumnType("tinyint").IsRequired();
            Property(x => x.CantDev).HasColumnName(@"cant_dev").HasColumnType("float").IsRequired();
            Property(x => x.PorFacturar).HasColumnName(@"por_facturar").HasColumnType("float").IsRequired();
            Property(x => x.IdRem).HasColumnName(@"id_rem").HasColumnType("int").IsRequired();
            Property(x => x.IdRemPart).HasColumnName(@"id_rem_part").HasColumnType("int").IsRequired();
            Property(x => x.IdFacDetKit).HasColumnName(@"id_fac_det_kit").HasColumnType("int").IsRequired();
            Property(x => x.IdMda).HasColumnName(@"id_mda").HasColumnType("int").IsRequired();
            Property(x => x.Tc).HasColumnName(@"tc").HasColumnType("float").IsRequired();
            Property(x => x.Oper).HasColumnName(@"oper").HasColumnType("tinyint").IsRequired();
            Property(x => x.SubBse).HasColumnName(@"sub_bse").HasColumnType("float").IsRequired();
            Property(x => x.IvaBse).HasColumnName(@"iva_bse").HasColumnType("float").IsRequired();
            Property(x => x.TotalBse).HasColumnName(@"total_bse").HasColumnType("float").IsRequired();
            Property(x => x.PrecioOrigBse).HasColumnName(@"precio_orig_bse").HasColumnType("float").IsRequired();
            Property(x => x.PrecioPubBse).HasColumnName(@"precio_pub_bse").HasColumnType("float").IsRequired();
            Property(x => x.PrecioCivaBse).HasColumnName(@"precio_civa_bse").HasColumnType("float").IsRequired();
            Property(x => x.ImporteCivaBse).HasColumnName(@"importe_civa_bse").HasColumnType("float").IsRequired();
            Property(x => x.PrecioPubSivaBse).HasColumnName(@"precio_pub_siva_bse").HasColumnType("float").IsRequired();
            Property(x => x.PrecioSivaBse).HasColumnName(@"precio_siva_bse").HasColumnType("float").IsRequired();
            Property(x => x.ImporteSivaBse).HasColumnName(@"importe_siva_bse").HasColumnType("float").IsRequired();
            Property(x => x.MontoIvaBse).HasColumnName(@"monto_iva_bse").HasColumnType("float").IsRequired();
            Property(x => x.MontoDesctoBse).HasColumnName(@"monto_descto_bse").HasColumnType("float").IsRequired();
            Property(x => x.IdComSerLot).HasColumnName(@"id_com_ser_lot").HasColumnType("int").IsRequired();
            Property(x => x.DiasEnt).HasColumnName(@"dias_ent").HasColumnType("int").IsRequired();
            Property(x => x.FecProm).HasColumnName(@"fec_prom").HasColumnType("datetime").IsRequired();
            Property(x => x.FecEmb).HasColumnName(@"fec_emb").HasColumnType("datetime").IsRequired();
            Property(x => x.FecReq).HasColumnName(@"fec_req").HasColumnType("datetime").IsRequired();
            Property(x => x.IdPrgEntFacDet).HasColumnName(@"id_prg_ent_fac_det").HasColumnType("int").IsRequired();
            Property(x => x.CantSurt).HasColumnName(@"cant_surt").HasColumnType("float").IsRequired();
            Property(x => x.PorSolic).HasColumnName(@"por_solic").HasColumnType("float").IsRequired();
            Property(x => x.IdPartPad).HasColumnName(@"id_part_pad").HasColumnType("int").IsRequired();
            Property(x => x.IdProOrd).HasColumnName(@"id_pro_ord").HasColumnType("int").IsRequired();
            Property(x => x.CantOrdPro).HasColumnName(@"cant_ord_pro").HasColumnType("float").IsRequired();
            Property(x => x.IdProLis).HasColumnName(@"id_pro_lis").HasColumnType("int").IsRequired();
            Property(x => x.IdLisPre).HasColumnName(@"id_lis_pre").HasColumnType("int").IsRequired();
            Property(x => x.CPrecModif).HasColumnName(@"c_prec_modif").HasColumnType("int").IsRequired();
            Property(x => x.IdKardex).HasColumnName(@"id_kardex").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.CatAlmac).WithMany(b => b.VtaFacDetTmps).HasForeignKey(c => c.IdAlmac).WillCascadeOnDelete(false); // FK_vta_fac_det_tmp_cat_almac
            HasRequired(a => a.CatPro).WithMany(b => b.VtaFacDetTmps).HasForeignKey(c => c.IdPro).WillCascadeOnDelete(false); // FK_vta_fac_det_tmp_cat_pro
            HasRequired(a => a.VtaFacEncTmp).WithMany(b => b.VtaFacDetTmps).HasForeignKey(c => c.IdFac).WillCascadeOnDelete(false); // FK_vta_fac_det_tmp_vta_fac_enc_tmp
        }
    }

}
// </auto-generated>
