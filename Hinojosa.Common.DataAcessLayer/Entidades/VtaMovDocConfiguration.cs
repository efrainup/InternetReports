// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // vta_mov_doc
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VtaMovDocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VtaMovDoc>
    {
        public VtaMovDocConfiguration()
            : this("dbo")
        {
        }

        public VtaMovDocConfiguration(string schema)
        {
            ToTable("vta_mov_doc", schema);
            HasKey(x => x.IdDoc);

            Property(x => x.IdDoc).HasColumnName(@"id_doc").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdCaja).HasColumnName(@"id_caja").HasColumnType("int").IsOptional();
            Property(x => x.IdCorte).HasColumnName(@"id_corte").HasColumnType("int").IsOptional();
            Property(x => x.IdTipDoc).HasColumnName(@"id_tip_doc").HasColumnType("int").IsOptional();
            Property(x => x.IdAplicaDoc).HasColumnName(@"id_aplica_doc").HasColumnType("int").IsOptional();
            Property(x => x.IdCli).HasColumnName(@"id_cli").HasColumnType("int").IsOptional();
            Property(x => x.IdUsr).HasColumnName(@"id_usr").HasColumnType("int").IsOptional();
            Property(x => x.NumDoc).HasColumnName(@"num_doc").HasColumnType("int").IsOptional();
            Property(x => x.NumDocAplica).HasColumnName(@"num_doc_aplica").HasColumnType("int").IsOptional();
            Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType("datetime").IsOptional();
            Property(x => x.Sub).HasColumnName(@"sub").HasColumnType("float").IsOptional();
            Property(x => x.Iva).HasColumnName(@"iva").HasColumnType("float").IsOptional();
            Property(x => x.Total).HasColumnName(@"total").HasColumnType("float").IsOptional();
            Property(x => x.Saldo).HasColumnName(@"saldo").HasColumnType("float").IsOptional();
            Property(x => x.Dcto).HasColumnName(@"dcto").HasColumnType("tinyint").IsOptional();
            Property(x => x.DctoSub).HasColumnName(@"dcto_sub").HasColumnType("float").IsOptional();
            Property(x => x.DctoIva).HasColumnName(@"dcto_iva").HasColumnType("float").IsOptional();
            Property(x => x.DctoMto).HasColumnName(@"dcto_mto").HasColumnType("float").IsOptional();
            Property(x => x.CostoVta).HasColumnName(@"costo_vta").HasColumnType("float").IsOptional();
            Property(x => x.IdFact).HasColumnName(@"id_fact").HasColumnType("int").IsOptional();
            Property(x => x.Status).HasColumnName(@"status").HasColumnType("tinyint").IsOptional();
            Property(x => x.IdSuc).HasColumnName(@"id_suc").HasColumnType("int").IsOptional();
            Property(x => x.IdFactDia).HasColumnName(@"id_fact_dia").HasColumnType("int").IsRequired();
            Property(x => x.MtoCred).HasColumnName(@"mto_cred").HasColumnType("float").IsRequired();
            Property(x => x.Dias).HasColumnName(@"dias").HasColumnType("int").IsRequired();
            Property(x => x.Vence).HasColumnName(@"vence").HasColumnType("datetime").IsRequired();
            Property(x => x.IdCierre).HasColumnName(@"id_cierre").HasColumnType("int").IsRequired();
            Property(x => x.IdVend).HasColumnName(@"id_vend").HasColumnType("int").IsRequired();
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.CargMisc).HasColumnName(@"carg_misc").HasColumnType("float").IsRequired();
            Property(x => x.Flete).HasColumnName(@"flete").HasColumnType("float").IsRequired();
            Property(x => x.IvaFlete).HasColumnName(@"iva_flete").HasColumnType("float").IsRequired();
            Property(x => x.CDctoCarg).HasColumnName(@"c_dcto_carg").HasColumnType("tinyint").IsRequired();
            Property(x => x.CDctoFlete).HasColumnName(@"c_dcto_flete").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdProy).HasColumnName(@"id_proy").HasColumnType("int").IsRequired();
            Property(x => x.IdEnt).HasColumnName(@"id_ent").HasColumnType("int").IsRequired();
            Property(x => x.@Ref).HasColumnName(@"ref").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.PtgCom).HasColumnName(@"ptg_com").HasColumnType("float").IsRequired();
            Property(x => x.ComMonto).HasColumnName(@"com_monto").HasColumnType("float").IsRequired();
            Property(x => x.ComPagMto).HasColumnName(@"com_pag_mto").HasColumnType("float").IsRequired();
            Property(x => x.TipoCom).HasColumnName(@"tipo_com").HasColumnType("tinyint").IsRequired();
            Property(x => x.TipoFac).HasColumnName(@"tipo_fac").HasColumnType("tinyint").IsRequired();
            Property(x => x.CantVta).HasColumnName(@"cant_vta").HasColumnType("float").IsRequired();
            Property(x => x.CantDev).HasColumnName(@"cant_dev").HasColumnType("float").IsRequired();
            Property(x => x.ImporteDev).HasColumnName(@"importe_dev").HasColumnType("float").IsRequired();
            Property(x => x.IdCodSvr).HasColumnName(@"id_cod_svr").HasColumnType("int").IsRequired();
            Property(x => x.IdMda).HasColumnName(@"id_mda").HasColumnType("int").IsRequired();
            Property(x => x.Oper).HasColumnName(@"oper").HasColumnType("tinyint").IsRequired();
            Property(x => x.Tc).HasColumnName(@"tc").HasColumnType("float").IsRequired();
            Property(x => x.FecReg).HasColumnName(@"fec_reg").HasColumnType("datetime").IsRequired();
            Property(x => x.Serie).HasColumnName(@"serie").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.MtoRed).HasColumnName(@"mto_red").HasColumnType("float").IsRequired();
            Property(x => x.MtoReal).HasColumnName(@"mto_real").HasColumnType("float").IsRequired();

            // Foreign keys
            HasOptional(a => a.CatCaja).WithMany(b => b.VtaMovDocs).HasForeignKey(c => c.IdCaja).WillCascadeOnDelete(false); // FK_vta_mov_doc_cat_cajas
            HasOptional(a => a.CatCliente).WithMany(b => b.VtaMovDocs).HasForeignKey(c => c.IdCli).WillCascadeOnDelete(false); // FK_vta_mov_doc_cat_clientes
            HasOptional(a => a.CatUsr).WithMany(b => b.VtaMovDocs).HasForeignKey(c => c.IdUsr).WillCascadeOnDelete(false); // FK_vta_mov_doc_cat_usr
            HasOptional(a => a.VtaCorte).WithMany(b => b.VtaMovDocs).HasForeignKey(c => new { c.IdCorte, c.IdCaja }).WillCascadeOnDelete(false); // FK_vta_mov_doc_vta_cortes
            HasOptional(a => a.VtaFacEnc).WithMany(b => b.VtaMovDocs).HasForeignKey(c => c.IdFact).WillCascadeOnDelete(false); // FK_vta_mov_doc_vta_fac_enc
        }
    }

}
// </auto-generated>
