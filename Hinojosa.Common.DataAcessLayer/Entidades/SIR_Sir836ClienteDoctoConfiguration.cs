// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_836_CLIENTE_DOCTO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir836ClienteDoctoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir836ClienteDocto>
    {
        public SIR_Sir836ClienteDoctoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir836ClienteDoctoConfiguration(string schema)
        {
            ToTable("SIR_836_CLIENTE_DOCTO", schema);
            HasKey(x => new { x.NIdCliente, x.NIdClaveDocto28, x.NTipoOperacion });

            Property(x => x.NIdClaveDocto28).HasColumnName(@"nIdClaveDocto28").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.SIR_Sir28ClavesDocto).WithMany(b => b.SIR_Sir836ClienteDocto).HasForeignKey(c => c.NIdClaveDocto28).WillCascadeOnDelete(false); // FK_SIR_836_CLIENTE_DOCTO_SIR_62_TIPOS_DOCUMENTOS
        }
    }

}
// </auto-generated>
