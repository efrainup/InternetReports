// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // ADMINO_15_CUENTAS_GASTOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Admin_Admino15CuentasGastoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Admin_Admino15CuentasGasto>
    {
        public Admin_Admino15CuentasGastoConfiguration()
            : this("Admin")
        {
        }

        public Admin_Admino15CuentasGastoConfiguration(string schema)
        {
            ToTable("ADMINO_15_CUENTAS_GASTOS", schema);
            HasKey(x => x.NIdCtaGastos15);

            Property(x => x.NIdCtaGastos15).HasColumnName(@"nIdCtaGastos15").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SPrefijo).HasColumnName(@"sPrefijo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.NNumero).HasColumnName(@"nNumero").HasColumnType("int").IsRequired();
            Property(x => x.DFactura).HasColumnName(@"dFactura").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.NTotalFactura).HasColumnName(@"nTotalFactura").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.NIdClie07).HasColumnName(@"nIdClie07").HasColumnType("int").IsRequired();
            Property(x => x.NIdProv42).HasColumnName(@"nIdProv42").HasColumnType("int").IsOptional();
            Property(x => x.NIdFacturarA).HasColumnName(@"nIdFacturarA").HasColumnType("int").IsOptional();
            Property(x => x.NStatus).HasColumnName(@"nStatus").HasColumnType("tinyint").IsRequired();
            Property(x => x.SDescripcionMerc).HasColumnName(@"sDescripcionMerc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NIdPedimento149).HasColumnName(@"nIdPedimento149").HasColumnType("int").IsOptional();
            Property(x => x.NIdClaveDocto28).HasColumnName(@"nIdClaveDocto28").HasColumnType("int").IsOptional();
            Property(x => x.SNumPedimento).HasColumnName(@"sNumPedimento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.NValorAduana).HasColumnName(@"nValorAduana").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.NValorFactura).HasColumnName(@"nValorFactura").HasColumnType("decimal").IsOptional().HasPrecision(15,5);
            Property(x => x.NTipoCambio).HasColumnName(@"nTipoCambio").HasColumnType("decimal").IsOptional().HasPrecision(14,5);
            Property(x => x.SPedido).HasColumnName(@"sPedido").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DFechaPago).HasColumnName(@"dFechaPago").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaEntrada).HasColumnName(@"dFechaEntrada").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SConocimientos).HasColumnName(@"sConocimientos").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SMarcasNumeros).HasColumnName(@"sMarcasNumeros").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NTotalBultos).HasColumnName(@"nTotalBultos").HasColumnType("int").IsOptional();
            Property(x => x.NPesoBruto).HasColumnName(@"nPesoBruto").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NNumeroContenedores).HasColumnName(@"nNumeroContenedores").HasColumnType("int").IsOptional();
            Property(x => x.NNumeroCandados).HasColumnName(@"nNumeroCandados").HasColumnType("int").IsOptional();
            Property(x => x.NIdPais01).HasColumnName(@"nIdPais01").HasColumnType("int").IsOptional();
            Property(x => x.NIdTransportista42).HasColumnName(@"nIdTransportista42").HasColumnType("int").IsOptional();
            Property(x => x.SObservaciones).HasColumnName(@"sObservaciones").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsOptional();
            Property(x => x.NIdLiquid22).HasColumnName(@"nIdLiquid22").HasColumnType("int").IsOptional();
            Property(x => x.DLiquidacion).HasColumnName(@"dLiquidacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.Admin_Adminc01Pais).WithMany(b => b.Admin_Admino15CuentasGasto).HasForeignKey(c => c.NIdPais01).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_ADMINC_01_PAISES
            HasOptional(a => a.Admin_Adminc07Cliente_NIdFacturarA).WithMany(b => b.Admin_Admino15CuentasGasto_NIdFacturarA).HasForeignKey(c => c.NIdFacturarA).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_ADMINC_07_CLIENTES_FacturarA
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdProv42).WithMany(b => b.Admin_Admino15CuentasGasto_NIdProv42).HasForeignKey(c => c.NIdProv42).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_ADMINC_42_PROVEEDORES
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdTransportista42).WithMany(b => b.Admin_Admino15CuentasGasto_NIdTransportista42).HasForeignKey(c => c.NIdTransportista42).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_ADMINC_42_PROVEEDORES1
            HasOptional(a => a.Admin_Admino22Liquidacione).WithMany(b => b.Admin_Admino15CuentasGasto).HasForeignKey(c => c.NIdLiquid22).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_ADMINO_22_LIQUIDACIONES
            HasRequired(a => a.Admin_Adminc07Cliente_NIdClie07).WithMany(b => b.Admin_Admino15CuentasGasto_NIdClie07).HasForeignKey(c => c.NIdClie07).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_ADMINC_07_CLIENTES
            HasRequired(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.Admin_Admino15CuentasGasto).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_ADMINO_15_CUENTAS_GASTOS_SIR_71_SUCURSAL_PATENTE_ADUANA
        }
    }

}
// </auto-generated>
