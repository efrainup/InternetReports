// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // bco_aux
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BcoAuxConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BcoAux>
    {
        public BcoAuxConfiguration()
            : this("dbo")
        {
        }

        public BcoAuxConfiguration(string schema)
        {
            ToTable("bco_aux", schema);
            HasKey(x => x.IdBcoAux);

            Property(x => x.IdBcoAux).HasColumnName(@"id_bco_aux").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUsr).HasColumnName(@"id_usr").HasColumnType("int").IsRequired();
            Property(x => x.IdNota).HasColumnName(@"id_nota").HasColumnType("int").IsRequired();
            Property(x => x.IdCta).HasColumnName(@"id_cta").HasColumnType("int").IsRequired();
            Property(x => x.IdCpt).HasColumnName(@"id_cpt").HasColumnType("int").IsRequired();
            Property(x => x.IdTipDoc).HasColumnName(@"id_tip_doc").HasColumnType("int").IsRequired();
            Property(x => x.IdDoc).HasColumnName(@"id_doc").HasColumnType("int").IsRequired();
            Property(x => x.FecReg).HasColumnName(@"fec_reg").HasColumnType("datetime").IsRequired();
            Property(x => x.NumDoc).HasColumnName(@"num_doc").HasColumnType("int").IsRequired();
            Property(x => x.NumChq).HasColumnName(@"num_chq").HasColumnType("int").IsRequired();
            Property(x => x.NumDocCli).HasColumnName(@"num_doc_cli").HasColumnType("int").IsRequired();
            Property(x => x.FecDoc).HasColumnName(@"fec_doc").HasColumnType("datetime").IsRequired();
            Property(x => x.Tipo).HasColumnName(@"tipo").HasColumnType("tinyint").IsRequired();
            Property(x => x.@Ref).HasColumnName(@"ref").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Cargo).HasColumnName(@"cargo").HasColumnType("float").IsRequired();
            Property(x => x.Abono).HasColumnName(@"abono").HasColumnType("float").IsRequired();
            Property(x => x.IdMda).HasColumnName(@"id_mda").HasColumnType("int").IsRequired();
            Property(x => x.Tc).HasColumnName(@"tc").HasColumnType("float").IsRequired();
            Property(x => x.Oper).HasColumnName(@"oper").HasColumnType("tinyint").IsRequired();
            Property(x => x.CargoBse).HasColumnName(@"cargo_bse").HasColumnType("float").IsRequired();
            Property(x => x.AbonoBse).HasColumnName(@"abono_bse").HasColumnType("float").IsRequired();
            Property(x => x.CConc).HasColumnName(@"c_conc").HasColumnType("tinyint").IsRequired();
            Property(x => x.FecConc).HasColumnName(@"fec_conc").HasColumnType("datetime").IsRequired();
            Property(x => x.IdConc).HasColumnName(@"id_conc").HasColumnType("int").IsRequired();
            Property(x => x.IdTipTrn).HasColumnName(@"id_tip_trn").HasColumnType("int").IsRequired();
            Property(x => x.CChq).HasColumnName(@"c_chq").HasColumnType("tinyint").IsRequired();
            Property(x => x.CCnl).HasColumnName(@"c_cnl").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdMod).HasColumnName(@"id_mod").HasColumnType("int").IsRequired();
            Property(x => x.IdRelBcoIva).HasColumnName(@"id_rel_bco_iva").HasColumnType("int").IsRequired();
            Property(x => x.CApl).HasColumnName(@"c_apl").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdCli).HasColumnName(@"id_cli").HasColumnType("int").IsRequired();
            Property(x => x.IdProv).HasColumnName(@"id_prov").HasColumnType("int").IsRequired();
            Property(x => x.CAboCta).HasColumnName(@"c_abo_cta").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdPol).HasColumnName(@"id_pol").HasColumnType("int").IsRequired();
            Property(x => x.IdCtlIva).HasColumnName(@"id_ctl_iva").HasColumnType("int").IsRequired();
            Property(x => x.IdSuc).HasColumnName(@"id_suc").HasColumnType("int").IsRequired();
            Property(x => x.SdoAcu).HasColumnName(@"sdo_acu").HasColumnType("float").IsRequired();
            Property(x => x.SdoAcuConc).HasColumnName(@"sdo_acu_conc").HasColumnType("float").IsRequired();
            Property(x => x.CDev).HasColumnName(@"c_dev").HasColumnType("int").IsRequired();
            Property(x => x.Ped).HasColumnName(@"ped").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FecDev).HasColumnName(@"fec_dev").HasColumnType("datetime").IsRequired();
            Property(x => x.CMisDoc).HasColumnName(@"c_mis_doc").HasColumnType("tinyint").IsRequired();
            Property(x => x.CSalIni).HasColumnName(@"c_sal_ini").HasColumnType("tinyint").IsRequired();
            Property(x => x.IdBcoAuxApl).HasColumnName(@"id_bco_aux_apl").HasColumnType("int").IsRequired();
            Property(x => x.IdTurno).HasColumnName(@"id_turno").HasColumnType("int").IsRequired();
            Property(x => x.CtaDest).HasColumnName(@"cta_dest").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.BcoCodDest).HasColumnName(@"bco_cod_dest").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.DesBcoDest).HasColumnName(@"des_bco_dest").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40);

            // Foreign keys
            HasRequired(a => a.BcoConc).WithMany(b => b.BcoAuxes).HasForeignKey(c => c.IdConc).WillCascadeOnDelete(false); // FK_bco_aux_bco_conc
            HasRequired(a => a.BcoCuenta).WithMany(b => b.BcoAuxes).HasForeignKey(c => c.IdCta).WillCascadeOnDelete(false); // FK_bco_aux_bco_cuentas
            HasRequired(a => a.BcoTipTrn).WithMany(b => b.BcoAuxes).HasForeignKey(c => c.IdTipTrn).WillCascadeOnDelete(false); // FK_bco_aux_bco_tip_trn
            HasRequired(a => a.SisConcepto).WithMany(b => b.BcoAuxes).HasForeignKey(c => c.IdCpt).WillCascadeOnDelete(false); // FK_bco_aux_bco_conceptos
        }
    }

}
// </auto-generated>
