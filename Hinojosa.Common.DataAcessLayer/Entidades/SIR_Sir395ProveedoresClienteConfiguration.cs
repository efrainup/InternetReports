// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_395_PROVEEDORES_CLIENTES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir395ProveedoresClienteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir395ProveedoresCliente>
    {
        public SIR_Sir395ProveedoresClienteConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir395ProveedoresClienteConfiguration(string schema)
        {
            ToTable("SIR_395_PROVEEDORES_CLIENTES", schema);
            HasKey(x => new { x.NIdProveedor42, x.NIdCliente, x.NVinculacion });

            Property(x => x.NIdProveedor42).HasColumnName(@"nIdProveedor42").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NIdCliente).HasColumnName(@"nIdCliente").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NVinculacion).HasColumnName(@"nVinculacion").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.CatCliente).WithMany(b => b.SIR_Sir395ProveedoresCliente).HasForeignKey(c => c.NIdCliente).WillCascadeOnDelete(false); // FK_SIR_395_PROVEEDORES_CLIENTES_cat_clientes
            HasRequired(a => a.SIR_Sir42Proveedore).WithMany(b => b.SIR_Sir395ProveedoresCliente).HasForeignKey(c => c.NIdProveedor42).WillCascadeOnDelete(false); // FK_SIR_395_PROVEEDORES_CLIENTES_SIR_42_PROVEEDORES
        }
    }

}
// </auto-generated>
