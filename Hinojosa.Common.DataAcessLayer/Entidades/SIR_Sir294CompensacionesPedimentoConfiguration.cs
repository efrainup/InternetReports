// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_294_COMPENSACIONES_PEDIMENTO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir294CompensacionesPedimentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir294CompensacionesPedimento>
    {
        public SIR_Sir294CompensacionesPedimentoConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir294CompensacionesPedimentoConfiguration(string schema)
        {
            ToTable("SIR_294_COMPENSACIONES_PEDIMENTO", schema);
            HasKey(x => x.NIdCompenPed294);

            Property(x => x.NIdCompenPed294).HasColumnName(@"nIdCompenPed294").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NIdPedimento149).HasColumnName(@"nIdPedimento149").HasColumnType("int").IsRequired();
            Property(x => x.NIdPedOriginal).HasColumnName(@"nIdPedOriginal").HasColumnType("int").IsOptional();
            Property(x => x.DFecha).HasColumnName(@"dFecha").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.SPedimento).HasColumnName(@"sPedimento").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(7);
            Property(x => x.NIdPatente70).HasColumnName(@"nIdPatente70").HasColumnType("int").IsOptional();
            Property(x => x.SHPatente).HasColumnName(@"sHPatente").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.NIdAduSec06).HasColumnName(@"nIdAduSec06").HasColumnType("int").IsRequired();
            Property(x => x.SHAduSec).HasColumnName(@"sHAduSec").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.NIdTiposImp30).HasColumnName(@"nIdTiposImp30").HasColumnType("int").IsRequired();
            Property(x => x.NImporte).HasColumnName(@"nImporte").HasColumnType("decimal").IsOptional().HasPrecision(12,3);
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsRequired();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.SIR_Sir149Pedimento_NIdPedOriginal).WithMany(b => b.SIR_Sir294CompensacionesPedimento_NIdPedOriginal).HasForeignKey(c => c.NIdPedOriginal).WillCascadeOnDelete(false); // FK_SIR_294_COMPENSACIONES_PEDIMENTO_PEDIMENTO_ORIGINAL
            HasOptional(a => a.SIR_Sir70Patente).WithMany(b => b.SIR_Sir294CompensacionesPedimento).HasForeignKey(c => c.NIdPatente70).WillCascadeOnDelete(false); // FK_SIR_294_COMPENSACIONES_PEDIMENTO_SIR_70_PATENTES
            HasRequired(a => a.CatUsr).WithMany(b => b.SIR_Sir294CompensacionesPedimento).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_294_COMPENSACIONES_PEDIMENTO_cat_usr_ed
            HasRequired(a => a.SIR_Sir06AduanaSec).WithMany(b => b.SIR_Sir294CompensacionesPedimento).HasForeignKey(c => c.NIdAduSec06).WillCascadeOnDelete(false); // FK_SIR_294_COMPENSACIONES_PEDIMENTO_SIR_06_ADUANA_SEC
            HasRequired(a => a.SIR_Sir149Pedimento_NIdPedimento149).WithMany(b => b.SIR_Sir294CompensacionesPedimento_NIdPedimento149).HasForeignKey(c => c.NIdPedimento149).WillCascadeOnDelete(false); // FK_SIR_294_COMPENSACIONES_PEDIMENTO_SIR_149_PEDIMENTO
            HasRequired(a => a.SIR_Sir30TiposImpuesto).WithMany(b => b.SIR_Sir294CompensacionesPedimento).HasForeignKey(c => c.NIdTiposImp30).WillCascadeOnDelete(false); // FK_SIR_294_COMPENSACIONES_PEDIMENTO_SIR_30_TIPOS_IMPUESTOS
        }
    }

}
// </auto-generated>
