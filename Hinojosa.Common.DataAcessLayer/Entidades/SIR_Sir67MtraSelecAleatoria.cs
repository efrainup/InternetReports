// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_67_MTRA_SELEC_ALEATORIA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir67MtraSelecAleatoria
    {
        [Required]
        [Display(Name = "N ID mtra sel ale 67")]
        public int NIdMtraSelAle67 { get; set; } // nIdMtraSelAle67 (Primary key)

        [Display(Name = "N primera sel")]
        public byte? NPrimeraSel { get; set; } // nPrimeraSel

        [Display(Name = "N segunda sel")]
        public byte? NSegundaSel { get; set; } // nSegundaSel

        [Display(Name = "B multas prim sel")]
        public bool? BMultasPrimSel { get; set; } // bMultasPrimSel

        [Display(Name = "D fecha prim sel")]
        public System.DateTime? DFechaPrimSel { get; set; } // dFechaPrimSel

        [Display(Name = "D fecha seg sel")]
        public System.DateTime? DFechaSegSel { get; set; } // dFechaSegSel

        [Display(Name = "D fecha acta muestreo")]
        public System.DateTime? DFechaActaMuestreo { get; set; } // dFechaActaMuestreo

        [Display(Name = "S motivo prim sel")]
        public string SMotivoPrimSel { get; set; } // sMotivoPrimSel

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "S num muestreo")]
        public string SNumMuestreo { get; set; } // sNumMuestreo (length: 50)

        [Display(Name = "N importe prim sel")]
        public decimal? NImportePrimSel { get; set; } // nImportePrimSel

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha edicion")]
        public System.DateTime DFechaEdicion { get; set; } // dFechaEdicion

        [Required]
        [Display(Name = "N ID usuario ed")]
        public int NIdUsuarioEd { get; set; } // nIdUsuarioEd

        [Display(Name = "N tercera sel")]
        public byte? NTerceraSel { get; set; } // nTerceraSel

        [Display(Name = "D fecha ter sel")]
        public System.DateTime? DFechaTerSel { get; set; } // dFechaTerSel

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S archivo prim sel")]
        public string SArchivoPrimSel { get; set; } // sArchivoPrimSel (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S archivo seg sel")]
        public string SArchivoSegSel { get; set; } // sArchivoSegSel (length: 30)

        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "S archivo ter sel")]
        public string SArchivoTerSel { get; set; } // sArchivoTerSel (length: 30)

        [Display(Name = "S motivo seg sel")]
        public string SMotivoSegSel { get; set; } // sMotivoSegSel

        [Display(Name = "N importe seg sel")]
        public decimal? NImporteSegSel { get; set; } // nImporteSegSel

        [Required]
        [Display(Name = "B multas seg sel")]
        public bool BMultasSegSel { get; set; } // bMultasSegSel

        [Display(Name = "S motivo ter sel")]
        public string SMotivoTerSel { get; set; } // sMotivoTerSel

        [Display(Name = "N importe ter sel")]
        public decimal? NImporteTerSel { get; set; } // nImporteTerSel

        [Required]
        [Display(Name = "B multas ter sel")]
        public bool BMultasTerSel { get; set; } // bMultasTerSel

        [DataType(DataType.DateTime)]
        [Display(Name = "D fecha fin prim sel")]
        public System.DateTime? DFechaFinPrimSel { get; set; } // dFechaFinPrimSel

        [DataType(DataType.DateTime)]
        [Display(Name = "D fin revision transporte")]
        public System.DateTime? DFinRevisionTransporte { get; set; } // dFinRevisionTransporte

        [Display(Name = "B es pama")]
        public bool? BEsPama { get; set; } // bEsPAMA

        [Display(Name = "N area")]
        public byte? NArea { get; set; } // nArea

        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "S area responsable")]
        public string SAreaResponsable { get; set; } // sAreaResponsable (length: 800)

        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "S responsable")]
        public string SResponsable { get; set; } // sResponsable (length: 800)

        [Display(Name = "N ID usuario tramitador 01")]
        public int? NIdUsuarioTramitador01 { get; set; } // nIdUsuarioTramitador01

        [Display(Name = "B rojo primer selec")]
        public bool? BRojoPrimerSelec { get; set; } // bRojoPrimerSelec

        [Display(Name = "B verde primer selec")]
        public bool? BVerdePrimerSelec { get; set; } // bVerdePrimerSelec

        [Display(Name = "B desaduanado")]
        public bool? BDesaduanado { get; set; } // bDesaduanado

        [Display(Name = "B cumplido")]
        public bool? BCumplido { get; set; } // bCumplido

        [DataType(DataType.DateTime)]
        [Display(Name = "D fe rojo selec auto")]
        public System.DateTime? DFeRojoSelecAuto { get; set; } // dFeRojoSelecAuto

        [DataType(DataType.DateTime)]
        [Display(Name = "D fe verde selec auto")]
        public System.DateTime? DFeVerdeSelecAuto { get; set; } // dFeVerdeSelecAuto

        [DataType(DataType.DateTime)]
        [Display(Name = "D fe desaduanado selec auto")]
        public System.DateTime? DFeDesaduanadoSelecAuto { get; set; } // dFeDesaduanadoSelecAuto

        [DataType(DataType.DateTime)]
        [Display(Name = "D fe cumplido selec auto")]
        public System.DateTime? DFeCumplidoSelecAuto { get; set; } // dFeCumplidoSelecAuto

        [Display(Name = "N ID usuario tramitador reco 01")]
        public int? NIdUsuarioTramitadorReco01 { get; set; } // nIdUsuarioTramitadorReco01

        [Display(Name = "N ID causa incidencia 702")]
        public int? NIdCausaIncidencia702 { get; set; } // nIdCausaIncidencia702

        [Display(Name = "D inicio rni")]
        public System.DateTime? DInicioRni { get; set; } // dInicioRNI

        [Display(Name = "D resultado rni")]
        public System.DateTime? DResultadoRni { get; set; } // dResultadoRNI

        // Reverse navigation

        /// <summary>
        /// Child SIR_Sir206Remesa where [SIR_206_REMESAS].[nIdMtraSelAle67] point to this entity (FK_SIR_206_REMESAS_SIR_67_MTRA_SELEC_ALEATORIA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir206Remesa> SIR_Sir206Remesa { get; set; } // SIR_206_REMESAS.FK_SIR_206_REMESAS_SIR_67_MTRA_SELEC_ALEATORIA
        /// <summary>
        /// Child SIR_Sir60Referencia where [SIR_60_REFERENCIAS].[nIdMtraSelAle67] point to this entity (FK_SIR_60_REFERENCIAS_SIR_67_MTRA_SELEC_ALEATORIA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir60Referencia> SIR_Sir60Referencia { get; set; } // SIR_60_REFERENCIAS.FK_SIR_60_REFERENCIAS_SIR_67_MTRA_SELEC_ALEATORIA
        /// <summary>
        /// Child SIR_Sir731ActasMuestreoAleatorio where [SIR_731_ACTAS_MUESTREO_ALEATORIO].[nIdMtraSelAle67] point to this entity (FK_SIR_731_ACTAS_MUESTREO_ALEATORIO_SIR_67_MTRA_SELEC_ALEATORIA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SIR_Sir731ActasMuestreoAleatorio> SIR_Sir731ActasMuestreoAleatorio { get; set; } // SIR_731_ACTAS_MUESTREO_ALEATORIO.FK_SIR_731_ACTAS_MUESTREO_ALEATORIO_SIR_67_MTRA_SELEC_ALEATORIA

        // Foreign keys

        /// <summary>
        /// Parent CatUsr pointed by [SIR_67_MTRA_SELEC_ALEATORIA].([NIdUsuarioEd]) (FK_SIR_67_MTRA_SELEC_ALEATORIA_cat_usr_ed)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_SIR_67_MTRA_SELEC_ALEATORIA_cat_usr_ed

        public SIR_Sir67MtraSelecAleatoria()
        {
            NPrimeraSel = 1;
            NSegundaSel = 1;
            BMultasPrimSel = false;
            DFechaEdicion = System.DateTime.Now;
            NIdUsuarioEd = 0;
            NTerceraSel = 1;
            BMultasSegSel = false;
            BMultasTerSel = false;
            SIR_Sir206Remesa = new System.Collections.Generic.List<SIR_Sir206Remesa>();
            SIR_Sir60Referencia = new System.Collections.Generic.List<SIR_Sir60Referencia>();
            SIR_Sir731ActasMuestreoAleatorio = new System.Collections.Generic.List<SIR_Sir731ActasMuestreoAleatorio>();
        }
    }

}
// </auto-generated>
