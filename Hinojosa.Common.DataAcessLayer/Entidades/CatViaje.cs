// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // cat_viajes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CatViaje
    {
        [Required]
        [Display(Name = "Id viaje")]
        public int IdViaje { get; set; } // id_viaje (Primary key)

        [Required]
        [Display(Name = "Id viaje padre")]
        public int IdViajePadre { get; set; } // id_viaje_padre

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [Display(Name = "Id usr aut")]
        public int IdUsrAut { get; set; } // id_usr_aut

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec aut")]
        public System.DateTime FecAut { get; set; } // fec_aut

        [Required]
        [Display(Name = "Id usr rech")]
        public int IdUsrRech { get; set; } // id_usr_rech

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec rech")]
        public System.DateTime FecRech { get; set; } // fec_rech

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Evento")]
        public string Evento { get; set; } // evento (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Motivo")]
        public string Motivo { get; set; } // motivo (length: 50)

        [Required]
        [Display(Name = "Id emp prov")]
        public int IdEmpProv { get; set; } // id_emp_prov

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime FecReg { get; set; } // fec_reg

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec ini")]
        public System.DateTime FecIni { get; set; } // fec_ini

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec fin")]
        public System.DateTime FecFin { get; set; } // fec_fin

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Origen")]
        public string Origen { get; set; } // origen (length: 50)

        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Destino")]
        public string Destino { get; set; } // destino (length: 50)

        [Required]
        [Display(Name = "Distancia")]
        public double Distancia { get; set; } // distancia

        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Tipo traslado")]
        public string TipoTraslado { get; set; } // tipo_traslado (length: 30)

        [Display(Name = "Acompanantes")]
        public string Acompanantes { get; set; } // acompanantes

        [Required]
        [Display(Name = "Status")]
        public int Status { get; set; } // status

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec cnl")]
        public System.DateTime FecCnl { get; set; } // fec_cnl

        [Required]
        [Display(Name = "Id usr cnl")]
        public int IdUsrCnl { get; set; } // id_usr_cnl

        [Required]
        [Display(Name = "Id nota")]
        public int IdNota { get; set; } // id_nota

        [Required]
        [Display(Name = "C emp prov")]
        public int CEmpProv { get; set; } // c_emp_prov

        [Required(AllowEmptyStrings = true)]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Comentario")]
        public string Comentario { get; set; } // comentario (length: 250)

        public CatViaje()
        {
            IdViaje = 0;
            IdViajePadre = 0;
            IdUsr = 0;
            IdUsrAut = 0;
            IdUsrRech = 0;
            Evento = "";
            Motivo = "";
            IdEmpProv = 0;
            Origen = "";
            Destino = "";
            Distancia = 0;
            TipoTraslado = "";
            Acompanantes = "";
            Status = 0;
            IdUsrCnl = 0;
            IdNota = 0;
            CEmpProv = 0;
            Comentario = "";
        }
    }

}
// </auto-generated>
