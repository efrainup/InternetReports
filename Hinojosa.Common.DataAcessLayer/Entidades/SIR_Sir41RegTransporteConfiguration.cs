// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // SIR_41_REG_TRANSPORTES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SIR_Sir41RegTransporteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SIR_Sir41RegTransporte>
    {
        public SIR_Sir41RegTransporteConfiguration()
            : this("SIR")
        {
        }

        public SIR_Sir41RegTransporteConfiguration(string schema)
        {
            ToTable("SIR_41_REG_TRANSPORTES", schema);
            HasKey(x => x.NIdRegTrans41);

            Property(x => x.NIdRegTrans41).HasColumnName(@"nIdRegTrans41").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SClave).HasColumnName(@"sClave").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(17);
            Property(x => x.NNumeroViaje).HasColumnName(@"nNumeroViaje").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.DFechaEta).HasColumnName(@"dFechaETA").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BPagoAnticipado).HasColumnName(@"bPagoAnticipado").HasColumnType("bit").IsRequired();
            Property(x => x.STerminalLlegada).HasColumnName(@"sTerminalLlegada").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(60);
            Property(x => x.DFechaLlegada).HasColumnName(@"dFechaLlegada").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.BArriboConfirmado).HasColumnName(@"bArriboConfirmado").HasColumnType("bit").IsRequired();
            Property(x => x.NIdConsignataria).HasColumnName(@"nIdConsignataria").HasColumnType("int").IsOptional();
            Property(x => x.DFechaDescargo).HasColumnName(@"dFechaDescargo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaFondeo).HasColumnName(@"dFechaFondeo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaSalida).HasColumnName(@"dFechaSalida").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DFechaCierreTerminal).HasColumnName(@"dFechaCierreTerminal").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdAduSec06).HasColumnName(@"nIdAduSec06").HasColumnType("int").IsRequired();
            Property(x => x.DFechaEdicion).HasColumnName(@"dFechaEdicion").HasColumnType("datetime").IsOptional();
            Property(x => x.NIdUsuarioEd).HasColumnName(@"nIdUsuarioEd").HasColumnType("int").IsOptional();
            Property(x => x.NIdSucPatAdu71).HasColumnName(@"nIdSucPatAdu71").HasColumnType("int").IsOptional();
            Property(x => x.NIdTrans175).HasColumnName(@"nIdTrans175").HasColumnType("int").IsOptional();
            Property(x => x.NTipo).HasColumnName(@"nTipo").HasColumnType("int").IsOptional();
            Property(x => x.DFechaPresentacion).HasColumnName(@"dFechaPresentacion").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NIdAlmacen).HasColumnName(@"nIdAlmacen").HasColumnType("int").IsOptional();
            Property(x => x.SCajaTractor).HasColumnName(@"sCajaTractor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.NIdEntrada156).HasColumnName(@"nIdEntrada156").HasColumnType("int").IsOptional();
            Property(x => x.NTipoOperacion).HasColumnName(@"nTipoOperacion").HasColumnType("tinyint").IsRequired();
            Property(x => x.NIdAlmacenSalida).HasColumnName(@"nIdAlmacenSalida").HasColumnType("int").IsOptional();
            Property(x => x.NIdTerminal).HasColumnName(@"nIdTerminal").HasColumnType("int").IsOptional();
            Property(x => x.BTieneFirmaPedimento).HasColumnName(@"bTieneFirmaPedimento").HasColumnType("bit").IsRequired();
            Property(x => x.NIdPais01).HasColumnName(@"nIdPais01").HasColumnType("int").IsOptional();
            Property(x => x.NIdConsignataria42).HasColumnName(@"nIdConsignataria42").HasColumnType("int").IsOptional();
            Property(x => x.NIdTerminal42).HasColumnName(@"nIdTerminal42").HasColumnType("int").IsOptional();
            Property(x => x.NIdAlmacen35).HasColumnName(@"nIdAlmacen35").HasColumnType("int").IsOptional();
            Property(x => x.NIdAlmacenSalida42).HasColumnName(@"nIdAlmacenSalida42").HasColumnType("int").IsOptional();
            Property(x => x.NIdProveedor42).HasColumnName(@"nIdProveedor42").HasColumnType("int").IsOptional();
            Property(x => x.SVia).HasColumnName(@"sVia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.NIdRecintoTraslado).HasColumnName(@"nIdRecintoTraslado").HasColumnType("int").IsOptional();
            Property(x => x.DFechaLlegadaFh).HasColumnName(@"dFechaLlegadaFH").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.SNombreAeroPuertos).HasColumnName(@"sNombreAeroPuertos").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);

            // Foreign keys
            HasOptional(a => a.Admin_Adminc35Almacene).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdAlmacen35).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_ADMINC_35_ALMACENES_nIdAlmacen35
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdAlmacenSalida42).WithMany(b => b.SIR_Sir41RegTransporte_NIdAlmacenSalida42).HasForeignKey(c => c.NIdAlmacenSalida42).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_ADMINC_42_PROVEEDORES_nIdAlmacenSalida42
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdConsignataria42).WithMany(b => b.SIR_Sir41RegTransporte_NIdConsignataria42).HasForeignKey(c => c.NIdConsignataria42).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_ADMINC_42_PROVEEDORES_nIdConsignataria42
            HasOptional(a => a.Admin_Adminc42Proveedore_NIdTerminal42).WithMany(b => b.SIR_Sir41RegTransporte_NIdTerminal42).HasForeignKey(c => c.NIdTerminal42).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_ADMINC_42_PROVEEDORES_nIdTerminal42
            HasOptional(a => a.CatAlmac).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdAlmacen).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_cat_almac
            HasOptional(a => a.CatProv_NIdAlmacenSalida).WithMany(b => b.SIR_Sir41RegTransporte_NIdAlmacenSalida).HasForeignKey(c => c.NIdAlmacenSalida).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_cat_almac_salida
            HasOptional(a => a.CatProv_NIdConsignataria).WithMany(b => b.SIR_Sir41RegTransporte_NIdConsignataria).HasForeignKey(c => c.NIdConsignataria).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_cat_prov2
            HasOptional(a => a.CatProv_NIdRecintoTraslado).WithMany(b => b.SIR_Sir41RegTransporte_NIdRecintoTraslado).HasForeignKey(c => c.NIdRecintoTraslado).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_cat_prov_recinto_traslado
            HasOptional(a => a.CatProv_NIdTerminal).WithMany(b => b.SIR_Sir41RegTransporte_NIdTerminal).HasForeignKey(c => c.NIdTerminal).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_cat_prov_terminal
            HasOptional(a => a.CatUsr).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdUsuarioEd).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_cat_usr_ed
            HasOptional(a => a.SIR_Sir01Pais).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdPais01).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_01_PAISES
            HasOptional(a => a.SIR_Sir05MediosTransporte).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NTipo).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_05_MEDIOS_TRANSPORTE
            HasOptional(a => a.SIR_Sir156EntradasBodega).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdEntrada156).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_156_ENTRADAS_BODEGAS
            HasOptional(a => a.SIR_Sir175Transporte).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdTrans175).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_175_TRANSPORTES
            HasOptional(a => a.SIR_Sir42Proveedore).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdProveedor42).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_42_PROVEEDORES
            HasOptional(a => a.SIR_Sir71SucursalPatenteAduana).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdSucPatAdu71).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_71_SUCURSAL_PATENTE_ADUANA
            HasRequired(a => a.SIR_Sir06AduanaSec).WithMany(b => b.SIR_Sir41RegTransporte).HasForeignKey(c => c.NIdAduSec06).WillCascadeOnDelete(false); // FK_SIR_41_REG_TRANSPORTES_SIR_06_ADUANA_SEC
        }
    }

}
// </auto-generated>
