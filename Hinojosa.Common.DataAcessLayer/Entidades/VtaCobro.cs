// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // vta_cobros
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VtaCobro
    {
        [Required]
        [Display(Name = "Id vta cob")]
        public int IdVtaCob { get; set; } // id_vta_cob (Primary key)

        [Required]
        [Display(Name = "Id doc vta")]
        public int IdDocVta { get; set; } // id_doc_vta

        [Required]
        [Display(Name = "Id caja")]
        public int IdCaja { get; set; } // id_caja

        [Required]
        [Display(Name = "Id corte")]
        public int IdCorte { get; set; } // id_corte

        [Required]
        [Display(Name = "Id usr")]
        public int IdUsr { get; set; } // id_usr

        [Required]
        [Display(Name = "Id nota")]
        public int IdNota { get; set; } // id_nota

        [Required]
        [Display(Name = "Id tip trn")]
        public int IdTipTrn { get; set; } // id_tip_trn

        [Required]
        [Display(Name = "Id cpt")]
        public int IdCpt { get; set; } // id_cpt

        [Required]
        [Display(Name = "Id cta")]
        public int IdCta { get; set; } // id_cta

        [Required]
        [Display(Name = "Id tip doc")]
        public int IdTipDoc { get; set; } // id_tip_doc

        [Required]
        [Display(Name = "Num doc")]
        public int NumDoc { get; set; } // num_doc

        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fec doc")]
        public System.DateTime FecDoc { get; set; } // fec_doc

        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Ref")]
        public string @Ref { get; set; } // ref (length: 25)

        [Required]
        [Display(Name = "Num doc cli")]
        public int NumDocCli { get; set; } // num_doc_cli

        [Required]
        [Display(Name = "Mto pago")]
        public double MtoPago { get; set; } // mto_pago

        [Required]
        [Display(Name = "Cambio")]
        public double Cambio { get; set; } // cambio

        [Required]
        [Display(Name = "Mto total")]
        public double MtoTotal { get; set; } // mto_total

        [Required]
        [Display(Name = "Id suc")]
        public int IdSuc { get; set; } // id_suc

        [Required]
        [Display(Name = "Id cierre")]
        public int IdCierre { get; set; } // id_cierre

        [Required]
        [Display(Name = "Id bco aux")]
        public int IdBcoAux { get; set; } // id_bco_aux

        [Required]
        [Display(Name = "Id mda")]
        public int IdMda { get; set; } // id_mda

        [Required]
        [Display(Name = "Oper")]
        public byte Oper { get; set; } // oper

        [Required]
        [Display(Name = "Tc")]
        public double Tc { get; set; } // tc

        [Required]
        [Display(Name = "Mto pago bse")]
        public double MtoPagoBse { get; set; } // mto_pago_bse

        [Required]
        [Display(Name = "Cambio bse")]
        public double CambioBse { get; set; } // cambio_bse

        [Required]
        [Display(Name = "Mto total bse")]
        public double MtoTotalBse { get; set; } // mto_total_bse

        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // status

        [DataType(DataType.DateTime)]
        [Display(Name = "Fec reg")]
        public System.DateTime? FecReg { get; set; } // fec_reg

        // Foreign keys

        /// <summary>
        /// Parent CatCaja pointed by [vta_cobros].([IdCaja]) (FK_vta_cobros_cat_cajas)
        /// </summary>
        public virtual CatCaja CatCaja { get; set; } // FK_vta_cobros_cat_cajas

        /// <summary>
        /// Parent CatUsr pointed by [vta_cobros].([IdUsr]) (FK_vta_cobros_cat_usr)
        /// </summary>
        public virtual CatUsr CatUsr { get; set; } // FK_vta_cobros_cat_usr

        /// <summary>
        /// Parent VtaCorte pointed by [vta_cobros].([IdCorte], [IdCaja]) (FK_vta_cobros_vta_cortes)
        /// </summary>
        public virtual VtaCorte VtaCorte { get; set; } // FK_vta_cobros_vta_cortes

        /// <summary>
        /// Parent VtaMovDoc pointed by [vta_cobros].([IdDocVta]) (FK_vta_cobros_vta_mov_doc)
        /// </summary>
        public virtual VtaMovDoc VtaMovDoc { get; set; } // FK_vta_cobros_vta_mov_doc

        public VtaCobro()
        {
            IdVtaCob = 0;
            IdDocVta = 0;
            IdCaja = 0;
            IdCorte = 0;
            IdUsr = 0;
            IdNota = 0;
            IdTipTrn = 0;
            IdCpt = 0;
            IdCta = 0;
            IdTipDoc = 0;
            NumDoc = 9;
            @Ref = "";
            NumDocCli = 0;
            MtoPago = 0;
            Cambio = 0;
            MtoTotal = 0;
            IdSuc = 1;
            IdCierre = 0;
            IdBcoAux = 0;
            IdMda = 0;
            Oper = 0;
            Tc = 0;
            MtoPagoBse = 0;
            CambioBse = 0;
            MtoTotalBse = 0;
            Status = 1;
        }
    }

}
// </auto-generated>
