// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace Hinojosa.Common.DataAccessLayer.Entidades
{

    // imp_com_part
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImpComPart
    {
        [Required]
        [Display(Name = "Imp ID part")]
        public int ImpIdPart { get; set; } // imp_id_part (Primary key)

        [Display(Name = "Imp ID com")]
        public int? ImpIdCom { get; set; } // imp_id_com

        [Display(Name = "Imp ID suc")]
        public int? ImpIdSuc { get; set; } // imp_id_suc

        [DataType(DataType.DateTime)]
        [Display(Name = "Imp fec req")]
        public System.DateTime? ImpFecReq { get; set; } // imp_fec_req

        [Display(Name = "Imp ID pro")]
        public int? ImpIdPro { get; set; } // imp_id_pro

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Imp ID otr sis pro")]
        public string ImpIdOtrSisPro { get; set; } // imp_id_otr_sis_pro (length: 10)

        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Imp des pro")]
        public string ImpDesPro { get; set; } // imp_des_pro (length: 250)

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Imp codsat udm")]
        public string ImpCodsatUdm { get; set; } // imp_codsat_udm (length: 5)

        [Display(Name = "Imp ftr")]
        public double? ImpFtr { get; set; } // imp_ftr

        [Display(Name = "Imp cant")]
        public double? ImpCant { get; set; } // imp_cant

        [Display(Name = "Imp ult cto")]
        public double? ImpUltCto { get; set; } // imp_ult_cto

        [Display(Name = "Imp dcto ptgo")]
        public double? ImpDctoPtgo { get; set; } // imp_dcto_ptgo

        [Display(Name = "Imp mto ptgo")]
        public double? ImpMtoPtgo { get; set; } // imp_mto_ptgo

        [Display(Name = "Imp cto dcto")]
        public double? ImpCtoDcto { get; set; } // imp_cto_dcto

        [Display(Name = "Imp importe sdcto")]
        public double? ImpImporteSdcto { get; set; } // imp_importe_sdcto

        [Display(Name = "Imp importe")]
        public double? ImpImporte { get; set; } // imp_importe

        [Display(Name = "Imp imptos")]
        public double? ImpImptos { get; set; } // imp_imptos

        [Display(Name = "Imp total")]
        public double? ImpTotal { get; set; } // imp_total

        [Display(Name = "Imp mto ieps")]
        public double? ImpMtoIeps { get; set; } // imp_mto_ieps

        [Display(Name = "Imp importe alm")]
        public double? ImpImporteAlm { get; set; } // imp_importe_alm

        [Display(Name = "Imp c inv")]
        public byte? ImpCInv { get; set; } // imp_c_inv

        [Display(Name = "Imp por comprar")]
        public double? ImpPorComprar { get; set; } // imp_por_comprar

        [Display(Name = "Imp cant dev")]
        public double? ImpCantDev { get; set; } // imp_cant_dev

        [Display(Name = "Imp gastos")]
        public double? ImpGastos { get; set; } // imp_gastos

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Imp codsat mda")]
        public string ImpCodsatMda { get; set; } // imp_codsat_mda (length: 5)

        [Display(Name = "Imp tc")]
        public double? ImpTc { get; set; } // imp_tc

        [Display(Name = "Imp oper")]
        public byte? ImpOper { get; set; } // imp_oper

        [Display(Name = "Imp ult cto bse")]
        public double? ImpUltCtoBse { get; set; } // imp_ult_cto_bse

        [Display(Name = "Imp dcto ptgo bse")]
        public double? ImpDctoPtgoBse { get; set; } // imp_dcto_ptgo_bse

        [Display(Name = "Imp mto ptgo bse")]
        public double? ImpMtoPtgoBse { get; set; } // imp_mto_ptgo_bse

        [Display(Name = "Imp cto dcto bse")]
        public double? ImpCtoDctoBse { get; set; } // imp_cto_dcto_bse

        [Display(Name = "Imp importe sdcto bse")]
        public double? ImpImporteSdctoBse { get; set; } // imp_importe_sdcto_bse

        [Display(Name = "Imp importe bse")]
        public double? ImpImporteBse { get; set; } // imp_importe_bse

        [Display(Name = "Imp imptos bse")]
        public double? ImpImptosBse { get; set; } // imp_imptos_bse

        [Display(Name = "Imp total bse")]
        public double? ImpTotalBse { get; set; } // imp_total_bse

        [Display(Name = "Imp por recibir")]
        public double? ImpPorRecibir { get; set; } // imp_por_recibir

        [Display(Name = "Imp ID alm")]
        public int? ImpIdAlm { get; set; } // imp_id_alm

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Imp ID otr sis alm")]
        public string ImpIdOtrSisAlm { get; set; } // imp_id_otr_sis_alm (length: 10)

        [Display(Name = "Imp ID cod srv")]
        public int? ImpIdCodSrv { get; set; } // imp_id_cod_srv

        [Display(Name = "Imp ID cen cto")]
        public int? ImpIdCenCto { get; set; } // imp_id_cen_cto

        [Display(Name = "Imp ID ref")]
        public int? ImpIdRef { get; set; } // imp_id_ref

        [Display(Name = "Imp ID class pro")]
        public int? ImpIdClassPro { get; set; } // imp_id_class_pro

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Imp rfc prov")]
        public string ImpRfcProv { get; set; } // imp_rfc_prov (length: 15)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Imp otr sis prov")]
        public string ImpOtrSisProv { get; set; } // imp_otr_sis_prov (length: 15)

        [Display(Name = "Imp c mis doc")]
        public byte? ImpCMisDoc { get; set; } // imp_c_mis_doc

        [Display(Name = "Imp c ind")]
        public byte? ImpCInd { get; set; } // imp_c_ind

        [Display(Name = "Imp c mod impto")]
        public byte? ImpCModImpto { get; set; } // imp_c_mod_impto

        [Display(Name = "Imp num part")]
        public int? ImpNumPart { get; set; } // imp_num_part

        [Display(Name = "Imp cant canc")]
        public double? ImpCantCanc { get; set; } // imp_cant_canc

        [Display(Name = "Imp cant vta")]
        public double? ImpCantVta { get; set; } // imp_cant_vta

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Imp cmt")]
        public string ImpCmt { get; set; } // imp_cmt (length: 500)

        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Imp cmt imp")]
        public string ImpCmtImp { get; set; } // imp_cmt_imp (length: 500)

        [Display(Name = "Imp status imp")]
        public int? ImpStatusImp { get; set; } // imp_status_imp
    }

}
// </auto-generated>
