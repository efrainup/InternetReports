// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace InternetReports.Models
{

    // cat_clientes_dir
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class CatClientesDirConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CatClientesDir>
    {
        public CatClientesDirConfiguration()
            : this("dbo")
        {
        }

        public CatClientesDirConfiguration(string schema)
        {
            ToTable("cat_clientes_dir", schema);
            HasKey(x => new { x.IdCli, x.Dir1, x.Dir2, x.Ciudad, x.Estado, x.Cp, x.Calle, x.NumInt, x.NumExt, x.Col, x.Deleg, x.Calles });

            Property(x => x.IdCli).HasColumnName(@"id_cli").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Dir1).HasColumnName(@"dir1").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Dir2).HasColumnName(@"dir2").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ciudad).HasColumnName(@"ciudad").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Estado).HasColumnName(@"estado").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Cp).HasColumnName(@"cp").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Tel1).HasColumnName(@"tel1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.Tel2).HasColumnName(@"tel2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.Calle).HasColumnName(@"calle").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NumInt).HasColumnName(@"num_int").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NumExt).HasColumnName(@"num_ext").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Col).HasColumnName(@"col").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Deleg).HasColumnName(@"deleg").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Calles).HasColumnName(@"calles").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.CatCliente).WithMany(b => b.CatClientesDirs).HasForeignKey(c => c.IdCli).WillCascadeOnDelete(false); // FK_cat_clientes_dir_cat_clientes
        }
    }

}
// </auto-generated>
